var searchIndex = {};
searchIndex['sheets'] = {"items":[],"paths":[]};
searchIndex['sheets_lib'] = {"items":[[0,"","sheets_lib","",null,null],[0,"ui","","",null,null],[3,"UI","sheets_lib::ui","",null,null],[5,"run","","",null,{"inputs":[],"output":null}],[0,"sheet","sheets_lib","",null,null],[3,"Sheet","sheets_lib::sheet","",null,null],[3,"Coord","","The position of a cell in a spreadsheet. The cell at A1 has `Coord(0, 0)`.",null,null],[3,"NatCoord","","The position of a cell in a spreadsheet in a \"natural\" representation.\nThe cell at A1 has `Coord(\"A1\", 1)`.",null,null],[4,"Formula","","",null,null],[13,"Atom","","",0,null],[13,"Ref","","",0,null],[13,"Op","","",0,null],[4,"FormulaAtom","","",null,null],[13,"Empty","","",1,null],[13,"String","","",1,null],[13,"Number","","",1,null],[4,"FormulaOp","","",null,null],[13,"Add","","",2,null],[13,"Sub","","",2,null],[13,"Mul","","",2,null],[13,"Div","","",2,null],[13,"Avg","","",2,null],[4,"FormulaErr","","",null,null],[13,"Ref","","",3,null],[13,"Type","","",3,null],[13,"Arity","","",3,null],[5,"natural_to_numeric","","Converts the coordinates in \"natural\" components (see `NatCoord`).",null,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"coord"}}],[5,"natural_col_to_numeric","","",null,{"inputs":[{"name":"str"}],"output":{"name":"usize"}}],[5,"numeric_col_to_natural","","",null,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"new","","",4,{"inputs":[{"name":"sheet"}],"output":{"name":"self"}}],[11,"set","","",4,{"inputs":[{"name":"sheet"},{"name":"coord"},{"name":"formula"}],"output":null}],[11,"value","","",4,{"inputs":[{"name":"sheet"},{"name":"coord"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"formula"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"formula"},{"name":"formula"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"formula"},{"name":"formula"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"formula"}],"output":{"name":"formula"}}],[11,"fmt","","",1,{"inputs":[{"name":"formulaatom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"formulaatom"},{"name":"formulaatom"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"formulaatom"},{"name":"formulaatom"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"formulaatom"}],"output":{"name":"formulaatom"}}],[11,"fmt","","",2,{"inputs":[{"name":"formulaop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"formulaop"},{"name":"formulaop"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"formulaop"},{"name":"formulaop"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"formulaop"}],"output":{"name":"formulaop"}}],[11,"hash","","",5,null],[11,"eq","","",5,{"inputs":[{"name":"coord"},{"name":"coord"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"coord"},{"name":"coord"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"coord"}],"output":{"name":"coord"}}],[11,"fmt","","",5,{"inputs":[{"name":"coord"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"parse","","",5,{"inputs":[{"name":"coord"},{"name":"str"}],"output":{"name":"option"}}],[11,"format_natural","","",5,{"inputs":[{"name":"coord"}],"output":{"name":"string"}}],[11,"eq","","",6,{"inputs":[{"name":"natcoord"},{"name":"natcoord"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"natcoord"},{"name":"natcoord"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"natcoord"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_numeric","","",6,{"inputs":[{"name":"natcoord"}],"output":{"name":"coord"}}],[0,"parser","sheets_lib","",null,null],[5,"parse_formula","sheets_lib::parser","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"format_formula","","",null,{"inputs":[{"name":"formula"}],"output":{"name":"string"}}]],"paths":[[4,"Formula"],[4,"FormulaAtom"],[4,"FormulaOp"],[4,"FormulaErr"],[3,"Sheet"],[3,"Coord"],[3,"NatCoord"]]};
searchIndex['glutin_window'] = {"items":[[0,"","glutin_window","A Glutin window back-end for the Piston game engine.",null,null],[11,"get_major_minor","shader_version::opengl","Gets the minor version of OpenGL.",0,null],[11,"to_GLSL","","Gets GLSL version associated with OpenGL.",0,{"inputs":[{"name":"opengl"}],"output":{"name":"glsl"}}],[11,"cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"opengl"}],"output":{"name":"opengl"}}],[11,"cmp","shader_version::glsl","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"glsl"}],"output":{"name":"glsl"}}],[11,"to_OpenGL","","Gets OpenGL version associated with GLSL.",1,{"inputs":[{"name":"glsl"}],"output":{"name":"opengl"}}],[11,"pick_shader","","",1,{"inputs":[{"name":"glsl"},{"name":"shaders"}],"output":{"name":"option"}}],[11,"new","shader_version","Creates a new shader picker.",2,{"inputs":[{"name":"shaders"}],"output":{"name":"shaders"}}],[11,"set","","Sets source for a shader version.",2,{"inputs":[{"name":"shaders"},{"name":"v"},{"name":"s"}],"output":{"name":"shaders"}}],[11,"get","","Get the closest shader to a shader version.",2,{"inputs":[{"name":"shaders"},{"name":"v"}],"output":{"name":"option"}}],[4,"OpenGL","glutin_window","",null,null],[13,"_2_0","","",0,null],[13,"_2_1","","",0,null],[13,"_3_0","","",0,null],[13,"_3_1","","",0,null],[13,"_3_2","","",0,null],[13,"_3_3","","",0,null],[13,"_4_0","","",0,null],[13,"_4_1","","",0,null],[13,"_4_2","","",0,null],[13,"_4_3","","",0,null],[13,"_4_4","","",0,null],[13,"_4_5","","",0,null],[3,"GlutinWindow","","Contains stuff for game window.",null,null],[12,"window","","The window.",3,null],[5,"map_key","","Maps Glutin's key to Piston's key.",null,{"inputs":[{"name":"virtualkeycode"}],"output":{"name":"key"}}],[5,"map_mouse","","Maps Glutin's mouse button to Piston's mouse button.",null,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"new","","Creates a new game window for Glutin.",3,{"inputs":[{"name":"glutinwindow"},{"name":"opengl"},{"name":"windowsettings"}],"output":{"name":"self"}}],[6,"Event","","",null,null],[11,"size","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"size"}}],[11,"draw_size","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"size"}}],[11,"should_close","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"bool"}}],[11,"swap_buffers","","",3,{"inputs":[{"name":"glutinwindow"}],"output":null}],[11,"poll_event","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"option"}}],[11,"get_title","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"string"}}],[11,"set_title","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"string"}],"output":null}],[11,"get_exit_on_esc","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"bool"}],"output":null}],[11,"set_capture_cursor","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"bool"}],"output":null}],[11,"get_proc_address","","",3,{"inputs":[{"name":"glutinwindow"},{"name":"str"}],"output":{"name":"procaddress"}}],[11,"is_current","","",3,{"inputs":[{"name":"glutinwindow"}],"output":{"name":"bool"}}],[11,"make_current","","",3,{"inputs":[{"name":"glutinwindow"}],"output":null}]],"paths":[[4,"OpenGL"],[4,"GLSL"],[3,"Shaders"],[3,"GlutinWindow"]]};
searchIndex['glutin'] = {"items":[[0,"","glutin","The purpose of this library is to provide an OpenGL context on as many\n platforms as possible.",null,null],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",null,null],[3,"HeadlessContext","","Represents a headless OpenGL context.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[3,"Window","","Represents an OpenGL context and the Window or environment around it.",null,null],[3,"WindowProxy","","Represents a thread safe subset of operations that can be called\non a window. This structure can be safely cloned and sent between\nthreads.",null,null],[3,"PollEventsIterator","","An iterator for the `poll_events` function.",null,null],[3,"WaitEventsIterator","","An iterator for the `wait_events` function.",null,null],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",null,null],[3,"MonitorID","","Identifier for a monitor.",null,null],[3,"PixelFormat","","Describes a possible format. Unused.",null,null],[12,"hardware_accelerated","","",0,null],[12,"color_bits","","",0,null],[12,"alpha_bits","","",0,null],[12,"depth_bits","","",0,null],[12,"stencil_bits","","",0,null],[12,"stereoscopy","","",0,null],[12,"double_buffer","","",0,null],[12,"multisampling","","",0,null],[12,"srgb","","",0,null],[4,"Event","","",null,null],[13,"Resized","","The size of the window has changed.",1,null],[13,"Moved","","The position of the window has changed.",1,null],[13,"Closed","","The window has been closed.",1,null],[13,"ReceivedCharacter","","The window received a unicode character.",1,null],[13,"Focused","","The window gained or lost focus.",1,null],[13,"KeyboardInput","","An event from the keyboard has been received.",1,null],[13,"MouseMoved","","The cursor has moved on the window.",1,null],[13,"MouseWheel","","Returns the horizontal and vertical mouse scrolling.",1,null],[13,"MouseInput","","An event from the mouse has been received.",1,null],[13,"Awakened","","The event loop was woken up by another thread.",1,null],[13,"Refresh","","The window needs to be redrawn.",1,null],[4,"ElementState","","",null,null],[13,"Pressed","","",2,null],[13,"Released","","",2,null],[4,"MouseButton","","",null,null],[13,"Left","","",3,null],[13,"Right","","",3,null],[13,"Middle","","",3,null],[13,"Other","","",3,null],[4,"VirtualKeyCode","","",null,null],[13,"Key1","","The '1' key over the letters.",4,null],[13,"Key2","","The '2' key over the letters.",4,null],[13,"Key3","","The '3' key over the letters.",4,null],[13,"Key4","","The '4' key over the letters.",4,null],[13,"Key5","","The '5' key over the letters.",4,null],[13,"Key6","","The '6' key over the letters.",4,null],[13,"Key7","","The '7' key over the letters.",4,null],[13,"Key8","","The '8' key over the letters.",4,null],[13,"Key9","","The '9' key over the letters.",4,null],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",4,null],[13,"A","","",4,null],[13,"B","","",4,null],[13,"C","","",4,null],[13,"D","","",4,null],[13,"E","","",4,null],[13,"F","","",4,null],[13,"G","","",4,null],[13,"H","","",4,null],[13,"I","","",4,null],[13,"J","","",4,null],[13,"K","","",4,null],[13,"L","","",4,null],[13,"M","","",4,null],[13,"N","","",4,null],[13,"O","","",4,null],[13,"P","","",4,null],[13,"Q","","",4,null],[13,"R","","",4,null],[13,"S","","",4,null],[13,"T","","",4,null],[13,"U","","",4,null],[13,"V","","",4,null],[13,"W","","",4,null],[13,"X","","",4,null],[13,"Y","","",4,null],[13,"Z","","",4,null],[13,"Escape","","The Escape key, next to F1.",4,null],[13,"F1","","",4,null],[13,"F2","","",4,null],[13,"F3","","",4,null],[13,"F4","","",4,null],[13,"F5","","",4,null],[13,"F6","","",4,null],[13,"F7","","",4,null],[13,"F8","","",4,null],[13,"F9","","",4,null],[13,"F10","","",4,null],[13,"F11","","",4,null],[13,"F12","","",4,null],[13,"F13","","",4,null],[13,"F14","","",4,null],[13,"F15","","",4,null],[13,"Snapshot","","Print Screen/SysRq.",4,null],[13,"Scroll","","Scroll Lock.",4,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",4,null],[13,"Insert","","`Insert`, next to Backspace.",4,null],[13,"Home","","",4,null],[13,"Delete","","",4,null],[13,"End","","",4,null],[13,"PageDown","","",4,null],[13,"PageUp","","",4,null],[13,"Left","","",4,null],[13,"Up","","",4,null],[13,"Right","","",4,null],[13,"Down","","",4,null],[13,"Back","","The Backspace key, right over Enter.",4,null],[13,"Return","","The Enter key.",4,null],[13,"Space","","The space bar.",4,null],[13,"Numlock","","",4,null],[13,"Numpad0","","",4,null],[13,"Numpad1","","",4,null],[13,"Numpad2","","",4,null],[13,"Numpad3","","",4,null],[13,"Numpad4","","",4,null],[13,"Numpad5","","",4,null],[13,"Numpad6","","",4,null],[13,"Numpad7","","",4,null],[13,"Numpad8","","",4,null],[13,"Numpad9","","",4,null],[13,"AbntC1","","",4,null],[13,"AbntC2","","",4,null],[13,"Add","","",4,null],[13,"Apostrophe","","",4,null],[13,"Apps","","",4,null],[13,"At","","",4,null],[13,"Ax","","",4,null],[13,"Backslash","","",4,null],[13,"Calculator","","",4,null],[13,"Capital","","",4,null],[13,"Colon","","",4,null],[13,"Comma","","",4,null],[13,"Convert","","",4,null],[13,"Decimal","","",4,null],[13,"Divide","","",4,null],[13,"Equals","","",4,null],[13,"Grave","","",4,null],[13,"Kana","","",4,null],[13,"Kanji","","",4,null],[13,"LAlt","","",4,null],[13,"LBracket","","",4,null],[13,"LControl","","",4,null],[13,"LMenu","","",4,null],[13,"LShift","","",4,null],[13,"LWin","","",4,null],[13,"Mail","","",4,null],[13,"MediaSelect","","",4,null],[13,"MediaStop","","",4,null],[13,"Minus","","",4,null],[13,"Multiply","","",4,null],[13,"Mute","","",4,null],[13,"MyComputer","","",4,null],[13,"NextTrack","","",4,null],[13,"NoConvert","","",4,null],[13,"NumpadComma","","",4,null],[13,"NumpadEnter","","",4,null],[13,"NumpadEquals","","",4,null],[13,"OEM102","","",4,null],[13,"Period","","",4,null],[13,"Playpause","","",4,null],[13,"Power","","",4,null],[13,"Prevtrack","","",4,null],[13,"RAlt","","",4,null],[13,"RBracket","","",4,null],[13,"RControl","","",4,null],[13,"RMenu","","",4,null],[13,"RShift","","",4,null],[13,"RWin","","",4,null],[13,"Semicolon","","",4,null],[13,"Slash","","",4,null],[13,"Sleep","","",4,null],[13,"Stop","","",4,null],[13,"Subtract","","",4,null],[13,"Sysrq","","",4,null],[13,"Tab","","",4,null],[13,"Underline","","",4,null],[13,"Unlabeled","","",4,null],[13,"VolumeDown","","",4,null],[13,"VolumeUp","","",4,null],[13,"Wake","","",4,null],[13,"Webback","","",4,null],[13,"WebFavorites","","",4,null],[13,"WebForward","","",4,null],[13,"WebHome","","",4,null],[13,"WebRefresh","","",4,null],[13,"WebSearch","","",4,null],[13,"WebStop","","",4,null],[13,"Yen","","",4,null],[4,"NativeMonitorId","","Native platform identifier for a monitor. Different platforms use fundamentally different types\nto represent a monitor ID.",null,null],[13,"Numeric","","Cocoa and X11 use a numeric identifier to represent a monitor.",5,null],[13,"Name","","Win32 uses a Unicode string to represent a monitor.",5,null],[13,"Unavailable","","Other platforms (Android) don't support monitor identification.",5,null],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",null,null],[13,"OsError","","",6,null],[13,"NotSupported","","",6,null],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",null,null],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",7,null],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",7,null],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",7,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",8,null],[13,"Core","","Include all the future-compatible functions and definitions.",8,null],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",null,null],[13,"Latest","","Request the latest version of the \"best\" API of this platform.",9,null],[13,"Specific","","Request a specific version of a specific API.",9,null],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`.\nElse if OpenGL ES or WebGL is available, create a context with the\nspecified `opengles_version`.",9,null],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",9,null],[12,"opengles_version","","The version to use for OpenGL ES.",9,null],[4,"MouseCursor","glutin","",null,null],[13,"Default","","The platform-dependent default cursor.",10,null],[13,"Crosshair","","A simple crosshair.",10,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",10,null],[13,"Arrow","","Self explanatory.",10,null],[13,"Move","","Indicates something is to be moved.",10,null],[13,"Text","","Indicates text that may be selected or edited.",10,null],[13,"Wait","","Program busy indicator.",10,null],[13,"Help","","Help indicator (often rendered as a \"?\")",10,null],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast\nwith \"Wait\" the user may still interact with the program. Often rendered\nas a spinning beach ball, or an arrow with a watch or hourglass.",10,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",10,null],[13,"ContextMenu","","",10,null],[13,"NoneCursor","","",10,null],[13,"Cell","","",10,null],[13,"VerticalText","","",10,null],[13,"Alias","","",10,null],[13,"Copy","","",10,null],[13,"NoDrop","","",10,null],[13,"Grab","","",10,null],[13,"Grabbing","","",10,null],[13,"AllScroll","","",10,null],[13,"ZoomIn","","",10,null],[13,"ZoomOut","","",10,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor\nis used when the movement starts from the south-east corner of the box.",10,null],[13,"NResize","","",10,null],[13,"NeResize","","",10,null],[13,"NwResize","","",10,null],[13,"SResize","","",10,null],[13,"SeResize","","",10,null],[13,"SwResize","","",10,null],[13,"WResize","","",10,null],[13,"EwResize","","",10,null],[13,"NsResize","","",10,null],[13,"NeswResize","","",10,null],[13,"NwseResize","","",10,null],[13,"ColResize","","",10,null],[13,"RowResize","","",10,null],[4,"CursorState","","Describes how glutin handles the cursor.",null,null],[13,"Normal","","Normal cursor behavior.",11,null],[13,"Hide","","The cursor will be invisible when over the window.",11,null],[13,"Grab","","Grabs the mouse cursor. The cursor's motion will be confined to this\nwindow and the window has exclusive access to further events regarding\nthe cursor.",11,null],[5,"get_available_monitors","","Returns the list of all available monitors.",null,{"inputs":[],"output":{"name":"availablemonitorsiter"}}],[5,"get_primary_monitor","","Returns the primary monitor of the system.",null,{"inputs":[],"output":{"name":"monitorid"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",12,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",12,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",12,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",12,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",12,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",12,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",12,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",12,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",12,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",12,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value or returns a default.",12,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value or computes a default.",12,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",12,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",12,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",12,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",12,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",12,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",12,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",12,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",12,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",12,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",12,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",13,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",14,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"from_u64","","Makes a bignum from `u64` value.",14,{"inputs":[{"name":"big32x36"},{"name":"u64"}],"output":{"name":"big32x36"}}],[11,"is_zero","","Returns true if the bignum is zero.",14,{"inputs":[{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",14,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",14,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",14,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",14,{"inputs":[{"name":"big32x36"},{"name":"usize"}],"output":{"name":"big32x36"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",14,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",14,null],[11,"eq","","",14,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"option"}}],[11,"cmp","","",14,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"ordering"}}],[11,"clone","","",14,{"inputs":[{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"fmt","","",14,{"inputs":[{"name":"big32x36"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",15,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",15,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"is_zero","","Returns true if the bignum is zero.",15,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",15,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",15,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",15,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",15,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",15,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",15,null],[11,"eq","","",15,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",15,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",15,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",15,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",16,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",17,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",18,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",19,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",19,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",19,null],[11,"clone","","",20,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",20,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",20,null],[11,"fmt","","",21,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num","",22,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",23,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",23,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",24,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"fmt","","",23,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",25,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",26,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",27,null],[11,"fmt","","",27,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",27,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",27,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",27,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",27,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",28,null],[11,"get","","Dereferences the content.",28,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",28,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",28,null],[11,"fmt","","",28,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",29,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",30,null],[11,"eq","","",30,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",30,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",30,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",31,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",31,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",32,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",33,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",34,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",35,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",35,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",35,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",35,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","glutin::api","",36,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",36,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",36,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",36,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",36,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",36,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",36,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",36,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",37,null],[11,"fmt","","",37,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",37,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::atomic","",38,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",39,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",40,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",41,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",42,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",38,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",38,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",38,null],[11,"swap","","Stores a value into the bool, returning the old value.",38,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",38,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",38,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",38,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",38,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",38,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",39,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",39,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",39,null],[11,"swap","","Stores a value into the isize, returning the old value.",39,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",39,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",39,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",39,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",39,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",39,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",39,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",40,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",40,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",40,null],[11,"swap","","Stores a value into the usize, returning the old value.",40,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",40,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",40,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",40,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",40,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",40,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",40,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",41,null],[11,"load","","Loads a value from the pointer.",41,null],[11,"store","","Stores a value into the pointer.",41,null],[11,"swap","","Stores a value into the pointer, returning the old value.",41,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",41,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",43,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",43,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",43,null],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",43,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",43,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",43,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",43,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",45,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",45,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",45,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",45,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",45,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",45,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",45,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",45,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",45,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",46,null],[11,"clone","","",46,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",47,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"drop","","",48,null],[11,"deref","","",49,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",49,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",50,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",50,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",50,null],[11,"clone","core::char","",51,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",52,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",51,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",54,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",53,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",55,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",55,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",55,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",55,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",56,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",56,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",57,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"next_back","","",57,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",57,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",57,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",58,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"indexable","","",58,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",58,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",59,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",59,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",59,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",60,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",60,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"next_back","","",60,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",60,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",60,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",61,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",61,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",61,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",61,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",62,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",63,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",63,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",64,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",64,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"nth","","",64,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",64,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",64,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",64,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",64,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",65,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",65,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",65,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",65,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",65,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",65,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",65,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",66,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"clone","","",67,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",67,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"clone","","",68,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",68,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",68,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",68,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",68,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"indexable","","",68,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",68,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",69,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",69,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"indexable","","",69,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",69,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",70,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"clone","","",71,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",71,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",72,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",72,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",72,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",72,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",72,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",72,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",72,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",72,null],[11,"clone","","",73,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",73,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",73,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",73,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",74,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",74,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",74,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"clone","","",75,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",33,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",32,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",75,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"clone","","",76,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",76,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",75,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"next","core::ops","",32,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"next_back","","",32,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",33,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",77,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",77,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",77,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",77,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"hash","core::option","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",12,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",12,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",78,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",78,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",79,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",79,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",80,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",81,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next_back","","",81,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",12,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",82,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",83,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",84,null],[11,"fmt","","",84,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",84,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",84,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",84,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",84,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",84,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",84,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",84,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",84,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",84,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",84,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",84,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",84,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",84,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",84,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",84,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",84,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",84,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",84,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",84,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",84,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",85,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",85,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",87,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",84,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",88,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",89,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",90,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",91,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",92,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",93,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",94,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",95,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",96,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",97,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",98,null],[11,"next","","",98,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"count","","",98,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",98,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",98,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",98,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",98,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"indexable","","",98,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",98,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",99,null],[11,"next","","",99,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"count","","",99,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",99,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",99,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",99,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",100,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",100,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",101,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",101,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next_back","","",101,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",102,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next","","",103,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next","","",104,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"next","","",105,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next","","",106,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"clone","","",107,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",107,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"next_back","","",107,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"indexable","","",107,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"idx","","",107,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",108,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",108,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"next_back","","",108,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"indexable","","",108,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"idx","","",108,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",109,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"next_back","","",109,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",110,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",110,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",111,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",112,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",111,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",111,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",111,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"eq","","",114,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"haystack","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",115,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",116,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",117,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"eq","core::str","",118,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",118,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",119,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",119,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",119,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",120,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",121,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",123,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",123,null],[11,"call_mut","","",123,null],[11,"call_once","","",123,null],[11,"next","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",122,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",124,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",125,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",126,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",125,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",126,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",127,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",127,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",128,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",127,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",128,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",130,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",131,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",132,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",133,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",134,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",133,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",134,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",136,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",137,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",136,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",137,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",138,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"next_back","","",138,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",140,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",140,null],[11,"call_mut","","",140,null],[11,"call_once","","",140,null],[11,"next","","",139,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",139,null],[11,"next_back","","",139,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",141,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"clone","","",142,{"inputs":[{"name":"oldsearcher"}],"output":{"name":"oldsearcher"}}],[11,"clone","","",143,{"inputs":[{"name":"oldmatchindices"}],"output":{"name":"oldmatchindices"}}],[11,"clone","","",144,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",145,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",145,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",145,null],[11,"finish","","",145,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",145,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",145,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",146,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",147,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",148,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",149,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",150,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",151,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",152,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",153,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",154,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Consumes the `DebugStruct`, finishing output and returning any error\nencountered.",154,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",155,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Consumes the `DebugTuple`, finishing output and returning any error\nencountered.",155,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"finish","","",156,null],[11,"entry","","Adds a new entry to the set output.",157,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",157,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the set output.",158,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",158,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",159,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"finish","","Consumes the `DebugMap`, finishing output and returning any error\nencountered.",159,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",160,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",161,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",162,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",163,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",164,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",165,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",166,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",167,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",168,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",168,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",168,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",169,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",169,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",169,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",169,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",169,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",169,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",169,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",169,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",169,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",169,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",169,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",169,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",169,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",169,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"fmt","","",165,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",30,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",43,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",49,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",170,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",170,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",170,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",170,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"from","alloc::boxed","",171,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",171,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",171,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",171,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",118,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",119,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",23,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","","",25,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",172,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",173,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","glutin::api","Returns true if the boxed type is the same as `T`",174,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",174,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",174,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",174,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",174,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",174,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",174,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",174,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"into_ascii_uppercase","collections::string","",175,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"into_ascii_lowercase","","",175,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"into_ascii_uppercase","collections::vec","",176,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"into_ascii_lowercase","","",176,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"next","std::ascii","",177,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",177,null],[11,"next_back","","",177,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","std::thread::local","",178,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",178,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",179,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",179,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"get","std::thread::local::imp","",180,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",181,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",181,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",181,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",182,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",182,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",182,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",182,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"scoped","","Spawns a new child thread that must be joined within a given\nscope, and returns a `JoinGuard`.",182,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",183,null],[11,"name","","Gets the thread's name.",183,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",183,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",183,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",184,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",184,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"thread","","Extracts a handle to the thread this guard will join on.",185,{"inputs":[{"name":"joinguard"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish, returning the result of the\nthread's calculation.",185,{"inputs":[{"name":"joinguard"}],"output":{"name":"t"}}],[11,"drop","","",185,null],[11,"clone","std::collections::hash::table","",186,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",187,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",188,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",188,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",188,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",189,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",189,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",189,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",190,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",190,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",187,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",187,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",187,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",187,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",187,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",187,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",187,null],[11,"next","","",190,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",190,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",190,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",190,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",189,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",189,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",189,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",189,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",189,null],[11,"take","","Removes this bucket's key and value from the hashtable.",189,null],[11,"replace","","",189,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",189,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",189,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",189,null],[11,"expect_full","","",191,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",192,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",192,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",193,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",193,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",193,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",193,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",193,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",193,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",193,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",194,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",194,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",195,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",196,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",196,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",196,null],[11,"len","","",196,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",197,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",197,null],[11,"len","","",197,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",198,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",198,null],[11,"len","","",198,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",199,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",199,null],[11,"len","","",199,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",199,null],[11,"clone","","",193,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",193,null],[11,"clone","std::collections::hash::map","",200,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",201,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",201,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",201,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",201,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",201,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",201,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",201,null],[11,"get","","Returns a reference to the value corresponding to the key.",201,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",201,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",201,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",201,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",201,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",201,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",201,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",201,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",203,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",204,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",201,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",202,null],[11,"len","","",202,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",205,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",205,null],[11,"len","","",205,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",206,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",206,null],[11,"len","","",206,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",203,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",203,null],[11,"len","","",203,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",204,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",204,null],[11,"len","","",204,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",207,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",207,null],[11,"len","","",207,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",208,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",208,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",208,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",209,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",209,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",209,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",209,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",209,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",210,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",201,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",201,null],[11,"clone","","",211,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",211,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",211,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",211,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",212,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",212,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",212,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",212,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",212,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",212,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",212,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",212,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",212,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",212,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",212,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",212,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",212,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",212,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",212,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",212,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",212,null],[11,"contains","","Returns `true` if the set contains a value.",212,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",212,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",212,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",212,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",212,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",212,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"eq","","",212,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",212,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",212,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",212,null],[11,"default","","",212,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",212,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",213,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",213,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",213,null],[11,"len","","",213,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",214,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",214,null],[11,"len","","",214,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",215,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",215,null],[11,"len","","",215,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",216,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",216,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",216,null],[11,"clone","","",217,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",217,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",217,null],[11,"clone","","",218,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",218,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",218,null],[11,"clone","","",219,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",219,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",219,null],[11,"hasher","std::collections::hash::state","",220,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",220,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",220,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::vec_deque","",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",221,null],[11,"default","","",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",221,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",221,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`Ringbuf`. The collection may reserve more space to avoid frequent reallocations.",221,null],[11,"shrink_to_fit","","Shrinks the capacity of the ringbuf as much as possible.",221,null],[11,"truncate","","Shortens a ringbuf, dropping excess elements from the back.",221,null],[11,"iter","","Returns a front-to-back iterator.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",221,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",221,null],[11,"len","","Returns the number of elements in the `VecDeque`.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",221,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",221,null],[11,"push_back","","Appends an element to the back of a buffer",221,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the last\nelement.",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the first\nelement.",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at position `i` within the ringbuf. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",221,null],[11,"remove","","Removes and returns the element at position `i` from the ringbuf.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `i` is out of bounds.",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",221,null],[11,"retain","","Retains only the elements specified by the predicate.",221,null],[11,"resize","","Modifies the ringbuf in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",221,null],[11,"clone","","",222,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",222,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",222,null],[11,"next_back","","",222,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",222,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",222,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",223,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",223,null],[11,"next_back","","",223,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",224,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",224,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",224,null],[11,"next_back","","",224,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",225,null],[11,"next","","",225,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",225,null],[11,"next_back","","",225,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",221,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",221,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",221,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",221,null],[11,"index","","",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",221,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",221,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",221,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",221,null],[11,"fmt","","",221,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","collections::binary_heap","",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",226,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",226,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",226,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",226,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",226,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",226,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",226,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",226,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",226,null],[11,"clone","","",227,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",227,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",227,null],[11,"next_back","","",227,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",228,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",228,null],[11,"next_back","","",228,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",229,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"next_back","","",229,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",226,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",226,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",226,null],[11,"default","collections::vec_map","",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone","","",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone_from","","",230,null],[11,"hash","","",230,null],[11,"new","","Creates an empty `VecMap`.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",230,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",230,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `usize`.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"values"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(usize, &'r V)`.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(usize, &'r mut V)`.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",230,null],[11,"split_off","","Splits the collection into two at the given key.",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"drain"}}],[11,"len","","Returns the number of elements in the map.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",230,null],[11,"get","","Returns a reference to the value corresponding to the key.",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",230,{"inputs":[{"name":"vecmap"},{"name":"usize"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"entry"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",231,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",231,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",231,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",232,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",233,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",233,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",233,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",233,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",233,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"eq","","",230,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",230,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"option"}}],[11,"cmp","","",230,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"ordering"}}],[11,"fmt","","",230,{"inputs":[{"name":"vecmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",230,{"inputs":[{"name":"vecmap"},{"name":"i"}],"output":{"name":"vecmap"}}],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`.",230,{"inputs":[{"name":"vecmap"}],"output":{"name":"intoiter"}}],[11,"extend","","",230,null],[11,"index","","",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index","","",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",230,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"clone","","",234,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",234,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",234,null],[11,"next_back","","",234,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",235,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",235,null],[11,"next_back","","",235,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",236,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",237,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",238,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",238,null],[11,"next_back","","",238,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"next","","",236,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",236,null],[11,"next_back","","",236,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"next","","",237,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"next_back","","",237,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"next","","",239,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",239,null],[11,"next_back","","",239,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","collections::linked_list","",240,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",241,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"clone","","",242,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",243,null],[11,"iter","","Provides a forward iterator.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",243,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",243,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",243,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",243,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",243,null],[11,"next","","",240,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"next_back","","",240,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",244,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",244,null],[11,"next_back","","",244,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",244,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",244,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",241,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"next_back","","",241,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",243,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",243,null],[11,"eq","","",243,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",243,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",243,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",243,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",243,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",243,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",243,null],[11,"drop","std::dynamic_lib","",245,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",245,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",245,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",245,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",245,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",245,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",245,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",246,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"next","","",247,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[11,"clone","","",248,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",248,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",248,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",248,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",248,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",248,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",249,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",249,null],[11,"fmt","","",250,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",250,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",250,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",251,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",251,null],[11,"len","","",251,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",252,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",252,null],[11,"len","","",252,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"hash","std::ffi::c_str","",253,null],[11,"cmp","","",253,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",253,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",253,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",253,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",253,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",253,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",253,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",253,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"clone","","",253,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",254,null],[11,"fmt","","",255,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",255,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",255,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",255,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",253,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",253,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",253,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",253,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",254,null],[11,"as_ptr","","Returns the inner pointer to this C string.",254,null],[11,"to_bytes","","Converts this C string to a byte slice.",254,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",254,null],[11,"deref","","",253,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",253,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",255,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",255,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",255,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",255,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",256,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"eq","std::ffi::c_str","",254,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",254,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",254,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"clone","std::ffi::os_str","",257,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",257,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",257,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",257,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",257,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",257,null],[11,"from","","",257,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",257,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",257,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",258,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",258,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",258,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",258,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",258,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",258,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",257,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",257,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",257,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",257,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",257,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",257,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",257,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",257,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",257,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",257,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",257,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",257,null],[11,"eq","","",258,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",258,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",258,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",258,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",258,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",258,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",258,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",258,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",258,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",258,null],[11,"fmt","","",258,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",257,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",258,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",258,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",257,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",175,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",259,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",260,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",260,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",260,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",260,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",261,null],[11,"eq","","",261,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",261,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",261,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",262,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",262,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"path","","Returns `None`.",262,{"inputs":[{"name":"file"}],"output":{"name":"option"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",262,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",262,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",262,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",262,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",262,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",262,null],[11,"write","","",262,null],[11,"flush","","",262,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",262,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",259,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",259,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",259,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",259,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",259,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",259,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",259,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",263,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",263,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",263,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",263,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",263,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"accessed","","Returns the most recent access time for a file.",263,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"modified","","Returns the most recent modification time for a file.",263,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",260,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",260,null],[11,"is_dir","","Test whether this file type represents a directory.",261,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",261,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",261,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",264,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",265,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",265,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",265,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",265,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",266,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",267,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",267,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",267,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",267,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",267,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",267,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",267,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",267,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",268,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",268,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",268,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"get","std::io::lazy","",269,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity",270,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity",270,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",270,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",270,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",270,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",270,null],[11,"fill_buf","","",270,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",270,null],[11,"fmt","","",270,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",270,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",271,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity",272,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity",272,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",272,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying write.",272,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",272,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",272,null],[11,"flush","","",272,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",272,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",272,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",272,null],[11,"error","","Returns the error which caused the call to `into_inner` to fail.",271,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",271,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",256,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",271,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",271,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`",273,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",273,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",273,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",273,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",273,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",273,null],[11,"flush","","",273,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",273,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",274,null],[11,"with_capacities","","Creates a new buffered stream with explicitly listed capacities for the\nreader/writer buffer.",275,{"inputs":[{"name":"bufstream"},{"name":"usize"},{"name":"usize"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"new","","Creates a new buffered stream with the default reader/writer buffer\ncapacities.",275,{"inputs":[{"name":"bufstream"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"get_ref","","Gets a reference to the underlying stream.",275,{"inputs":[{"name":"bufstream"}],"output":{"name":"s"}}],[11,"get_mut","","Gets a mutable reference to the underlying stream.",275,{"inputs":[{"name":"bufstream"}],"output":{"name":"s"}}],[11,"into_inner","","Unwraps this `BufStream`, returning the underlying stream.",275,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"fill_buf","","",275,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"consume","","",275,null],[11,"read","","",275,null],[11,"write","","",275,null],[11,"flush","","",275,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"fmt","","",275,{"inputs":[{"name":"bufstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",276,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",276,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",276,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",276,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",276,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",276,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current value of this cursor",276,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the value of this cursor",276,null],[11,"seek","","",276,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",276,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",276,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",276,null],[11,"read","","",276,null],[11,"read","","",276,null],[11,"fill_buf","","",276,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",276,null],[11,"fill_buf","","",276,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",276,null],[11,"fill_buf","","",276,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",276,null],[11,"write","","",276,null],[11,"flush","","",276,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",276,null],[11,"flush","","",276,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",256,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",277,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",278,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",279,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",279,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",279,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",256,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",256,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",256,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",256,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",256,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",256,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",256,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"read","alloc::boxed","",171,null],[11,"read_to_end","","",171,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",171,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","","",171,null],[11,"flush","","",171,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",171,null],[11,"write_fmt","","",171,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",171,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",171,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",171,null],[11,"read_until","","",171,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",171,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",176,null],[11,"write_all","","",176,null],[11,"flush","","",176,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"read","std::io::util","",280,null],[11,"fill_buf","","",280,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",280,null],[11,"read","","",281,null],[11,"write","","",282,null],[11,"flush","","",282,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",283,null],[11,"write","","",284,null],[11,"flush","","",284,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",285,null],[11,"flush","","",285,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",286,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",286,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",286,null],[11,"read_to_end","","",286,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",286,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",287,null],[11,"fill_buf","","",287,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",287,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",288,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",288,null],[11,"flush","","",288,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",288,null],[11,"write_fmt","","",288,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",289,null],[11,"flush","","",289,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",290,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",290,null],[11,"flush","","",290,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",290,null],[11,"write_fmt","","",290,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",291,null],[11,"flush","","",291,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",292,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",292,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",292,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",293,null],[11,"flush","","",293,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",294,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",295,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",295,null],[11,"fill_buf","","",295,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",295,null],[11,"read","","",296,null],[11,"next","","",297,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",298,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",299,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",298,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",298,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",298,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",300,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",301,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",302,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",302,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",302,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",302,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",302,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",302,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",302,null],[11,"fmt","","",302,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",302,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",302,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",302,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",303,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",303,null],[11,"clone","","",303,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",303,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",303,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",304,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",304,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",302,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",304,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",304,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",304,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",304,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",304,null],[11,"partial_cmp","","",304,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",304,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",304,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",305,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",305,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",305,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",305,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",305,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",305,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",305,null],[11,"partial_cmp","","",305,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",305,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",306,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",306,null],[11,"eq","","",306,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",306,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",306,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",306,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",306,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",306,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",307,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",307,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",307,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",308,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",308,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",308,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",308,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",308,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",306,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",307,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",307,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",308,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",308,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",307,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",308,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",307,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",308,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",307,null],[11,"hash","","",308,null],[11,"to_socket_addrs","","",306,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",307,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",308,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",309,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",309,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",309,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",309,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",309,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the nodelay flag on this connection to the boolean specified.",309,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_keepalive","","Sets the keepalive timeout to the timeout specified.",309,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read","","",309,null],[11,"write","","",309,null],[11,"flush","","",309,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",309,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",310,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",310,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",310,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",310,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",310,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",311,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",310,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",312,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",312,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",312,null],[11,"local_addr","","Returns the socket address that this socket was created from.",312,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",312,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the broadcast flag on or off.",312,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_multicast_loop","","Sets the multicast loop flag to the specified value.",312,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"join_multicast","","Joins a multicast IP address (becomes a member of it).",312,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"leave_multicast","","Leaves a multicast IP address (drops membership from it).",312,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"set_multicast_time_to_live","","Sets the multicast TTL.",312,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_time_to_live","","Sets this socket's TTL.",312,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"fmt","","",312,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",302,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",304,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",305,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",306,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",313,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",313,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",313,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::net","",314,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",314,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",314,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",314,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",315,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"as_raw_fd","std::fs","",262,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",262,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"as_raw_fd","std::net::tcp","",309,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",310,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",312,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",309,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",310,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",312,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"from_vec","std::ffi::os_str","",257,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",257,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",258,null],[11,"as_bytes","","",258,null],[11,"mode","std::fs","",260,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",260,null],[11,"from_mode","","",260,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",259,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"as_raw","","",263,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"dev","std::sys::ext::fs","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ino","std::fs","",265,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",268,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",317,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",317,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"signal","","",318,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"eq","std::path","",319,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",319,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",319,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",319,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",319,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",319,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",319,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",319,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",319,null],[11,"fmt","","",319,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",319,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins `\\\\?\\`.",319,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",320,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",320,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",320,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",320,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",320,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",320,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",320,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",320,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",320,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",321,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",321,null],[11,"clone","","",321,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",321,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",321,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",321,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",321,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",321,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",322,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",322,null],[11,"cmp","","",322,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",322,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",322,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",322,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",322,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",322,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",322,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",322,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",322,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",322,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",322,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",323,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",324,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",323,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",323,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",323,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",323,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",324,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",324,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",324,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",324,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",324,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",323,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",323,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",323,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",323,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",323,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",325,null],[11,"clone","","",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",325,null],[11,"pop","","Truncate `self` to `self.parent()`.",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",325,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",325,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",325,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",325,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",325,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",325,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",325,null],[11,"fmt","","",325,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",267,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",267,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",267,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",267,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",267,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",267,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",267,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",267,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",267,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",267,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",267,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",267,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",267,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",267,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file()`.",267,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file()`, if possible.",267,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",267,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",267,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",267,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",267,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",267,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",267,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"deref","","",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",267,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",325,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",325,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",325,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",267,null],[11,"as_ref","","",267,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",267,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",326,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",326,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",267,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",267,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",267,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",267,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",258,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",257,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",175,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",325,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",327,null],[11,"flush","","",327,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",328,null],[11,"read","","",329,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",317,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",317,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",317,null],[11,"env","","Inserts or updates an environment variable mapping.",317,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",317,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",317,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",317,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",317,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",317,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",317,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",317,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",317,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",317,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",317,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",330,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",330,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",330,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"clone","","",331,{"inputs":[{"name":"stdioimp"}],"output":{"name":"stdioimp"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",332,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",332,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",332,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",318,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",318,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",318,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",318,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",318,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",318,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",318,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",333,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",333,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",333,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",334,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",334,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",334,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",334,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",335,null],[11,"new","std::sync::mpsc::oneshot","",336,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",336,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",336,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",336,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",336,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",336,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",336,null],[11,"drop_port","","",336,null],[11,"can_recv","","",336,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",336,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",336,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",336,null],[11,"eq","std::sync::mpsc::select","",337,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",337,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",338,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",338,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",338,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",339,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",339,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",339,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",339,null],[11,"drop","","",338,null],[11,"drop","","",339,null],[11,"next","","",340,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",341,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",341,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",341,null],[11,"send","","",341,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",341,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",341,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",341,null],[11,"drop_chan","","",341,null],[11,"drop_port","","",341,null],[11,"can_recv","","",341,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",341,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",341,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",341,null],[11,"new","std::sync::mpsc::stream","",342,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",342,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",342,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",342,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",342,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",342,null],[11,"drop_port","","",342,null],[11,"can_recv","","",342,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",342,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",342,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",342,null],[11,"fmt","std::sync::mpsc::sync","",343,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",344,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",344,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",344,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",344,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",344,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",344,null],[11,"drop_chan","","",344,null],[11,"drop_port","","",344,null],[11,"can_recv","","",344,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",344,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",344,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",344,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",345,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",345,null],[11,"pop","","Pops some data from this queue.",345,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",345,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",346,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",346,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",346,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",346,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",346,null],[11,"clone","std::sync::mpsc","",347,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",347,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",347,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",348,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",348,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",348,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",348,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",349,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",349,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",349,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",349,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",350,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",350,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",350,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",351,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",351,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",351,null],[11,"send","","Sends a value on this synchronous channel.",352,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",352,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",352,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",352,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",353,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",353,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",353,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",354,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",355,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",353,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",353,null],[11,"fmt","","",347,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",347,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",347,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",347,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",350,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",350,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",350,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",350,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",348,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",348,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",348,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",349,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",349,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",349,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",356,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",356,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",357,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"new","std::sync::condvar","Creates a new condition variable which is ready to be waited on and\nnotified.",358,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",358,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",358,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",358,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",358,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",358,null],[11,"drop","","",358,null],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",359,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",359,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",359,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",359,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",359,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",359,null],[11,"get","std::sync::future","Get the value of the future.",360,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"into_inner","","Gets the value from this future, forcing evaluation.",360,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"get_ref","","Executes the future's closure and then returns a reference\nto the result.  The reference lasts as long as\nthe future.",360,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"from_value","","Create a future from a value.",360,{"inputs":[{"name":"future"},{"name":"a"}],"output":{"name":"future"}}],[11,"from_fn","","Create a future from a function.",360,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"from_receiver","","Create a future from a port",360,{"inputs":[{"name":"future"},{"name":"receiver"}],"output":{"name":"future"}}],[11,"spawn","","Create a future from a unique closure.",360,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"drop","std::sync::mutex","",170,null],[11,"fmt","","",170,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",361,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",361,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",361,null],[11,"deref","","",362,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",362,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",362,null],[11,"call_once","std::sync::once","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",363,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",364,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",364,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",364,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",364,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",364,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",364,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"drop","","",364,null],[11,"fmt","","",364,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",365,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",365,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",365,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",365,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",365,null],[11,"deref","","",366,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",367,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",367,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",366,null],[11,"drop","","",367,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",368,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",368,null],[11,"release","","Release a resource from this semaphore.",368,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",368,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",369,null],[11,"fmt","std::time::duration","",370,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",370,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",370,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",370,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",370,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",370,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",370,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",370,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",370,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",370,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",370,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",370,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",370,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",370,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",370,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",370,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",370,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",370,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",370,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",370,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",370,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",370,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",370,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"neg","","",370,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",370,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",370,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",370,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",370,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",371,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",371,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",371,null],[11,"wait","","Waits for a signal on the specified mutex.",371,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",371,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",371,null],[11,"lock","std::sys_common::mutex","Locks the mutex blocking the current thread until it is available.",372,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",372,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",372,null],[11,"destroy","","Deallocates all resources associated with this mutex.",372,null],[11,"next","std::sys_common::net","",373,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",373,null],[11,"connect","","",374,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",374,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_nodelay","","",374,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_keepalive","","",374,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read","","",374,null],[11,"write","","",374,null],[11,"peer_addr","","",374,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",374,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",374,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",374,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",374,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",375,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",375,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",375,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",375,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",375,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",375,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",376,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",376,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",376,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",376,null],[11,"send_to","","",376,null],[11,"set_broadcast","","",376,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_multicast_loop","","",376,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"join_multicast","","",376,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"leave_multicast","","",376,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"multicast_time_to_live","","",376,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"time_to_live","","",376,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"duplicate","","",376,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",376,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","std::sys_common::poison","",377,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",377,null],[11,"get","","",377,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",378,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",378,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",378,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",378,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",378,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",378,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",378,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",379,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",379,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",379,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",379,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",379,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",380,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",380,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",380,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",380,null],[11,"fmt","","",380,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",381,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",381,null],[11,"read","std::sys_common::rwlock","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",382,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",382,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",382,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",382,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",382,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",382,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",382,null],[11,"get","std::sys_common::thread_local","Gets the value associated with this TLS key",383,null],[11,"set","","Sets this TLS key to a new value.",383,null],[11,"destroy","","Deallocates this OS TLS key.",383,null],[11,"new","","Creates a new managed OS TLS key.",384,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",384,null],[11,"set","","See StaticKey::set",384,null],[11,"drop","","",384,null],[11,"clone","std::sys_common::wtf8","",385,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",385,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",385,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",385,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",385,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",385,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",385,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",385,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",385,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",385,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",385,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",385,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",385,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",385,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",385,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",385,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",386,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",387,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",387,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",387,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_point_at","","Returns the code point at `position`.",387,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"codepoint"}}],[11,"code_point_range_at","","Returns the code point at `position`\nand the position of the next code point.",387,null],[11,"code_points","","Returns an iterator for the string’s code points.",387,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",387,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",387,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",387,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",386,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an new, empty WTF-8 string.",386,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates an new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",386,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",386,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",386,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",386,null],[11,"as_slice","","",386,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",386,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",386,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",386,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",386,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",386,null],[11,"push","","Append a code point at the end of the string.",386,null],[11,"truncate","","Shortens a string to the specified length.",386,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",386,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",386,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",386,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",386,null],[11,"eq","","",387,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",387,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",387,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",387,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",387,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",387,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",387,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",387,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",387,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",387,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",387,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",387,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",388,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",388,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",388,null],[11,"clone","","",389,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",389,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",389,null],[11,"hash","","",385,null],[11,"hash","","",386,null],[11,"hash","","",387,null],[11,"is_ascii","","",387,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",387,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",387,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",387,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",387,null],[11,"make_ascii_lowercase","","",387,null],[11,"new","std::sys::condvar","",390,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",390,null],[11,"notify_all","","",390,null],[11,"wait","","",390,null],[11,"wait_timeout","","",390,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",390,null],[11,"new","std::sys::fd","",391,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",391,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",391,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",391,null],[11,"write","","",391,null],[11,"set_cloexec","","",391,null],[11,"drop","","",391,null],[11,"clone","std::sys::fs","",392,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",393,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",393,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",393,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",393,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",394,null],[11,"eq","","",394,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",394,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",394,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",395,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",395,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"accessed","","",395,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"modified","","",395,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"file_type","","",395,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"raw","","",395,{"inputs":[{"name":"fileattr"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",263,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::sys::ext::fs","",316,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",393,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",393,null],[11,"mode","","",393,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",394,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",394,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",394,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",396,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",397,null],[11,"path","","",398,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",398,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",398,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",398,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",398,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",392,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",392,null],[11,"write","","",392,null],[11,"append","","",392,null],[11,"truncate","","",392,null],[11,"create","","",392,null],[11,"mode","","",392,null],[11,"open","","",399,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",399,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"into_fd","","",399,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"file_attr","","",399,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",399,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",399,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",399,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",399,null],[11,"write","","",399,null],[11,"flush","","",399,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",399,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",399,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",400,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",400,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",400,null],[11,"fmt","","",399,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",401,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",401,null],[11,"unlock","","",401,null],[11,"try_lock","","",401,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",401,null],[11,"uninitialized","","",402,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",402,null],[11,"lock","","",402,null],[11,"try_lock","","",402,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",402,null],[11,"destroy","","",402,null],[11,"new","std::sys::net","",403,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",403,null],[11,"duplicate","","",403,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",403,null],[11,"next","std::sys::os","",404,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",404,null],[11,"fmt","","",405,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",405,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",405,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",406,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",406,null],[11,"len","","",406,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",407,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",407,null],[11,"hash","std::sys::os_str","",408,null],[11,"clone","","",408,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",409,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",408,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",408,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",408,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",408,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",408,null],[11,"from_str","","",409,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",409,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",409,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",409,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",410,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",410,null],[11,"write","","",410,null],[11,"into_fd","","",410,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",411,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",411,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",411,null],[11,"args","","",411,null],[11,"env","","",411,null],[11,"env_remove","","",411,null],[11,"env_clear","","",411,null],[11,"cwd","","",411,null],[11,"fmt","","",412,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",412,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",412,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",412,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",412,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",412,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",412,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",413,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",413,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"wait","","",413,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",413,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"read","std::sys::rwlock","",414,null],[11,"try_read","","",414,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",414,null],[11,"try_write","","",414,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",414,null],[11,"write_unlock","","",414,null],[11,"destroy","","",414,null],[11,"new","std::sys::stack_overflow","",415,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",415,null],[11,"new","std::sys::thread","",416,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",416,null],[11,"set_name","","",416,null],[11,"sleep","","",416,null],[11,"join","","",416,null],[11,"drop","","",416,null],[11,"now","std::sys::time::inner","",417,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"ns","","",417,{"inputs":[{"name":"steadytime"}],"output":{"name":"u64"}}],[11,"new","std::sys::stdio","",418,{"inputs":[{"name":"stdin"}],"output":{"name":"stdin"}}],[11,"read","","",418,null],[11,"new","","",419,{"inputs":[{"name":"stdout"}],"output":{"name":"stdout"}}],[11,"write","","",419,null],[11,"new","","",420,{"inputs":[{"name":"stderr"}],"output":{"name":"stderr"}}],[11,"write","","",420,null],[11,"write","","",420,null],[11,"flush","","",420,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::rt::libunwind","",421,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",422,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",422,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",422,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",422,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",423,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",423,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",423,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",423,null],[11,"clone","std::rand","",424,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",424,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",424,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",424,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",424,null],[11,"from_seed","","",424,null],[11,"reseed","","",425,null],[11,"clone","","",426,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",426,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",426,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",426,null],[11,"clone","collections::slice","",427,{"inputs":[{"name":"elementswaps"}],"output":{"name":"elementswaps"}}],[11,"new","","Creates an `ElementSwaps` iterator for a sequence of `length` elements.",427,{"inputs":[{"name":"elementswaps"},{"name":"usize"}],"output":{"name":"elementswaps"}}],[11,"borrow","collections::vec","",176,null],[11,"borrow_mut","","",176,null],[11,"clone","collections::slice","",428,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"clone","","",429,{"inputs":[{"name":"sizedirection"}],"output":{"name":"sizedirection"}}],[11,"next","","",427,{"inputs":[{"name":"elementswaps"}],"output":{"name":"option"}}],[11,"size_hint","","",427,null],[11,"next","","",430,{"inputs":[{"name":"permutations"}],"output":{"name":"option"}}],[11,"size_hint","","",430,null],[11,"clone","collections::str","",431,{"inputs":[{"name":"decompositiontype"}],"output":{"name":"decompositiontype"}}],[11,"clone","","",432,{"inputs":[{"name":"decompositions"}],"output":{"name":"decompositions"}}],[11,"next","","",432,{"inputs":[{"name":"decompositions"}],"output":{"name":"option"}}],[11,"size_hint","","",432,null],[11,"clone","","",433,{"inputs":[{"name":"recompositionstate"}],"output":{"name":"recompositionstate"}}],[11,"clone","","",434,{"inputs":[{"name":"recompositions"}],"output":{"name":"recompositions"}}],[11,"next","","",434,{"inputs":[{"name":"recompositions"}],"output":{"name":"option"}}],[11,"clone","","",435,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",435,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",435,null],[11,"borrow","collections::string","",175,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",176,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",176,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",176,null],[11,"from_raw_buf","","Creates a vector by copying the elements from a raw pointer.",176,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",176,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",176,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",176,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",176,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",176,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",176,null],[11,"as_slice","","Extracts a slice containing the entire vector.",176,null],[11,"as_mut_slice","","Deprecated: use `&mut s[..]` instead.",176,null],[11,"set_len","","Sets the length of a vector.",176,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",176,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",176,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",176,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",176,null],[11,"push","","Appends an element to the back of a collection.",176,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it is empty.",176,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",176,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",176,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",176,null],[11,"len","","Returns the number of elements in the vector.",176,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",176,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"map_in_place","","Converts a `Vec<T>` to a `Vec<U>` where `T` and `U` have the same\nsize and in case they are not zero-sized the same minimal alignment.",176,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"split_off","","Splits the collection into two at the given index.",176,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",176,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",176,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",176,null],[11,"clone","","",176,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",176,null],[11,"hash","","",176,null],[11,"index","","",176,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",176,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",176,null],[11,"index","","",176,null],[11,"index","","",176,null],[11,"index","","",176,null],[11,"index_mut","","",176,null],[11,"index_mut","","",176,null],[11,"index_mut","","",176,null],[11,"index_mut","","",176,null],[11,"deref","","",176,null],[11,"deref_mut","","",176,null],[11,"from_iter","","",176,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",176,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",176,null],[11,"eq","","",176,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","collections::borrow","",436,null],[11,"ne","","",436,null],[11,"eq","","",436,null],[11,"ne","","",436,null],[11,"eq","","",436,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",436,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"eq","","",176,null],[11,"ne","","",176,null],[11,"partial_cmp","","",176,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",176,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",176,null],[11,"default","","",176,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",176,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",176,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",176,null],[11,"from","","",176,null],[11,"from","","",176,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",436,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",176,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"into_inner","","Drops all items that have not yet been moved and returns the empty vector.",437,{"inputs":[{"name":"intoiter"}],"output":{"name":"vec"}}],[11,"next","","",437,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",437,null],[11,"count","","",437,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",437,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",437,null],[11,"next","","",438,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",438,null],[11,"next_back","","",438,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",438,null],[11,"index","collections::bit","",439,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"new","","Creates an empty `BitVec`.",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_elem","","Creates a `BitVec` that holds `nbits` elements, setting each element\nto `bit`.",439,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"bool"}],"output":{"name":"bitvec"}}],[11,"with_capacity","","Constructs a new, empty `BitVec` with the specified capacity.",439,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"from_bytes","","Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\nwith the most significant bits of each byte coming first. Each\nbit becomes `true` if equal to 1 or `false` if equal to 0.",439,null],[11,"from_fn","","Creates a `BitVec` of the specified length where the value at each index\nis `f(index)`.",439,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"f"}],"output":{"name":"bitvec"}}],[11,"get","","Retrieves the value at index `i`, or `None` if the index is out of bounds.",439,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"set","","Sets the value of a bit at an index `i`.",439,null],[11,"set_all","","Sets all bits to 1.",439,null],[11,"negate","","Flips all bits.",439,null],[11,"union","","Calculates the union of two bitvectors. This acts like the bitwise `or`\nfunction.",439,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"intersect","","Calculates the intersection of two bitvectors. This acts like the\nbitwise `and` function.",439,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"difference","","Calculates the difference between two bitvectors.",439,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"all","","Returns `true` if all bits are 1.",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the elements of the vector in order.",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"iter"}}],[11,"append","","Moves all bits from `other` into `Self`, leaving `other` empty.",439,null],[11,"split_off","","Splits the `BitVec` into two at the given bit,\nretaining the first half in-place and returning the second one.",439,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"none","","Returns `true` if all bits are 0.",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"any","","Returns `true` if any bit is 1.",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"to_bytes","","Organises the bits into bytes, such that the first bit in the\n`BitVec` becomes the high-order bit of the first byte. If the\nsize of the `BitVec` is not a multiple of eight then trailing bits\nwill be filled-in with `false`.",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"vec"}}],[11,"eq_vec","","Compares a `BitVec` to a slice of `bool`s.\nBoth the `BitVec` and slice must have the same length.",439,null],[11,"truncate","","Shortens a `BitVec`, dropping excess elements.",439,null],[11,"reserve","","Reserves capacity for at least `additional` more bits to be inserted in the given\n`BitVec`. The collection may reserve more space to avoid frequent reallocations.",439,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\ngiven `BitVec`. Does nothing if the capacity is already sufficient.",439,null],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"grow","","Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.",439,null],[11,"pop","","Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"option"}}],[11,"push","","Pushes a `bool` onto the end.",439,null],[11,"len","","Returns the total number of bits in this vector",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if there are no bits in this vector",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this vector.",439,null],[11,"default","","",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_iter","","",439,{"inputs":[{"name":"bitvec"},{"name":"i"}],"output":{"name":"bitvec"}}],[11,"extend","","",439,null],[11,"clone","","",439,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"clone_from","","",439,null],[11,"partial_cmp","","",439,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"option"}}],[11,"cmp","","",439,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"ordering"}}],[11,"fmt","","",439,{"inputs":[{"name":"bitvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",439,null],[11,"eq","","",439,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clone","","",440,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",440,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",440,null],[11,"next_back","","",440,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",440,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",440,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",441,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"default","","",441,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"from_iter","","",441,{"inputs":[{"name":"bitset"},{"name":"i"}],"output":{"name":"bitset"}}],[11,"extend","","",441,null],[11,"partial_cmp","","",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"option"}}],[11,"cmp","","",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"ordering"}}],[11,"eq","","",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `BitSet`.",441,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"with_capacity","","Creates a new `BitSet` with initially no contents, able to\nhold `nbits` elements without resizing.",441,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"from_bit_vec","","Creates a new `BitSet` from the given bit vector.",441,{"inputs":[{"name":"bitset"},{"name":"bitvec"}],"output":{"name":"bitset"}}],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",441,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `BitSet` to contain `len` distinct elements. In the case\nof `BitSet` this means reallocations will not occur as long as all inserted elements\nare less than `len`.",441,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `BitSet` to contain `len` distinct elements.\nIn the case of `BitSet` this means reallocations will not occur as long as all inserted\nelements are less than `len`.",441,null],[11,"into_bit_vec","","Consumes this set to return the underlying bit vector.",441,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"get_ref","","Returns a reference to the underlying bit vector.",441,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"shrink_to_fit","","Truncates the underlying vector to the least length required.",441,null],[11,"iter","","Iterator over each usize stored in the `BitSet`.",441,{"inputs":[{"name":"bitset"}],"output":{"name":"setiter"}}],[11,"union","","Iterator over each usize stored in `self` union `other`.\nSee [union_with](#method.union_with) for an efficient in-place version.",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"union"}}],[11,"intersection","","Iterator over each usize stored in `self` intersect `other`.\nSee [intersect_with](#method.intersect_with) for an efficient in-place version.",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"intersection"}}],[11,"difference","","Iterator over each usize stored in the `self` setminus `other`.\nSee [difference_with](#method.difference_with) for an efficient in-place version.",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Iterator over each usize stored in the symmetric difference of `self` and `other`.\nSee [symmetric_difference_with](#method.symmetric_difference_with) for\nan efficient in-place version.",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"symmetricdifference"}}],[11,"union_with","","Unions in-place with the specified other bit vector.",441,null],[11,"intersect_with","","Intersects in-place with the specified other bit vector.",441,null],[11,"difference_with","","Makes this bit vector the difference with the specified other bit vector\nin-place.",441,null],[11,"symmetric_difference_with","","Makes this bit vector the symmetric difference with the specified other\nbit vector in-place.",441,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",441,null],[11,"split_off","","Splits the `BitSet` into two at the given key including the key.\nRetains the first part in-place while returning the second part.",441,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"len","","Returns the number of set bits in this set.",441,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether there are no bits set in this set",441,{"inputs":[{"name":"bitset"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this set",441,null],[11,"contains","","Returns `true` if this set contains the specified integer.",441,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",441,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",441,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",441,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"fmt","","",441,{"inputs":[{"name":"bitset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",441,null],[11,"clone","","",442,{"inputs":[{"name":"setiter"}],"output":{"name":"setiter"}}],[11,"clone","","",443,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"twobitpositions"}}],[11,"clone","","",444,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"clone","","",445,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"clone","","",446,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"clone","","",447,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",442,{"inputs":[{"name":"setiter"}],"output":{"name":"option"}}],[11,"size_hint","","",442,null],[11,"next","","",443,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"option"}}],[11,"size_hint","","",443,null],[11,"next","","",444,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",444,null],[11,"next","","",445,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",445,null],[11,"next","","",446,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",446,null],[11,"next","","",447,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",447,null],[11,"next","collections::btree::node","",448,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"next_back","","",448,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"drop","","",448,null],[11,"drop","","",449,null],[11,"as_slices","","",449,null],[11,"as_slices_mut","","",449,null],[11,"as_slices_internal","","",449,{"inputs":[{"name":"node"}],"output":{"name":"nodeslice"}}],[11,"as_slices_internal_mut","","",449,{"inputs":[{"name":"node"}],"output":{"name":"mutnodeslice"}}],[11,"keys","","",449,null],[11,"keys_mut","","",449,null],[11,"vals","","",449,null],[11,"vals_mut","","",449,null],[11,"edges","","",449,null],[11,"edges_mut","","",449,null],[11,"clone","","",449,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"clone","","",450,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"search","","Searches for the given key in the node. If it finds an exact match,\n`Found` will be yielded with the matching index. If it doesn't find an exact match,\n`GoDown` will be yielded with the index of the subtree the key must lie in.",449,{"inputs":[{"name":"node"},{"name":"noderef"},{"name":"q"}],"output":{"name":"searchresult"}}],[11,"make_leaf_root","","Make a leaf root from scratch",449,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"node"}}],[11,"make_internal_root","","Make an internal root and swap it with an old root",449,null],[11,"len","","How many key-value pairs the node contains",449,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_empty","","Does the node not contain any key-value pairs",449,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"capacity","","How many key-value pairs the node can fit",449,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_leaf","","If the node has any children",449,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_underfull","","if the node has too few elements",449,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_full","","if the node cannot fit any more elements",449,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"node","","Returns a reference to the node that contains the pointed-to edge or key/value pair. This\nis very different from `edge` and `edge_mut` because those return children of the node\nreturned by `node`.",450,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"as_raw","","Converts a handle into one that stores the same information using a raw pointer. This can\nbe useful in conjunction with `from_raw` when the type system is insufficient for\ndetermining the lifetimes of the nodes.",450,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a reference. This is an unsafe inverse of `as_raw`, and together they allow\nunsafely extending the lifetime of the reference to the `Node`.",450,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw_mut","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a mutable reference. This is an unsafe inverse of `as_raw`, and together they\nallow unsafely extending the lifetime of the reference to the `Node`.",450,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"into_edge","","Turns the handle into a reference to the edge it points at. This is necessary because the\nreturned pointer has a larger lifetime than what would be returned by `edge` or `edge_mut`,\nmaking it more suitable for moving down a chain of nodes.",450,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"into_edge_mut","","Turns the handle into a mutable reference to the edge it points at. This is necessary\nbecause the returned pointer has a larger lifetime than what would be returned by\n`edge_mut`, making it more suitable for moving down a chain of nodes.",450,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"force","","Figure out whether this handle is pointing to something in a leaf node or to something in\nan internal node, clarifying the type according to the result.",450,{"inputs":[{"name":"handle"}],"output":{"name":"forceresult"}}],[11,"insert_as_leaf","","Tries to insert this key-value pair at the given index in this leaf node\nIf the node is full, we have to split it.",450,null],[11,"edge_mut","","Returns a mutable reference to the edge pointed-to by this handle. This should not be\nconfused with `node`, which references the parent node of what is returned here.",450,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"insert_as_internal","","Tries to insert this key-value pair at the given index in this internal node\nIf the node is full, we have to split it.",450,{"inputs":[{"name":"handle"},{"name":"k"},{"name":"v"},{"name":"node"}],"output":{"name":"insertionresult"}}],[11,"handle_underflow","","Handle an underflow in this node's child. We favour handling \"to the left\" because we know\nwe're empty, but our neighbour can be full. Handling to the left means when we choose to\nsteal, we pop off the end of our neighbour (always fast) and \"unshift\" ourselves\n(always slow, but at least faster since we know we're half-empty).\nHandling \"to the right\" reverses these roles. Of course, we merge whenever possible\nbecause we want dense nodes, and merging is about equal work regardless of direction.",450,null],[11,"into_kv","","Turns the handle into references to the key and value it points at. This is necessary\nbecause the returned pointers have larger lifetimes than what would be returned by `key`\nor `val`.",450,null],[11,"into_kv_mut","","Turns the handle into mutable references to the key and value it points at. This is\nnecessary because the returned pointers have larger lifetimes than what would be returned\nby `key_mut` or `val_mut`.",450,null],[11,"into_left_edge","","Convert this handle into one pointing at the edge immediately to the left of the key/value\npair pointed-to by this handle. This is useful because it returns a reference with larger\nlifetime than `left_edge`.",450,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"key_mut","","Returns a mutable reference to the key pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",450,{"inputs":[{"name":"handle"}],"output":{"name":"k"}}],[11,"val_mut","","Returns a mutable reference to the value pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",450,{"inputs":[{"name":"handle"}],"output":{"name":"v"}}],[11,"left_edge","","Gets the handle pointing to the edge immediately to the left of the key/value pair pointed\nto by this handle.",450,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"right_edge","","Gets the handle pointing to the edge immediately to the right of the key/value pair pointed\nto by this handle.",450,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"remove_as_leaf","","Removes the key/value pair at the handle's location.",450,null],[11,"kv_handle","","Returns the mutable handle pointing to the key/value pair at a given index.",449,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"iter","","",449,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"iter_mut","","",449,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"into_iter","","",449,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"hoist_lone_child","","When a node has no keys or values and only a single edge, extract that edge.",449,null],[11,"clone","","",451,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"elemsandedges"}}],[11,"next_kv","","",451,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv_back","","",451,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge","","",451,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge_back","","",451,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv","","",452,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_kv_back","","",452,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge","","",452,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge_back","","",452,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"drop","","",452,null],[11,"clone","","",453,{"inputs":[{"name":"abstraversal"}],"output":{"name":"abstraversal"}}],[11,"next","","",453,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_back","","",453,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the first item is not an edge.",453,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item_back","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the last item is not an edge.",453,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the first item is not a key-value pair.",453,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item_back","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the last item is not a key-value pair.",453,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",454,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",454,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"iter","","Returns an iterator over key/value pairs and edges in a slice.",454,{"inputs":[{"name":"nodeslice"}],"output":{"name":"abstraversal"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",455,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",455,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"iter_mut","","Returns an iterator over key/value pairs and edges in a slice.",455,{"inputs":[{"name":"mutnodeslice"}],"output":{"name":"abstraversal"}}],[11,"clone","collections::btree::map","",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"clone","","",457,{"inputs":[{"name":"absiter"}],"output":{"name":"absiter"}}],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"with_b","","Makes a new empty BTreeMap with the given B.",456,{"inputs":[{"name":"btreemap"},{"name":"usize"}],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",456,null],[11,"get","","Returns a reference to the value corresponding to the key.",456,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",456,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",456,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",456,{"inputs":[{"name":"btreemap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",456,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"into_iter","","Gets an owning iterator over the entries of the map.",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"intoiter"}}],[11,"deref","collections::btree::map::stack","",458,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"deref_mut","","",458,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"new","","Creates a new PartialSearchStack from a BTreeMap by initializing the stack with the\nroot of the tree.",459,{"inputs":[{"name":"partialsearchstack"},{"name":"btreemap"}],"output":{"name":"partialsearchstack"}}],[11,"with","","Breaks up the stack into a `Pusher` and the next `Node`, allowing the given closure\nto interact with, search, and finally push the `Node` onto the stack. The passed in\nclosure must be polymorphic on the `'id` lifetime parameter, as this statically\nensures that only `Handle`s from the correct `Node` can be pushed.",459,{"inputs":[{"name":"partialsearchstack"},{"name":"f"}],"output":{"name":"t"}}],[11,"push","","Pushes the requested child of the stack's current top on top of the stack. If the child\nexists, then a new PartialSearchStack is yielded. Otherwise, a VacantSearchStack is\nyielded.",460,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"partialsearchstack"}}],[11,"seal","","Converts the PartialSearchStack into a SearchStack.",460,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"searchstack"}}],[11,"peek","","Gets a reference to the value the stack points to.",461,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"peek_mut","","Gets a mutable reference to the value the stack points to.",461,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"into_top","","Converts the stack into a mutable reference to the value it points to, with a lifetime\ntied to the original tree.",461,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"remove","","Removes the key and value in the top element of the stack, then handles underflows as\ndescribed in BTree's pop function.",461,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"insert","","Inserts the key and value into the top element in the stack, and if that node has to\nsplit recursively inserts the split contents into the next element stack until\nsplits stop.",461,{"inputs":[{"name":"searchstack"},{"name":"k"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","collections::btree::map","",456,{"inputs":[{"name":"btreemap"},{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",456,null],[11,"hash","","",456,null],[11,"default","","",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"eq","","",456,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",456,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"option"}}],[11,"cmp","","",456,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"ordering"}}],[11,"fmt","","",456,{"inputs":[{"name":"btreemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",456,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"v"}}],[11,"traverse","collections::btree::node","",453,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",453,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",453,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"next","collections::btree::map","",457,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"size_hint","","",457,null],[11,"next_back","","",457,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"clone","","",462,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",462,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",462,null],[11,"next_back","","",462,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",463,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",463,null],[11,"next_back","","",463,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",464,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",464,null],[11,"next_back","","",464,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",465,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"next","","",465,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",465,null],[11,"next_back","","",465,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"clone","","",466,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",466,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",466,null],[11,"next_back","","",466,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"clone","","",467,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",467,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",467,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",468,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"next_back","","",468,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",469,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",469,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",469,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",470,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",471,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",471,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",471,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",471,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",471,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"iter","","Gets an iterator over the entries of the map.",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map.",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"keys"}}],[11,"values","","Gets an iterator over the values of the map.",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"values"}}],[11,"len","","Returns the number of elements in the map.",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",456,{"inputs":[{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",456,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",456,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"rangemut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",456,{"inputs":[{"name":"btreemap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"partial_cmp","collections::btree::set","",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"option"}}],[11,"lt","","",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"le","","",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"gt","","",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ge","","",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"cmp","","",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"ordering"}}],[11,"eq","","",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ne","","",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"hash","","",472,null],[11,"clone","","",472,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",472,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"with_b","","Makes a new BTreeSet with the given B.",472,{"inputs":[{"name":"btreeset"},{"name":"usize"}],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet's contents.",472,{"inputs":[{"name":"btreeset"}],"output":{"name":"iter"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",472,{"inputs":[{"name":"btreeset"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"difference","","Visits the values representing the difference, in ascending order.",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visits the values representing the intersection, in ascending order.",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"intersection"}}],[11,"union","","Visits the values representing the union, in ascending order.",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",472,{"inputs":[{"name":"btreeset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",472,{"inputs":[{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"clear","","Clears the set, removing all values.",472,null],[11,"contains","","Returns `true` if the set contains a value.",472,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",472,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",472,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",472,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"from_iter","","",472,{"inputs":[{"name":"btreeset"},{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet's contents.",472,{"inputs":[{"name":"btreeset"}],"output":{"name":"intoiter"}}],[11,"extend","","",472,null],[11,"default","","",472,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"fmt","","",472,{"inputs":[{"name":"btreeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",473,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",473,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",473,null],[11,"next_back","","",473,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",474,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",474,null],[11,"next_back","","",474,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",475,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",475,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",475,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",476,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",476,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"clone","","",477,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",477,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"clone","","",478,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",478,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"clone","","",479,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",479,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"borrow","alloc::rc","",480,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",481,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",436,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",436,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",436,null],[11,"into_owned","","Extracts the owned data.",436,null],[11,"deref","","",436,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",436,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",436,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",436,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",436,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",436,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",436,null],[11,"into_cow","","",436,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",436,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"hash","collections::enum_set","",482,null],[11,"cmp","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"option"}}],[11,"lt","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"le","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"gt","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ge","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"eq","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ne","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clone","","",482,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"fmt","","",482,{"inputs":[{"name":"enumset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty `EnumSet`.",482,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",482,{"inputs":[{"name":"enumset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `EnumSet` is empty.",482,{"inputs":[{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clear","","",482,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"union","","Returns the union of both `EnumSets`.",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"intersection","","Returns the intersection of both `EnumSets`.",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn't there before",482,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"remove","","Removes an enum from the EnumSet",482,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",482,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over an `EnumSet`.",482,{"inputs":[{"name":"enumset"}],"output":{"name":"iter"}}],[11,"sub","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitor","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitand","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitxor","","",482,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"clone","","",483,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",483,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",483,null],[11,"from_iter","","",482,{"inputs":[{"name":"enumset"},{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",482,null],[11,"start","core::ops","",33,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",34,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",32,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",32,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"cmp","collections::string","",175,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",175,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",175,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",175,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",175,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",175,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",172,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",175,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",175,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_str","","Creates a new string buffer from the given string.",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",175,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",175,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",175,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",175,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",175,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",175,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",175,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",175,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",175,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",175,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",175,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",175,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",175,null],[11,"push","","Adds the given character to the end of the string.",175,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",175,null],[11,"truncate","","Shortens a string to the specified length.",175,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",175,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",175,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",175,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",175,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",175,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",175,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",175,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",175,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",172,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",172,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",172,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",175,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",175,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",175,null],[11,"extend","","",175,null],[11,"eq","","",175,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",436,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",436,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",436,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",436,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",175,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",436,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",436,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",175,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",175,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",175,null],[11,"add","","",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",175,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",175,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",175,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",175,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",175,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref","","",484,{"inputs":[{"name":"derefstring"}],"output":{"name":"string"}}],[11,"eq","","",485,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",485,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",485,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",485,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"from_str","","",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",175,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",175,null],[11,"from","","",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",436,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",436,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",175,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",175,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",175,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",175,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",486,null],[11,"next","","",486,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",486,null],[11,"next_back","","",486,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","collections::vec","",487,null],[11,"drop","","",488,null],[11,"drop","","",489,null],[11,"eq","collections","",490,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"ne","","",490,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"hash","","",490,null],[11,"fmt","","",490,{"inputs":[{"name":"bound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",490,{"inputs":[{"name":"bound"}],"output":{"name":"bound"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",171,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",171,null],[11,"default","","",171,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",171,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",171,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",171,null],[11,"eq","","",171,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",171,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",171,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",171,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",171,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",171,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",171,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",171,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",171,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",171,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",171,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",171,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",171,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",171,null],[11,"next_back","","",171,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",171,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",171,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"deref","collections::vec","",487,{"inputs":[{"name":"derefvec"}],"output":{"name":"vec"}}],[11,"next","rustc_unicode::char","",491,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",492,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",480,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",480,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"make_unique","","Make a mutable reference from the given `Rc<T>`.",480,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",480,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",480,null],[11,"clone","","Makes a clone of the `Rc<T>`.",480,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",480,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",480,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",480,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",480,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",480,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",480,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",480,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",480,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",480,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",480,null],[11,"fmt","","",480,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",480,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",480,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",493,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",493,null],[11,"clone","","Makes a clone of the `Weak<T>`.",493,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",493,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","glutin","",1,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"clone","","",2,{"inputs":[{"name":"elementstate"}],"output":{"name":"elementstate"}}],[11,"eq","","",2,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"elementstate"},{"name":"elementstate"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"elementstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"eq","","",3,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"virtualkeycode"}],"output":{"name":"virtualkeycode"}}],[11,"eq","","",4,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"virtualkeycode"},{"name":"virtualkeycode"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"virtualkeycode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",494,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",494,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"glrequest"}],"output":{"name":"headlessrendererbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",494,{"inputs":[{"name":"headlessrendererbuilder"},{"name":"bool"}],"output":{"name":"headlessrendererbuilder"}}],[11,"build","","Builds the headless context.",494,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the headless context.",494,{"inputs":[{"name":"headlessrendererbuilder"}],"output":{"name":"result"}}],[11,"make_current","","Creates a new OpenGL context\nSets the context as the current context.",495,{"inputs":[{"name":"headlesscontext"}],"output":null}],[11,"is_current","","Returns true if this context is the current one in this thread.",495,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",495,null],[11,"get_api","","Returns the API that is currently provided by this window.",495,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"set_window_resize_callback","","",495,{"inputs":[{"name":"headlesscontext"},{"name":"option"}],"output":null}],[11,"get_proc_addr","","",495,null],[11,"make_current","","",495,{"inputs":[{"name":"headlesscontext"}],"output":null}],[11,"is_current","","",495,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",495,null],[11,"swap_buffers","","",495,{"inputs":[{"name":"headlesscontext"}],"output":null}],[11,"get_api","","",495,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",495,{"inputs":[{"name":"headlesscontext"}],"output":{"name":"pixelformat"}}],[11,"new","","Initializes a new `WindowBuilder` with default values.",496,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_dimensions","","Requests the window to be of specific dimensions.",496,{"inputs":[{"name":"windowbuilder"},{"name":"u32"},{"name":"u32"}],"output":{"name":"windowbuilder"}}],[11,"with_title","","Requests a specific title for the window.",496,{"inputs":[{"name":"windowbuilder"},{"name":"string"}],"output":{"name":"windowbuilder"}}],[11,"with_fullscreen","","Requests fullscreen mode.",496,{"inputs":[{"name":"windowbuilder"},{"name":"monitorid"}],"output":{"name":"windowbuilder"}}],[11,"with_shared_lists","","The created window will share all its OpenGL objects with the window in the parameter.",496,{"inputs":[{"name":"windowbuilder"},{"name":"window"}],"output":{"name":"windowbuilder"}}],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",496,{"inputs":[{"name":"windowbuilder"},{"name":"glrequest"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",496,{"inputs":[{"name":"windowbuilder"},{"name":"glprofile"}],"output":{"name":"windowbuilder"}}],[11,"with_gl_debug_flag","","Sets the *debug* flag for the OpenGL context.",496,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_vsync","","Requests that the window has vsync enabled.",496,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",496,{"inputs":[{"name":"windowbuilder"},{"name":"bool"}],"output":{"name":"windowbuilder"}}],[11,"with_multisampling","","Sets the multisampling level to request.",496,{"inputs":[{"name":"windowbuilder"},{"name":"u16"}],"output":{"name":"windowbuilder"}}],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",496,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",496,{"inputs":[{"name":"windowbuilder"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",496,{"inputs":[{"name":"windowbuilder"},{"name":"u8"},{"name":"u8"}],"output":{"name":"windowbuilder"}}],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",496,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"windowbuilder"}}],[11,"with_srgb","","Sets whether sRGB should be enabled on the window. `None` means \"I don't care\".",496,{"inputs":[{"name":"windowbuilder"},{"name":"option"}],"output":{"name":"windowbuilder"}}],[11,"build","","Builds the window.",496,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"build_strict","","Builds the window.",496,{"inputs":[{"name":"windowbuilder"}],"output":{"name":"result"}}],[11,"default","","",497,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"new","","Creates a new OpenGL context, and a Window for platforms where this is appropriate.",497,{"inputs":[{"name":"window"}],"output":{"name":"result"}}],[11,"is_closed","","Returns true if the window has previously been closed by the user.",497,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"set_title","","Modifies the title of the window.",497,{"inputs":[{"name":"window"},{"name":"str"}],"output":null}],[11,"show","","Shows the window if it was hidden.",497,{"inputs":[{"name":"window"}],"output":null}],[11,"hide","","Hides the window if it was visible.",497,{"inputs":[{"name":"window"}],"output":null}],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the\n top-left hand corner of the desktop.",497,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_position","","Modifies the position of the window.",497,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_inner_size","","Returns the size in pixels of the client area of the window.",497,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_outer_size","","Returns the size in pixels of the window.",497,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_inner_size","","Modifies the inner size of the window.",497,{"inputs":[{"name":"window"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"poll_events","","Returns an iterator that poll for the next event in the window's events queue.\nReturns `None` if there is no event in the queue.",497,{"inputs":[{"name":"window"}],"output":{"name":"polleventsiterator"}}],[11,"wait_events","","Returns an iterator that returns events one by one, blocking if necessary until one is\navailable.",497,{"inputs":[{"name":"window"}],"output":{"name":"waiteventsiterator"}}],[11,"make_current","","Sets the context as the current context.",497,{"inputs":[{"name":"window"}],"output":null}],[11,"is_current","","Returns true if this context is the current one in this thread.",497,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","Returns the address of an OpenGL function.",497,null],[11,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",497,{"inputs":[{"name":"window"}],"output":null}],[11,"platform_display","","Gets the native platform specific display for this window.\nThis is typically only required when integrating with\nother libraries that need this information.",497,null],[11,"platform_window","","Gets the native platform specific window handle. This is\ntypically only required when integrating with other libraries\nthat need this information.",497,null],[11,"get_api","","Returns the API that is currently provided by this window.",497,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","Returns the pixel format of this window.",497,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"create_window_proxy","","Create a window proxy for this window, that can be freely\npassed to different threads.",497,{"inputs":[{"name":"window"}],"output":{"name":"windowproxy"}}],[11,"set_window_resize_callback","","Sets a resize callback that is called by Mac (and potentially other\noperating systems) during resize operations. This can be used to repaint\nduring window resizing.",497,{"inputs":[{"name":"window"},{"name":"option"}],"output":null}],[11,"set_cursor","","Modifies the mouse cursor of the window.\nHas no effect on Android.",497,{"inputs":[{"name":"window"},{"name":"mousecursor"}],"output":null}],[11,"hidpi_factor","","Returns the ratio between the backing framebuffer resolution and the\nwindow size in screen pixels. This is typically one for a normal display\nand two for a retina display.",497,{"inputs":[{"name":"window"}],"output":{"name":"f32"}}],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",497,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_cursor_state","","Sets how glutin handles the cursor. See the documentation of `CursorState` for details.",497,{"inputs":[{"name":"window"},{"name":"cursorstate"}],"output":{"name":"result"}}],[11,"get_proc_addr","","",497,null],[11,"make_current","","",497,{"inputs":[{"name":"window"}],"output":null}],[11,"is_current","","",497,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_proc_address","","",497,null],[11,"swap_buffers","","",497,{"inputs":[{"name":"window"}],"output":null}],[11,"get_api","","",497,{"inputs":[{"name":"window"}],"output":{"name":"api"}}],[11,"get_pixel_format","","",497,{"inputs":[{"name":"window"}],"output":{"name":"pixelformat"}}],[11,"clone","","",498,{"inputs":[{"name":"windowproxy"}],"output":{"name":"windowproxy"}}],[11,"wakeup_event_loop","","Triggers a blocked event loop to wake up. This is\ntypically called when another thread wants to wake\nup the blocked rendering thread to cause a refresh.",498,{"inputs":[{"name":"windowproxy"}],"output":null}],[11,"next","","",499,{"inputs":[{"name":"polleventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",499,null],[11,"next","","",500,{"inputs":[{"name":"waiteventsiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",500,null],[11,"next","","",501,{"inputs":[{"name":"availablemonitorsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",501,null],[11,"get_name","","Returns a human-readable name of the monitor.",502,{"inputs":[{"name":"monitorid"}],"output":{"name":"option"}}],[11,"get_native_identifier","","Returns the native platform identifier for this monitor.",502,{"inputs":[{"name":"monitorid"}],"output":{"name":"nativemonitorid"}}],[11,"get_dimensions","","Returns the number of pixels currently displayed on the monitor.",502,null],[11,"eq","","",5,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"nativemonitorid"},{"name":"nativemonitorid"}],"output":{"name":"bool"}}],[6,"ScanCode","","",null,null],[7,"GL_CORE","","The minimum core profile GL context. Useful for getting the minimum\nrequired GL version while still running on OSX, which often forbids\nthe compatibility profile features.",null,null],[8,"GlContext","","Trait that describes objects that have access to an OpenGL context.",null,null],[10,"make_current","","Sets the context as the current context.",503,{"inputs":[{"name":"glcontext"}],"output":null}],[10,"is_current","","Returns true if this context is the current one in this thread.",503,{"inputs":[{"name":"glcontext"}],"output":{"name":"bool"}}],[10,"get_proc_address","","Returns the address of an OpenGL function.",503,null],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",503,{"inputs":[{"name":"glcontext"}],"output":null}],[10,"get_api","","Returns the OpenGL API being used.",503,{"inputs":[{"name":"glcontext"}],"output":{"name":"api"}}],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",503,{"inputs":[{"name":"glcontext"}],"output":{"name":"pixelformat"}}],[11,"eq","","",6,{"inputs":[{"name":"creationerror"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"creationerror"},{"name":"creationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"creationerror"}],"output":{"name":"creationerror"}}],[11,"fmt","","",6,{"inputs":[{"name":"creationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",6,{"inputs":[{"name":"creationerror"}],"output":{"name":"str"}}],[11,"eq","","",7,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"api"},{"name":"api"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"api"}],"output":{"name":"api"}}],[11,"fmt","","",7,{"inputs":[{"name":"api"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"glprofile"},{"name":"glprofile"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"glprofile"}],"output":{"name":"glprofile"}}],[11,"fmt","","",8,{"inputs":[{"name":"glprofile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"glrequest"}],"output":{"name":"glrequest"}}],[11,"fmt","","",9,{"inputs":[{"name":"glrequest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_gl_version","","Extract the desktop GL version, if any.",9,{"inputs":[{"name":"glrequest"}],"output":{"name":"option"}}],[11,"clone","","",10,{"inputs":[{"name":"mousecursor"}],"output":{"name":"mousecursor"}}],[11,"fmt","","",10,{"inputs":[{"name":"mousecursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"cursorstate"}],"output":{"name":"cursorstate"}}],[11,"fmt","","",11,{"inputs":[{"name":"cursorstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"pixelformat"}],"output":{"name":"pixelformat"}}],[11,"fmt","","",0,{"inputs":[{"name":"pixelformat"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"PixelFormat"],[4,"Event"],[4,"ElementState"],[4,"MouseButton"],[4,"VirtualKeyCode"],[4,"NativeMonitorId"],[4,"CreationError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"MouseCursor"],[4,"CursorState"],[4,"Option"],[3,"Wrapping"],[3,"Big32x36"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"BorrowRefMut"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"StrSearcher"],[4,"State"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"TwoWaySearcher"],[4,"OldSearcher"],[3,"OldMatchIndices"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"Mutex"],[3,"Box"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"String"],[3,"Vec"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"JoinGuard"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"VecMap"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"Metadata"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"Lazy"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"BufStream"],[3,"Cursor"],[4,"Repr"],[3,"Custom"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"Metadata"],[3,"Command"],[3,"ExitStatus"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"Output"],[4,"StdioImp"],[3,"Stdio"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Future"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"Duration"],[3,"Condvar"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"FileAttr"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"_Unwind_Action"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"ElementSwaps"],[4,"Direction"],[3,"SizeDirection"],[3,"Permutations"],[4,"DecompositionType"],[3,"Decompositions"],[4,"RecompositionState"],[3,"Recompositions"],[3,"Utf16Units"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"BitVec"],[3,"Iter"],[3,"BitSet"],[3,"SetIter"],[3,"TwoBitPositions"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"RawItems"],[3,"Node"],[3,"Handle"],[3,"ElemsAndEdges"],[3,"MoveTraversalImpl"],[3,"AbsTraversal"],[3,"NodeSlice"],[3,"MutNodeSlice"],[3,"BTreeMap"],[3,"AbsIter"],[3,"IdRef"],[3,"PartialSearchStack"],[3,"Pusher"],[3,"SearchStack"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"Rc"],[3,"Arc"],[3,"EnumSet"],[3,"Iter"],[3,"DerefString"],[3,"ParseError"],[3,"Drain"],[3,"DerefVec"],[3,"PartialVecNonZeroSized"],[3,"PartialVecZeroSized"],[4,"Bound"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"Weak"],[3,"HeadlessRendererBuilder"],[3,"HeadlessContext"],[3,"WindowBuilder"],[3,"Window"],[3,"WindowProxy"],[3,"PollEventsIterator"],[3,"WaitEventsIterator"],[3,"AvailableMonitorsIter"],[3,"MonitorID"],[8,"GlContext"]]};
searchIndex['x11_dl'] = {"items":[[0,"","x11_dl","",null,null],[0,"error","","",null,null],[3,"OpenError","x11_dl::error","",null,null],[4,"OpenErrorKind","","",null,null],[13,"Library","","",0,null],[13,"Symbol","","",0,null],[11,"fmt","","",1,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"openerror"}}],[11,"detail","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"new","","",1,{"inputs":[{"name":"openerror"},{"name":"openerrorkind"},{"name":"string"}],"output":{"name":"openerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"openerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"openerror"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"openerrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"openerrorkind"}}],[11,"as_str","","",0,{"inputs":[{"name":"openerrorkind"}],"output":{"name":"str"}}],[0,"glx","x11_dl","",null,null],[3,"Glx","x11_dl::glx","",null,null],[12,"glXChooseFBConfig","","",2,null],[12,"glXChooseVisual","","",2,null],[12,"glXCopyContext","","",2,null],[12,"glXCreateContext","","",2,null],[12,"glXCreateGLXPixmap","","",2,null],[12,"glXCreateNewContext","","",2,null],[12,"glXCreatePbuffer","","",2,null],[12,"glXCreatePixmap","","",2,null],[12,"glXCreateWindow","","",2,null],[12,"glXDestroyContext","","",2,null],[12,"glXDestroyGLXPixmap","","",2,null],[12,"glXDestroyPbuffer","","",2,null],[12,"glXDestroyPixmap","","",2,null],[12,"glXDestroyWindow","","",2,null],[12,"glXGetClientString","","",2,null],[12,"glXGetConfig","","",2,null],[12,"glXGetCurrentContext","","",2,null],[12,"glXGetCurrentDisplay","","",2,null],[12,"glXGetCurrentDrawable","","",2,null],[12,"glXGetCurrentReadDrawable","","",2,null],[12,"glXGetFBConfigAttrib","","",2,null],[12,"glXGetFBConfigs","","",2,null],[12,"glXGetProcAddress","","",2,null],[12,"glXGetSelectedEvent","","",2,null],[12,"glXGetVisualFromFBConfig","","",2,null],[12,"glXIsDirect","","",2,null],[12,"glXMakeContextCurrent","","",2,null],[12,"glXMakeCurrent","","",2,null],[12,"glXQueryContext","","",2,null],[12,"glXQueryDrawable","","",2,null],[12,"glXQueryExtension","","",2,null],[12,"glXQueryExtensionsString","","",2,null],[12,"glXQueryServerString","","",2,null],[12,"glXQueryVersion","","",2,null],[12,"glXSelectEvent","","",2,null],[12,"glXSwapBuffers","","",2,null],[12,"glXUseXFont","","",2,null],[12,"glXWaitGL","","",2,null],[12,"glXWaitX","","",2,null],[3,"__GLXcontextRec","","",null,null],[3,"__GLXFBConfigRec","","",null,null],[0,"arb","","",null,null],[17,"GLX_CONTEXT_MAJOR_VERSION_ARB","x11_dl::glx::arb","",null,null],[17,"GLX_CONTEXT_MINOR_VERSION_ARB","","",null,null],[17,"GLX_CONTEXT_FLAGS_ARB","","",null,null],[17,"GLX_CONTEXT_PROFILE_MASK_ARB","","",null,null],[17,"GLX_CONTEXT_DEBUG_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_CORE_PROFILE_BIT_ARB","","",null,null],[17,"GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","","",null,null],[0,"ext","x11_dl::glx","",null,null],[17,"GLX_SWAP_INTERVAL_EXT","x11_dl::glx::ext","",null,null],[17,"GLX_MAX_SWAP_INTERVAL_EXT","","",null,null],[6,"GLXContext","x11_dl::glx","",null,null],[6,"GLXContextID","","",null,null],[6,"GLXDrawable","","",null,null],[6,"GLXFBConfig","","",null,null],[6,"GLXFBConfigID","","",null,null],[6,"GLXPbuffer","","",null,null],[6,"GLXPixmap","","",null,null],[6,"GLXWindow","","",null,null],[17,"GLX_SLOW_CONFIG","","",null,null],[17,"GLX_NON_CONFORMANT_CONFIG","","",null,null],[17,"GLX_WINDOW_BIT","","",null,null],[17,"GLX_PIXMAP_BIT","","",null,null],[17,"GLX_PBUFFER_BIT","","",null,null],[17,"GLX_USE_GL","","",null,null],[17,"GLX_BUFFER_SIZE","","",null,null],[17,"GLX_LEVEL","","",null,null],[17,"GLX_RGBA","","",null,null],[17,"GLX_DOUBLEBUFFER","","",null,null],[17,"GLX_STEREO","","",null,null],[17,"GLX_AUX_BUFFERS","","",null,null],[17,"GLX_RED_SIZE","","",null,null],[17,"GLX_GREEN_SIZE","","",null,null],[17,"GLX_BLUE_SIZE","","",null,null],[17,"GLX_ALPHA_SIZE","","",null,null],[17,"GLX_DEPTH_SIZE","","",null,null],[17,"GLX_STENCIL_SIZE","","",null,null],[17,"GLX_ACCUM_RED_SIZE","","",null,null],[17,"GLX_ACCUM_GREEN_SIZE","","",null,null],[17,"GLX_ACCUM_BLUE_SIZE","","",null,null],[17,"GLX_ACCUM_ALPHA_SIZE","","",null,null],[17,"GLX_CONFIG_CAVEAT","","",null,null],[17,"GLX_X_VISUAL_TYPE","","",null,null],[17,"GLX_TRANSPARENT_TYPE","","",null,null],[17,"GLX_TRANSPARENT_INDEX_VALUE","","",null,null],[17,"GLX_TRANSPARENT_RED_VALUE","","",null,null],[17,"GLX_TRANSPARENT_GREEN_VALUE","","",null,null],[17,"GLX_TRANSPARENT_BLUE_VALUE","","",null,null],[17,"GLX_TRANSPARENT_ALPHA_VALUE","","",null,null],[17,"GLX_DRAWABLE_TYPE","","",null,null],[17,"GLX_RENDER_TYPE","","",null,null],[17,"GLX_X_RENDERABLE","","",null,null],[17,"GLX_FBCONFIG_ID","","",null,null],[17,"GLX_DONT_CARE","","",null,null],[17,"GLX_NONE","","",null,null],[17,"GLX_RGBA_BIT","","",null,null],[17,"GLX_COLOR_INDEX_BIT","","",null,null],[17,"GLX_TRANSPARENT_RGB","","",null,null],[17,"GLX_TRANSPARENT_INDEX","","",null,null],[17,"GLX_TRUE_COLOR","","",null,null],[17,"GLX_DIRECT_COLOR","","",null,null],[17,"GLX_PSEUDO_COLOR","","",null,null],[17,"GLX_STATIC_COLOR","","",null,null],[17,"GLX_GRAY_SCALE","","",null,null],[17,"GLX_STATIC_GRAY","","",null,null],[11,"open","","",2,{"inputs":[{"name":"glx"}],"output":{"name":"result"}}],[0,"keysym","x11_dl","",null,null],[17,"XK_BackSpace","x11_dl::keysym","",null,null],[17,"XK_Tab","","",null,null],[17,"XK_Linefeed","","",null,null],[17,"XK_Clear","","",null,null],[17,"XK_Return","","",null,null],[17,"XK_Pause","","",null,null],[17,"XK_Scroll_Lock","","",null,null],[17,"XK_Sys_Req","","",null,null],[17,"XK_Escape","","",null,null],[17,"XK_Delete","","",null,null],[17,"XK_Multi_key","","",null,null],[17,"XK_Kanji","","",null,null],[17,"XK_Muhenkan","","",null,null],[17,"XK_Henkan_Mode","","",null,null],[17,"XK_Henkan","","",null,null],[17,"XK_Romaji","","",null,null],[17,"XK_Hiragana","","",null,null],[17,"XK_Katakana","","",null,null],[17,"XK_Hiragana_Katakana","","",null,null],[17,"XK_Zenkaku","","",null,null],[17,"XK_Hankaku","","",null,null],[17,"XK_Zenkaku_Hankaku","","",null,null],[17,"XK_Touroku","","",null,null],[17,"XK_Massyo","","",null,null],[17,"XK_Kana_Lock","","",null,null],[17,"XK_Kana_Shift","","",null,null],[17,"XK_Eisu_Shift","","",null,null],[17,"XK_Eisu_toggle","","",null,null],[17,"XK_Home","","",null,null],[17,"XK_Left","","",null,null],[17,"XK_Up","","",null,null],[17,"XK_Right","","",null,null],[17,"XK_Down","","",null,null],[17,"XK_Prior","","",null,null],[17,"XK_Page_Up","","",null,null],[17,"XK_Next","","",null,null],[17,"XK_Page_Down","","",null,null],[17,"XK_End","","",null,null],[17,"XK_Begin","","",null,null],[17,"XK_Win_L","","",null,null],[17,"XK_Win_R","","",null,null],[17,"XK_App","","",null,null],[17,"XK_Select","","",null,null],[17,"XK_Print","","",null,null],[17,"XK_Execute","","",null,null],[17,"XK_Insert","","",null,null],[17,"XK_Undo","","",null,null],[17,"XK_Redo","","",null,null],[17,"XK_Menu","","",null,null],[17,"XK_Find","","",null,null],[17,"XK_Cancel","","",null,null],[17,"XK_Help","","",null,null],[17,"XK_Break","","",null,null],[17,"XK_Mode_switch","","",null,null],[17,"XK_script_switch","","",null,null],[17,"XK_Num_Lock","","",null,null],[17,"XK_KP_Space","","",null,null],[17,"XK_KP_Tab","","",null,null],[17,"XK_KP_Enter","","",null,null],[17,"XK_KP_F1","","",null,null],[17,"XK_KP_F2","","",null,null],[17,"XK_KP_F3","","",null,null],[17,"XK_KP_F4","","",null,null],[17,"XK_KP_Home","","",null,null],[17,"XK_KP_Left","","",null,null],[17,"XK_KP_Up","","",null,null],[17,"XK_KP_Right","","",null,null],[17,"XK_KP_Down","","",null,null],[17,"XK_KP_Prior","","",null,null],[17,"XK_KP_Page_Up","","",null,null],[17,"XK_KP_Next","","",null,null],[17,"XK_KP_Page_Down","","",null,null],[17,"XK_KP_End","","",null,null],[17,"XK_KP_Begin","","",null,null],[17,"XK_KP_Insert","","",null,null],[17,"XK_KP_Delete","","",null,null],[17,"XK_KP_Equal","","",null,null],[17,"XK_KP_Multiply","","",null,null],[17,"XK_KP_Add","","",null,null],[17,"XK_KP_Separator","","",null,null],[17,"XK_KP_Subtract","","",null,null],[17,"XK_KP_Decimal","","",null,null],[17,"XK_KP_Divide","","",null,null],[17,"XK_KP_0","","",null,null],[17,"XK_KP_1","","",null,null],[17,"XK_KP_2","","",null,null],[17,"XK_KP_3","","",null,null],[17,"XK_KP_4","","",null,null],[17,"XK_KP_5","","",null,null],[17,"XK_KP_6","","",null,null],[17,"XK_KP_7","","",null,null],[17,"XK_KP_8","","",null,null],[17,"XK_KP_9","","",null,null],[17,"XK_F1","","",null,null],[17,"XK_F2","","",null,null],[17,"XK_F3","","",null,null],[17,"XK_F4","","",null,null],[17,"XK_F5","","",null,null],[17,"XK_F6","","",null,null],[17,"XK_F7","","",null,null],[17,"XK_F8","","",null,null],[17,"XK_F9","","",null,null],[17,"XK_F10","","",null,null],[17,"XK_F11","","",null,null],[17,"XK_L1","","",null,null],[17,"XK_F12","","",null,null],[17,"XK_L2","","",null,null],[17,"XK_F13","","",null,null],[17,"XK_L3","","",null,null],[17,"XK_F14","","",null,null],[17,"XK_L4","","",null,null],[17,"XK_F15","","",null,null],[17,"XK_L5","","",null,null],[17,"XK_F16","","",null,null],[17,"XK_L6","","",null,null],[17,"XK_F17","","",null,null],[17,"XK_L7","","",null,null],[17,"XK_F18","","",null,null],[17,"XK_L8","","",null,null],[17,"XK_F19","","",null,null],[17,"XK_L9","","",null,null],[17,"XK_F20","","",null,null],[17,"XK_L10","","",null,null],[17,"XK_F21","","",null,null],[17,"XK_R1","","",null,null],[17,"XK_F22","","",null,null],[17,"XK_R2","","",null,null],[17,"XK_F23","","",null,null],[17,"XK_R3","","",null,null],[17,"XK_F24","","",null,null],[17,"XK_R4","","",null,null],[17,"XK_F25","","",null,null],[17,"XK_R5","","",null,null],[17,"XK_F26","","",null,null],[17,"XK_R6","","",null,null],[17,"XK_F27","","",null,null],[17,"XK_R7","","",null,null],[17,"XK_F28","","",null,null],[17,"XK_R8","","",null,null],[17,"XK_F29","","",null,null],[17,"XK_R9","","",null,null],[17,"XK_F30","","",null,null],[17,"XK_R10","","",null,null],[17,"XK_F31","","",null,null],[17,"XK_R11","","",null,null],[17,"XK_F32","","",null,null],[17,"XK_R12","","",null,null],[17,"XK_F33","","",null,null],[17,"XK_R13","","",null,null],[17,"XK_F34","","",null,null],[17,"XK_R14","","",null,null],[17,"XK_F35","","",null,null],[17,"XK_R15","","",null,null],[17,"XK_Shift_L","","",null,null],[17,"XK_Shift_R","","",null,null],[17,"XK_Control_L","","",null,null],[17,"XK_Control_R","","",null,null],[17,"XK_Caps_Lock","","",null,null],[17,"XK_Shift_Lock","","",null,null],[17,"XK_Meta_L","","",null,null],[17,"XK_Meta_R","","",null,null],[17,"XK_Alt_L","","",null,null],[17,"XK_Alt_R","","",null,null],[17,"XK_Super_L","","",null,null],[17,"XK_Super_R","","",null,null],[17,"XK_Hyper_L","","",null,null],[17,"XK_Hyper_R","","",null,null],[17,"XK_space","","",null,null],[17,"XK_exclam","","",null,null],[17,"XK_quotedbl","","",null,null],[17,"XK_numbersign","","",null,null],[17,"XK_dollar","","",null,null],[17,"XK_percent","","",null,null],[17,"XK_ampersand","","",null,null],[17,"XK_apostrophe","","",null,null],[17,"XK_quoteright","","",null,null],[17,"XK_parenleft","","",null,null],[17,"XK_parenright","","",null,null],[17,"XK_asterisk","","",null,null],[17,"XK_plus","","",null,null],[17,"XK_comma","","",null,null],[17,"XK_minus","","",null,null],[17,"XK_period","","",null,null],[17,"XK_slash","","",null,null],[17,"XK_0","","",null,null],[17,"XK_1","","",null,null],[17,"XK_2","","",null,null],[17,"XK_3","","",null,null],[17,"XK_4","","",null,null],[17,"XK_5","","",null,null],[17,"XK_6","","",null,null],[17,"XK_7","","",null,null],[17,"XK_8","","",null,null],[17,"XK_9","","",null,null],[17,"XK_colon","","",null,null],[17,"XK_semicolon","","",null,null],[17,"XK_less","","",null,null],[17,"XK_equal","","",null,null],[17,"XK_greater","","",null,null],[17,"XK_question","","",null,null],[17,"XK_at","","",null,null],[17,"XK_A","","",null,null],[17,"XK_B","","",null,null],[17,"XK_C","","",null,null],[17,"XK_D","","",null,null],[17,"XK_E","","",null,null],[17,"XK_F","","",null,null],[17,"XK_G","","",null,null],[17,"XK_H","","",null,null],[17,"XK_I","","",null,null],[17,"XK_J","","",null,null],[17,"XK_K","","",null,null],[17,"XK_L","","",null,null],[17,"XK_M","","",null,null],[17,"XK_N","","",null,null],[17,"XK_O","","",null,null],[17,"XK_P","","",null,null],[17,"XK_Q","","",null,null],[17,"XK_R","","",null,null],[17,"XK_S","","",null,null],[17,"XK_T","","",null,null],[17,"XK_U","","",null,null],[17,"XK_V","","",null,null],[17,"XK_W","","",null,null],[17,"XK_X","","",null,null],[17,"XK_Y","","",null,null],[17,"XK_Z","","",null,null],[17,"XK_bracketleft","","",null,null],[17,"XK_backslash","","",null,null],[17,"XK_bracketright","","",null,null],[17,"XK_asciicircum","","",null,null],[17,"XK_underscore","","",null,null],[17,"XK_grave","","",null,null],[17,"XK_quoteleft","","",null,null],[17,"XK_a","","",null,null],[17,"XK_b","","",null,null],[17,"XK_c","","",null,null],[17,"XK_d","","",null,null],[17,"XK_e","","",null,null],[17,"XK_f","","",null,null],[17,"XK_g","","",null,null],[17,"XK_h","","",null,null],[17,"XK_i","","",null,null],[17,"XK_j","","",null,null],[17,"XK_k","","",null,null],[17,"XK_l","","",null,null],[17,"XK_m","","",null,null],[17,"XK_n","","",null,null],[17,"XK_o","","",null,null],[17,"XK_p","","",null,null],[17,"XK_q","","",null,null],[17,"XK_r","","",null,null],[17,"XK_s","","",null,null],[17,"XK_t","","",null,null],[17,"XK_u","","",null,null],[17,"XK_v","","",null,null],[17,"XK_w","","",null,null],[17,"XK_x","","",null,null],[17,"XK_y","","",null,null],[17,"XK_z","","",null,null],[17,"XK_braceleft","","",null,null],[17,"XK_bar","","",null,null],[17,"XK_braceright","","",null,null],[17,"XK_asciitilde","","",null,null],[17,"XK_nobreakspace","","",null,null],[17,"XK_exclamdown","","",null,null],[17,"XK_cent","","",null,null],[17,"XK_sterling","","",null,null],[17,"XK_currency","","",null,null],[17,"XK_yen","","",null,null],[17,"XK_brokenbar","","",null,null],[17,"XK_section","","",null,null],[17,"XK_diaeresis","","",null,null],[17,"XK_copyright","","",null,null],[17,"XK_ordfeminine","","",null,null],[17,"XK_guillemotleft","","",null,null],[17,"XK_notsign","","",null,null],[17,"XK_hyphen","","",null,null],[17,"XK_registered","","",null,null],[17,"XK_macron","","",null,null],[17,"XK_degree","","",null,null],[17,"XK_plusminus","","",null,null],[17,"XK_twosuperior","","",null,null],[17,"XK_threesuperior","","",null,null],[17,"XK_acute","","",null,null],[17,"XK_mu","","",null,null],[17,"XK_paragraph","","",null,null],[17,"XK_periodcentered","","",null,null],[17,"XK_cedilla","","",null,null],[17,"XK_onesuperior","","",null,null],[17,"XK_masculine","","",null,null],[17,"XK_guillemotright","","",null,null],[17,"XK_onequarter","","",null,null],[17,"XK_onehalf","","",null,null],[17,"XK_threequarters","","",null,null],[17,"XK_questiondown","","",null,null],[17,"XK_Agrave","","",null,null],[17,"XK_Aacute","","",null,null],[17,"XK_Acircumflex","","",null,null],[17,"XK_Atilde","","",null,null],[17,"XK_Adiaeresis","","",null,null],[17,"XK_Aring","","",null,null],[17,"XK_AE","","",null,null],[17,"XK_Ccedilla","","",null,null],[17,"XK_Egrave","","",null,null],[17,"XK_Eacute","","",null,null],[17,"XK_Ecircumflex","","",null,null],[17,"XK_Ediaeresis","","",null,null],[17,"XK_Igrave","","",null,null],[17,"XK_Iacute","","",null,null],[17,"XK_Icircumflex","","",null,null],[17,"XK_Idiaeresis","","",null,null],[17,"XK_ETH","","",null,null],[17,"XK_Eth","","",null,null],[17,"XK_Ntilde","","",null,null],[17,"XK_Ograve","","",null,null],[17,"XK_Oacute","","",null,null],[17,"XK_Ocircumflex","","",null,null],[17,"XK_Otilde","","",null,null],[17,"XK_Odiaeresis","","",null,null],[17,"XK_multiply","","",null,null],[17,"XK_Ooblique","","",null,null],[17,"XK_Ugrave","","",null,null],[17,"XK_Uacute","","",null,null],[17,"XK_Ucircumflex","","",null,null],[17,"XK_Udiaeresis","","",null,null],[17,"XK_Yacute","","",null,null],[17,"XK_THORN","","",null,null],[17,"XK_Thorn","","",null,null],[17,"XK_ssharp","","",null,null],[17,"XK_agrave","","",null,null],[17,"XK_aacute","","",null,null],[17,"XK_acircumflex","","",null,null],[17,"XK_atilde","","",null,null],[17,"XK_adiaeresis","","",null,null],[17,"XK_aring","","",null,null],[17,"XK_ae","","",null,null],[17,"XK_ccedilla","","",null,null],[17,"XK_egrave","","",null,null],[17,"XK_eacute","","",null,null],[17,"XK_ecircumflex","","",null,null],[17,"XK_ediaeresis","","",null,null],[17,"XK_igrave","","",null,null],[17,"XK_iacute","","",null,null],[17,"XK_icircumflex","","",null,null],[17,"XK_idiaeresis","","",null,null],[17,"XK_eth","","",null,null],[17,"XK_ntilde","","",null,null],[17,"XK_ograve","","",null,null],[17,"XK_oacute","","",null,null],[17,"XK_ocircumflex","","",null,null],[17,"XK_otilde","","",null,null],[17,"XK_odiaeresis","","",null,null],[17,"XK_division","","",null,null],[17,"XK_oslash","","",null,null],[17,"XK_ugrave","","",null,null],[17,"XK_uacute","","",null,null],[17,"XK_ucircumflex","","",null,null],[17,"XK_udiaeresis","","",null,null],[17,"XK_yacute","","",null,null],[17,"XK_thorn","","",null,null],[17,"XK_ydiaeresis","","",null,null],[17,"XK_Aogonek","","",null,null],[17,"XK_breve","","",null,null],[17,"XK_Lstroke","","",null,null],[17,"XK_Lcaron","","",null,null],[17,"XK_Sacute","","",null,null],[17,"XK_Scaron","","",null,null],[17,"XK_Scedilla","","",null,null],[17,"XK_Tcaron","","",null,null],[17,"XK_Zacute","","",null,null],[17,"XK_Zcaron","","",null,null],[17,"XK_Zabovedot","","",null,null],[17,"XK_aogonek","","",null,null],[17,"XK_ogonek","","",null,null],[17,"XK_lstroke","","",null,null],[17,"XK_lcaron","","",null,null],[17,"XK_sacute","","",null,null],[17,"XK_caron","","",null,null],[17,"XK_scaron","","",null,null],[17,"XK_scedilla","","",null,null],[17,"XK_tcaron","","",null,null],[17,"XK_zacute","","",null,null],[17,"XK_doubleacute","","",null,null],[17,"XK_zcaron","","",null,null],[17,"XK_zabovedot","","",null,null],[17,"XK_Racute","","",null,null],[17,"XK_Abreve","","",null,null],[17,"XK_Lacute","","",null,null],[17,"XK_Cacute","","",null,null],[17,"XK_Ccaron","","",null,null],[17,"XK_Eogonek","","",null,null],[17,"XK_Ecaron","","",null,null],[17,"XK_Dcaron","","",null,null],[17,"XK_Dstroke","","",null,null],[17,"XK_Nacute","","",null,null],[17,"XK_Ncaron","","",null,null],[17,"XK_Odoubleacute","","",null,null],[17,"XK_Rcaron","","",null,null],[17,"XK_Uring","","",null,null],[17,"XK_Udoubleacute","","",null,null],[17,"XK_Tcedilla","","",null,null],[17,"XK_racute","","",null,null],[17,"XK_abreve","","",null,null],[17,"XK_lacute","","",null,null],[17,"XK_cacute","","",null,null],[17,"XK_ccaron","","",null,null],[17,"XK_eogonek","","",null,null],[17,"XK_ecaron","","",null,null],[17,"XK_dcaron","","",null,null],[17,"XK_dstroke","","",null,null],[17,"XK_nacute","","",null,null],[17,"XK_ncaron","","",null,null],[17,"XK_odoubleacute","","",null,null],[17,"XK_udoubleacute","","",null,null],[17,"XK_rcaron","","",null,null],[17,"XK_uring","","",null,null],[17,"XK_tcedilla","","",null,null],[17,"XK_abovedot","","",null,null],[17,"XK_Hstroke","","",null,null],[17,"XK_Hcircumflex","","",null,null],[17,"XK_Iabovedot","","",null,null],[17,"XK_Gbreve","","",null,null],[17,"XK_Jcircumflex","","",null,null],[17,"XK_hstroke","","",null,null],[17,"XK_hcircumflex","","",null,null],[17,"XK_idotless","","",null,null],[17,"XK_gbreve","","",null,null],[17,"XK_jcircumflex","","",null,null],[17,"XK_Cabovedot","","",null,null],[17,"XK_Ccircumflex","","",null,null],[17,"XK_Gabovedot","","",null,null],[17,"XK_Gcircumflex","","",null,null],[17,"XK_Ubreve","","",null,null],[17,"XK_Scircumflex","","",null,null],[17,"XK_cabovedot","","",null,null],[17,"XK_ccircumflex","","",null,null],[17,"XK_gabovedot","","",null,null],[17,"XK_gcircumflex","","",null,null],[17,"XK_ubreve","","",null,null],[17,"XK_scircumflex","","",null,null],[17,"XK_kra","","",null,null],[17,"XK_kappa","","",null,null],[17,"XK_Rcedilla","","",null,null],[17,"XK_Itilde","","",null,null],[17,"XK_Lcedilla","","",null,null],[17,"XK_Emacron","","",null,null],[17,"XK_Gcedilla","","",null,null],[17,"XK_Tslash","","",null,null],[17,"XK_rcedilla","","",null,null],[17,"XK_itilde","","",null,null],[17,"XK_lcedilla","","",null,null],[17,"XK_emacron","","",null,null],[17,"XK_gcedilla","","",null,null],[17,"XK_tslash","","",null,null],[17,"XK_ENG","","",null,null],[17,"XK_eng","","",null,null],[17,"XK_Amacron","","",null,null],[17,"XK_Iogonek","","",null,null],[17,"XK_Eabovedot","","",null,null],[17,"XK_Imacron","","",null,null],[17,"XK_Ncedilla","","",null,null],[17,"XK_Omacron","","",null,null],[17,"XK_Kcedilla","","",null,null],[17,"XK_Uogonek","","",null,null],[17,"XK_Utilde","","",null,null],[17,"XK_Umacron","","",null,null],[17,"XK_amacron","","",null,null],[17,"XK_iogonek","","",null,null],[17,"XK_eabovedot","","",null,null],[17,"XK_imacron","","",null,null],[17,"XK_ncedilla","","",null,null],[17,"XK_omacron","","",null,null],[17,"XK_kcedilla","","",null,null],[17,"XK_uogonek","","",null,null],[17,"XK_utilde","","",null,null],[17,"XK_umacron","","",null,null],[17,"XK_overline","","",null,null],[17,"XK_kana_fullstop","","",null,null],[17,"XK_kana_openingbracket","","",null,null],[17,"XK_kana_closingbracket","","",null,null],[17,"XK_kana_comma","","",null,null],[17,"XK_kana_conjunctive","","",null,null],[17,"XK_kana_middledot","","",null,null],[17,"XK_kana_WO","","",null,null],[17,"XK_kana_a","","",null,null],[17,"XK_kana_i","","",null,null],[17,"XK_kana_u","","",null,null],[17,"XK_kana_e","","",null,null],[17,"XK_kana_o","","",null,null],[17,"XK_kana_ya","","",null,null],[17,"XK_kana_yu","","",null,null],[17,"XK_kana_yo","","",null,null],[17,"XK_kana_tsu","","",null,null],[17,"XK_kana_tu","","",null,null],[17,"XK_prolongedsound","","",null,null],[17,"XK_kana_A","","",null,null],[17,"XK_kana_I","","",null,null],[17,"XK_kana_U","","",null,null],[17,"XK_kana_E","","",null,null],[17,"XK_kana_O","","",null,null],[17,"XK_kana_KA","","",null,null],[17,"XK_kana_KI","","",null,null],[17,"XK_kana_KU","","",null,null],[17,"XK_kana_KE","","",null,null],[17,"XK_kana_KO","","",null,null],[17,"XK_kana_SA","","",null,null],[17,"XK_kana_SHI","","",null,null],[17,"XK_kana_SU","","",null,null],[17,"XK_kana_SE","","",null,null],[17,"XK_kana_SO","","",null,null],[17,"XK_kana_TA","","",null,null],[17,"XK_kana_CHI","","",null,null],[17,"XK_kana_TI","","",null,null],[17,"XK_kana_TSU","","",null,null],[17,"XK_kana_TU","","",null,null],[17,"XK_kana_TE","","",null,null],[17,"XK_kana_TO","","",null,null],[17,"XK_kana_NA","","",null,null],[17,"XK_kana_NI","","",null,null],[17,"XK_kana_NU","","",null,null],[17,"XK_kana_NE","","",null,null],[17,"XK_kana_NO","","",null,null],[17,"XK_kana_HA","","",null,null],[17,"XK_kana_HI","","",null,null],[17,"XK_kana_FU","","",null,null],[17,"XK_kana_HU","","",null,null],[17,"XK_kana_HE","","",null,null],[17,"XK_kana_HO","","",null,null],[17,"XK_kana_MA","","",null,null],[17,"XK_kana_MI","","",null,null],[17,"XK_kana_MU","","",null,null],[17,"XK_kana_ME","","",null,null],[17,"XK_kana_MO","","",null,null],[17,"XK_kana_YA","","",null,null],[17,"XK_kana_YU","","",null,null],[17,"XK_kana_YO","","",null,null],[17,"XK_kana_RA","","",null,null],[17,"XK_kana_RI","","",null,null],[17,"XK_kana_RU","","",null,null],[17,"XK_kana_RE","","",null,null],[17,"XK_kana_RO","","",null,null],[17,"XK_kana_WA","","",null,null],[17,"XK_kana_N","","",null,null],[17,"XK_voicedsound","","",null,null],[17,"XK_semivoicedsound","","",null,null],[17,"XK_kana_switch","","",null,null],[17,"XK_Arabic_comma","","",null,null],[17,"XK_Arabic_semicolon","","",null,null],[17,"XK_Arabic_question_mark","","",null,null],[17,"XK_Arabic_hamza","","",null,null],[17,"XK_Arabic_maddaonalef","","",null,null],[17,"XK_Arabic_hamzaonalef","","",null,null],[17,"XK_Arabic_hamzaonwaw","","",null,null],[17,"XK_Arabic_hamzaunderalef","","",null,null],[17,"XK_Arabic_hamzaonyeh","","",null,null],[17,"XK_Arabic_alef","","",null,null],[17,"XK_Arabic_beh","","",null,null],[17,"XK_Arabic_tehmarbuta","","",null,null],[17,"XK_Arabic_teh","","",null,null],[17,"XK_Arabic_theh","","",null,null],[17,"XK_Arabic_jeem","","",null,null],[17,"XK_Arabic_hah","","",null,null],[17,"XK_Arabic_khah","","",null,null],[17,"XK_Arabic_dal","","",null,null],[17,"XK_Arabic_thal","","",null,null],[17,"XK_Arabic_ra","","",null,null],[17,"XK_Arabic_zain","","",null,null],[17,"XK_Arabic_seen","","",null,null],[17,"XK_Arabic_sheen","","",null,null],[17,"XK_Arabic_sad","","",null,null],[17,"XK_Arabic_dad","","",null,null],[17,"XK_Arabic_tah","","",null,null],[17,"XK_Arabic_zah","","",null,null],[17,"XK_Arabic_ain","","",null,null],[17,"XK_Arabic_ghain","","",null,null],[17,"XK_Arabic_tatweel","","",null,null],[17,"XK_Arabic_feh","","",null,null],[17,"XK_Arabic_qaf","","",null,null],[17,"XK_Arabic_kaf","","",null,null],[17,"XK_Arabic_lam","","",null,null],[17,"XK_Arabic_meem","","",null,null],[17,"XK_Arabic_noon","","",null,null],[17,"XK_Arabic_ha","","",null,null],[17,"XK_Arabic_heh","","",null,null],[17,"XK_Arabic_waw","","",null,null],[17,"XK_Arabic_alefmaksura","","",null,null],[17,"XK_Arabic_yeh","","",null,null],[17,"XK_Arabic_fathatan","","",null,null],[17,"XK_Arabic_dammatan","","",null,null],[17,"XK_Arabic_kasratan","","",null,null],[17,"XK_Arabic_fatha","","",null,null],[17,"XK_Arabic_damma","","",null,null],[17,"XK_Arabic_kasra","","",null,null],[17,"XK_Arabic_shadda","","",null,null],[17,"XK_Arabic_sukun","","",null,null],[17,"XK_Arabic_switch","","",null,null],[17,"XK_Serbian_dje","","",null,null],[17,"XK_Macedonia_gje","","",null,null],[17,"XK_Cyrillic_io","","",null,null],[17,"XK_Ukrainian_ie","","",null,null],[17,"XK_Ukranian_je","","",null,null],[17,"XK_Macedonia_dse","","",null,null],[17,"XK_Ukrainian_i","","",null,null],[17,"XK_Ukranian_i","","",null,null],[17,"XK_Ukrainian_yi","","",null,null],[17,"XK_Ukranian_yi","","",null,null],[17,"XK_Cyrillic_je","","",null,null],[17,"XK_Serbian_je","","",null,null],[17,"XK_Cyrillic_lje","","",null,null],[17,"XK_Serbian_lje","","",null,null],[17,"XK_Cyrillic_nje","","",null,null],[17,"XK_Serbian_nje","","",null,null],[17,"XK_Serbian_tshe","","",null,null],[17,"XK_Macedonia_kje","","",null,null],[17,"XK_Byelorussian_shortu","","",null,null],[17,"XK_Cyrillic_dzhe","","",null,null],[17,"XK_Serbian_dze","","",null,null],[17,"XK_numerosign","","",null,null],[17,"XK_Serbian_DJE","","",null,null],[17,"XK_Macedonia_GJE","","",null,null],[17,"XK_Cyrillic_IO","","",null,null],[17,"XK_Ukrainian_IE","","",null,null],[17,"XK_Ukranian_JE","","",null,null],[17,"XK_Macedonia_DSE","","",null,null],[17,"XK_Ukrainian_I","","",null,null],[17,"XK_Ukranian_I","","",null,null],[17,"XK_Ukrainian_YI","","",null,null],[17,"XK_Ukranian_YI","","",null,null],[17,"XK_Cyrillic_JE","","",null,null],[17,"XK_Serbian_JE","","",null,null],[17,"XK_Cyrillic_LJE","","",null,null],[17,"XK_Serbian_LJE","","",null,null],[17,"XK_Cyrillic_NJE","","",null,null],[17,"XK_Serbian_NJE","","",null,null],[17,"XK_Serbian_TSHE","","",null,null],[17,"XK_Macedonia_KJE","","",null,null],[17,"XK_Byelorussian_SHORTU","","",null,null],[17,"XK_Cyrillic_DZHE","","",null,null],[17,"XK_Serbian_DZE","","",null,null],[17,"XK_Cyrillic_yu","","",null,null],[17,"XK_Cyrillic_a","","",null,null],[17,"XK_Cyrillic_be","","",null,null],[17,"XK_Cyrillic_tse","","",null,null],[17,"XK_Cyrillic_de","","",null,null],[17,"XK_Cyrillic_ie","","",null,null],[17,"XK_Cyrillic_ef","","",null,null],[17,"XK_Cyrillic_ghe","","",null,null],[17,"XK_Cyrillic_ha","","",null,null],[17,"XK_Cyrillic_i","","",null,null],[17,"XK_Cyrillic_shorti","","",null,null],[17,"XK_Cyrillic_ka","","",null,null],[17,"XK_Cyrillic_el","","",null,null],[17,"XK_Cyrillic_em","","",null,null],[17,"XK_Cyrillic_en","","",null,null],[17,"XK_Cyrillic_o","","",null,null],[17,"XK_Cyrillic_pe","","",null,null],[17,"XK_Cyrillic_ya","","",null,null],[17,"XK_Cyrillic_er","","",null,null],[17,"XK_Cyrillic_es","","",null,null],[17,"XK_Cyrillic_te","","",null,null],[17,"XK_Cyrillic_u","","",null,null],[17,"XK_Cyrillic_zhe","","",null,null],[17,"XK_Cyrillic_ve","","",null,null],[17,"XK_Cyrillic_softsign","","",null,null],[17,"XK_Cyrillic_yeru","","",null,null],[17,"XK_Cyrillic_ze","","",null,null],[17,"XK_Cyrillic_sha","","",null,null],[17,"XK_Cyrillic_e","","",null,null],[17,"XK_Cyrillic_shcha","","",null,null],[17,"XK_Cyrillic_che","","",null,null],[17,"XK_Cyrillic_hardsign","","",null,null],[17,"XK_Cyrillic_YU","","",null,null],[17,"XK_Cyrillic_A","","",null,null],[17,"XK_Cyrillic_BE","","",null,null],[17,"XK_Cyrillic_TSE","","",null,null],[17,"XK_Cyrillic_DE","","",null,null],[17,"XK_Cyrillic_IE","","",null,null],[17,"XK_Cyrillic_EF","","",null,null],[17,"XK_Cyrillic_GHE","","",null,null],[17,"XK_Cyrillic_HA","","",null,null],[17,"XK_Cyrillic_I","","",null,null],[17,"XK_Cyrillic_SHORTI","","",null,null],[17,"XK_Cyrillic_KA","","",null,null],[17,"XK_Cyrillic_EL","","",null,null],[17,"XK_Cyrillic_EM","","",null,null],[17,"XK_Cyrillic_EN","","",null,null],[17,"XK_Cyrillic_O","","",null,null],[17,"XK_Cyrillic_PE","","",null,null],[17,"XK_Cyrillic_YA","","",null,null],[17,"XK_Cyrillic_ER","","",null,null],[17,"XK_Cyrillic_ES","","",null,null],[17,"XK_Cyrillic_TE","","",null,null],[17,"XK_Cyrillic_U","","",null,null],[17,"XK_Cyrillic_ZHE","","",null,null],[17,"XK_Cyrillic_VE","","",null,null],[17,"XK_Cyrillic_SOFTSIGN","","",null,null],[17,"XK_Cyrillic_YERU","","",null,null],[17,"XK_Cyrillic_ZE","","",null,null],[17,"XK_Cyrillic_SHA","","",null,null],[17,"XK_Cyrillic_E","","",null,null],[17,"XK_Cyrillic_SHCHA","","",null,null],[17,"XK_Cyrillic_CHE","","",null,null],[17,"XK_Cyrillic_HARDSIGN","","",null,null],[17,"XK_Greek_ALPHAaccent","","",null,null],[17,"XK_Greek_EPSILONaccent","","",null,null],[17,"XK_Greek_ETAaccent","","",null,null],[17,"XK_Greek_IOTAaccent","","",null,null],[17,"XK_Greek_IOTAdiaeresis","","",null,null],[17,"XK_Greek_OMICRONaccent","","",null,null],[17,"XK_Greek_UPSILONaccent","","",null,null],[17,"XK_Greek_UPSILONdieresis","","",null,null],[17,"XK_Greek_OMEGAaccent","","",null,null],[17,"XK_Greek_accentdieresis","","",null,null],[17,"XK_Greek_horizbar","","",null,null],[17,"XK_Greek_alphaaccent","","",null,null],[17,"XK_Greek_epsilonaccent","","",null,null],[17,"XK_Greek_etaaccent","","",null,null],[17,"XK_Greek_iotaaccent","","",null,null],[17,"XK_Greek_iotadieresis","","",null,null],[17,"XK_Greek_iotaaccentdieresis","","",null,null],[17,"XK_Greek_omicronaccent","","",null,null],[17,"XK_Greek_upsilonaccent","","",null,null],[17,"XK_Greek_upsilondieresis","","",null,null],[17,"XK_Greek_upsilonaccentdieresis","","",null,null],[17,"XK_Greek_omegaaccent","","",null,null],[17,"XK_Greek_ALPHA","","",null,null],[17,"XK_Greek_BETA","","",null,null],[17,"XK_Greek_GAMMA","","",null,null],[17,"XK_Greek_DELTA","","",null,null],[17,"XK_Greek_EPSILON","","",null,null],[17,"XK_Greek_ZETA","","",null,null],[17,"XK_Greek_ETA","","",null,null],[17,"XK_Greek_THETA","","",null,null],[17,"XK_Greek_IOTA","","",null,null],[17,"XK_Greek_KAPPA","","",null,null],[17,"XK_Greek_LAMDA","","",null,null],[17,"XK_Greek_LAMBDA","","",null,null],[17,"XK_Greek_MU","","",null,null],[17,"XK_Greek_NU","","",null,null],[17,"XK_Greek_XI","","",null,null],[17,"XK_Greek_OMICRON","","",null,null],[17,"XK_Greek_PI","","",null,null],[17,"XK_Greek_RHO","","",null,null],[17,"XK_Greek_SIGMA","","",null,null],[17,"XK_Greek_TAU","","",null,null],[17,"XK_Greek_UPSILON","","",null,null],[17,"XK_Greek_PHI","","",null,null],[17,"XK_Greek_CHI","","",null,null],[17,"XK_Greek_PSI","","",null,null],[17,"XK_Greek_OMEGA","","",null,null],[17,"XK_Greek_alpha","","",null,null],[17,"XK_Greek_beta","","",null,null],[17,"XK_Greek_gamma","","",null,null],[17,"XK_Greek_delta","","",null,null],[17,"XK_Greek_epsilon","","",null,null],[17,"XK_Greek_zeta","","",null,null],[17,"XK_Greek_eta","","",null,null],[17,"XK_Greek_theta","","",null,null],[17,"XK_Greek_iota","","",null,null],[17,"XK_Greek_kappa","","",null,null],[17,"XK_Greek_lamda","","",null,null],[17,"XK_Greek_lambda","","",null,null],[17,"XK_Greek_mu","","",null,null],[17,"XK_Greek_nu","","",null,null],[17,"XK_Greek_xi","","",null,null],[17,"XK_Greek_omicron","","",null,null],[17,"XK_Greek_pi","","",null,null],[17,"XK_Greek_rho","","",null,null],[17,"XK_Greek_sigma","","",null,null],[17,"XK_Greek_finalsmallsigma","","",null,null],[17,"XK_Greek_tau","","",null,null],[17,"XK_Greek_upsilon","","",null,null],[17,"XK_Greek_phi","","",null,null],[17,"XK_Greek_chi","","",null,null],[17,"XK_Greek_psi","","",null,null],[17,"XK_Greek_omega","","",null,null],[17,"XK_Greek_switch","","",null,null],[17,"XK_leftradical","","",null,null],[17,"XK_topleftradical","","",null,null],[17,"XK_horizconnector","","",null,null],[17,"XK_topintegral","","",null,null],[17,"XK_botintegral","","",null,null],[17,"XK_vertconnector","","",null,null],[17,"XK_topleftsqbracket","","",null,null],[17,"XK_botleftsqbracket","","",null,null],[17,"XK_toprightsqbracket","","",null,null],[17,"XK_botrightsqbracket","","",null,null],[17,"XK_topleftparens","","",null,null],[17,"XK_botleftparens","","",null,null],[17,"XK_toprightparens","","",null,null],[17,"XK_botrightparens","","",null,null],[17,"XK_leftmiddlecurlybrace","","",null,null],[17,"XK_rightmiddlecurlybrace","","",null,null],[17,"XK_topleftsummation","","",null,null],[17,"XK_botleftsummation","","",null,null],[17,"XK_topvertsummationconnector","","",null,null],[17,"XK_botvertsummationconnector","","",null,null],[17,"XK_toprightsummation","","",null,null],[17,"XK_botrightsummation","","",null,null],[17,"XK_rightmiddlesummation","","",null,null],[17,"XK_lessthanequal","","",null,null],[17,"XK_notequal","","",null,null],[17,"XK_greaterthanequal","","",null,null],[17,"XK_integral","","",null,null],[17,"XK_therefore","","",null,null],[17,"XK_variation","","",null,null],[17,"XK_infinity","","",null,null],[17,"XK_nabla","","",null,null],[17,"XK_approximate","","",null,null],[17,"XK_similarequal","","",null,null],[17,"XK_ifonlyif","","",null,null],[17,"XK_implies","","",null,null],[17,"XK_identical","","",null,null],[17,"XK_radical","","",null,null],[17,"XK_includedin","","",null,null],[17,"XK_includes","","",null,null],[17,"XK_intersection","","",null,null],[17,"XK_union","","",null,null],[17,"XK_logicaland","","",null,null],[17,"XK_logicalor","","",null,null],[17,"XK_partialderivative","","",null,null],[17,"XK_function","","",null,null],[17,"XK_leftarrow","","",null,null],[17,"XK_uparrow","","",null,null],[17,"XK_rightarrow","","",null,null],[17,"XK_downarrow","","",null,null],[17,"XK_blank","","",null,null],[17,"XK_soliddiamond","","",null,null],[17,"XK_checkerboard","","",null,null],[17,"XK_ht","","",null,null],[17,"XK_ff","","",null,null],[17,"XK_cr","","",null,null],[17,"XK_lf","","",null,null],[17,"XK_nl","","",null,null],[17,"XK_vt","","",null,null],[17,"XK_lowrightcorner","","",null,null],[17,"XK_uprightcorner","","",null,null],[17,"XK_upleftcorner","","",null,null],[17,"XK_lowleftcorner","","",null,null],[17,"XK_crossinglines","","",null,null],[17,"XK_horizlinescan1","","",null,null],[17,"XK_horizlinescan3","","",null,null],[17,"XK_horizlinescan5","","",null,null],[17,"XK_horizlinescan7","","",null,null],[17,"XK_horizlinescan9","","",null,null],[17,"XK_leftt","","",null,null],[17,"XK_rightt","","",null,null],[17,"XK_bott","","",null,null],[17,"XK_topt","","",null,null],[17,"XK_vertbar","","",null,null],[17,"XK_emspace","","",null,null],[17,"XK_enspace","","",null,null],[17,"XK_em3space","","",null,null],[17,"XK_em4space","","",null,null],[17,"XK_digitspace","","",null,null],[17,"XK_punctspace","","",null,null],[17,"XK_thinspace","","",null,null],[17,"XK_hairspace","","",null,null],[17,"XK_emdash","","",null,null],[17,"XK_endash","","",null,null],[17,"XK_signifblank","","",null,null],[17,"XK_ellipsis","","",null,null],[17,"XK_doubbaselinedot","","",null,null],[17,"XK_onethird","","",null,null],[17,"XK_twothirds","","",null,null],[17,"XK_onefifth","","",null,null],[17,"XK_twofifths","","",null,null],[17,"XK_threefifths","","",null,null],[17,"XK_fourfifths","","",null,null],[17,"XK_onesixth","","",null,null],[17,"XK_fivesixths","","",null,null],[17,"XK_careof","","",null,null],[17,"XK_figdash","","",null,null],[17,"XK_leftanglebracket","","",null,null],[17,"XK_decimalpoint","","",null,null],[17,"XK_rightanglebracket","","",null,null],[17,"XK_marker","","",null,null],[17,"XK_oneeighth","","",null,null],[17,"XK_threeeighths","","",null,null],[17,"XK_fiveeighths","","",null,null],[17,"XK_seveneighths","","",null,null],[17,"XK_trademark","","",null,null],[17,"XK_signaturemark","","",null,null],[17,"XK_trademarkincircle","","",null,null],[17,"XK_leftopentriangle","","",null,null],[17,"XK_rightopentriangle","","",null,null],[17,"XK_emopencircle","","",null,null],[17,"XK_emopenrectangle","","",null,null],[17,"XK_leftsinglequotemark","","",null,null],[17,"XK_rightsinglequotemark","","",null,null],[17,"XK_leftdoublequotemark","","",null,null],[17,"XK_rightdoublequotemark","","",null,null],[17,"XK_prescription","","",null,null],[17,"XK_minutes","","",null,null],[17,"XK_seconds","","",null,null],[17,"XK_latincross","","",null,null],[17,"XK_hexagram","","",null,null],[17,"XK_filledrectbullet","","",null,null],[17,"XK_filledlefttribullet","","",null,null],[17,"XK_filledrighttribullet","","",null,null],[17,"XK_emfilledcircle","","",null,null],[17,"XK_emfilledrect","","",null,null],[17,"XK_enopencircbullet","","",null,null],[17,"XK_enopensquarebullet","","",null,null],[17,"XK_openrectbullet","","",null,null],[17,"XK_opentribulletup","","",null,null],[17,"XK_opentribulletdown","","",null,null],[17,"XK_openstar","","",null,null],[17,"XK_enfilledcircbullet","","",null,null],[17,"XK_enfilledsqbullet","","",null,null],[17,"XK_filledtribulletup","","",null,null],[17,"XK_filledtribulletdown","","",null,null],[17,"XK_leftpointer","","",null,null],[17,"XK_rightpointer","","",null,null],[17,"XK_club","","",null,null],[17,"XK_diamond","","",null,null],[17,"XK_heart","","",null,null],[17,"XK_maltesecross","","",null,null],[17,"XK_dagger","","",null,null],[17,"XK_doubledagger","","",null,null],[17,"XK_checkmark","","",null,null],[17,"XK_ballotcross","","",null,null],[17,"XK_musicalsharp","","",null,null],[17,"XK_musicalflat","","",null,null],[17,"XK_malesymbol","","",null,null],[17,"XK_femalesymbol","","",null,null],[17,"XK_telephone","","",null,null],[17,"XK_telephonerecorder","","",null,null],[17,"XK_phonographcopyright","","",null,null],[17,"XK_caret","","",null,null],[17,"XK_singlelowquotemark","","",null,null],[17,"XK_doublelowquotemark","","",null,null],[17,"XK_cursor","","",null,null],[17,"XK_leftcaret","","",null,null],[17,"XK_rightcaret","","",null,null],[17,"XK_downcaret","","",null,null],[17,"XK_upcaret","","",null,null],[17,"XK_overbar","","",null,null],[17,"XK_downtack","","",null,null],[17,"XK_upshoe","","",null,null],[17,"XK_downstile","","",null,null],[17,"XK_underbar","","",null,null],[17,"XK_jot","","",null,null],[17,"XK_quad","","",null,null],[17,"XK_uptack","","",null,null],[17,"XK_circle","","",null,null],[17,"XK_upstile","","",null,null],[17,"XK_downshoe","","",null,null],[17,"XK_rightshoe","","",null,null],[17,"XK_leftshoe","","",null,null],[17,"XK_lefttack","","",null,null],[17,"XK_righttack","","",null,null],[17,"XK_hebrew_doublelowline","","",null,null],[17,"XK_hebrew_aleph","","",null,null],[17,"XK_hebrew_bet","","",null,null],[17,"XK_hebrew_beth","","",null,null],[17,"XK_hebrew_gimel","","",null,null],[17,"XK_hebrew_gimmel","","",null,null],[17,"XK_hebrew_dalet","","",null,null],[17,"XK_hebrew_daleth","","",null,null],[17,"XK_hebrew_he","","",null,null],[17,"XK_hebrew_waw","","",null,null],[17,"XK_hebrew_zain","","",null,null],[17,"XK_hebrew_zayin","","",null,null],[17,"XK_hebrew_chet","","",null,null],[17,"XK_hebrew_het","","",null,null],[17,"XK_hebrew_tet","","",null,null],[17,"XK_hebrew_teth","","",null,null],[17,"XK_hebrew_yod","","",null,null],[17,"XK_hebrew_finalkaph","","",null,null],[17,"XK_hebrew_kaph","","",null,null],[17,"XK_hebrew_lamed","","",null,null],[17,"XK_hebrew_finalmem","","",null,null],[17,"XK_hebrew_mem","","",null,null],[17,"XK_hebrew_finalnun","","",null,null],[17,"XK_hebrew_nun","","",null,null],[17,"XK_hebrew_samech","","",null,null],[17,"XK_hebrew_samekh","","",null,null],[17,"XK_hebrew_ayin","","",null,null],[17,"XK_hebrew_finalpe","","",null,null],[17,"XK_hebrew_pe","","",null,null],[17,"XK_hebrew_finalzade","","",null,null],[17,"XK_hebrew_finalzadi","","",null,null],[17,"XK_hebrew_zade","","",null,null],[17,"XK_hebrew_zadi","","",null,null],[17,"XK_hebrew_qoph","","",null,null],[17,"XK_hebrew_kuf","","",null,null],[17,"XK_hebrew_resh","","",null,null],[17,"XK_hebrew_shin","","",null,null],[17,"XK_hebrew_taw","","",null,null],[17,"XK_hebrew_taf","","",null,null],[17,"XK_Hebrew_switch","","",null,null],[0,"xcursor","x11_dl","",null,null],[3,"Xcursor","x11_dl::xcursor","",null,null],[12,"XcursorAnimateCreate","","",3,null],[12,"XcursorAnimateDestroy","","",3,null],[12,"XcursorAnimateNext","","",3,null],[12,"XcursorCommentCreate","","",3,null],[12,"XcursorCommentDestroy","","",3,null],[12,"XcursorCommentsCreate","","",3,null],[12,"XcursorCommentsDestroy","","",3,null],[12,"XcursorCursorsCreate","","",3,null],[12,"XcursorCursorsDestroy","","",3,null],[12,"XcursorFileLoad","","",3,null],[12,"XcursorFileLoadAllImages","","",3,null],[12,"XcursorFileLoadImage","","",3,null],[12,"XcursorFileLoadImages","","",3,null],[12,"XcursorFilenameLoad","","",3,null],[12,"XcursorFilenameLoadAllImages","","",3,null],[12,"XcursorFilenameLoadCursor","","",3,null],[12,"XcursorFilenameLoadCursors","","",3,null],[12,"XcursorFilenameLoadImage","","",3,null],[12,"XcursorFilenameLoadImages","","",3,null],[12,"XcursorFilenameSave","","",3,null],[12,"XcursorFilenameSaveImages","","",3,null],[12,"XcursorFileSave","","",3,null],[12,"XcursorFileSaveImages","","",3,null],[12,"XcursorGetDefaultSize","","",3,null],[12,"XcursorGetTheme","","",3,null],[12,"XcursorGetThemeCore","","",3,null],[12,"XcursorImageCreate","","",3,null],[12,"XcursorImageDestroy","","",3,null],[12,"XcursorImageHash","","",3,null],[12,"XcursorImageLoadCursor","","",3,null],[12,"XcursorImagesCreate","","",3,null],[12,"XcursorImagesDestroy","","",3,null],[12,"XcursorImagesLoadCursor","","",3,null],[12,"XcursorImagesLoadCursors","","",3,null],[12,"XcursorImagesSetName","","",3,null],[12,"XcursorLibraryLoadCursor","","",3,null],[12,"XcursorLibraryLoadCursors","","",3,null],[12,"XcursorLibraryLoadImage","","",3,null],[12,"XcursorLibraryLoadImages","","",3,null],[12,"XcursorLibraryPath","","",3,null],[12,"XcursorLibraryShape","","",3,null],[12,"XcursorNoticeCreateBitmap","","",3,null],[12,"XcursorNoticePutBitmap","","",3,null],[12,"XcursorSetDefaultSize","","",3,null],[12,"XcursorSetTheme","","",3,null],[12,"XcursorSetThemeCore","","",3,null],[12,"XcursorShapeLoadCursor","","",3,null],[12,"XcursorShapeLoadCursors","","",3,null],[12,"XcursorShapeLoadImage","","",3,null],[12,"XcursorShapeLoadImages","","",3,null],[12,"XcursorSupportsAnim","","",3,null],[12,"XcursorSupportsARGB","","",3,null],[12,"XcursorTryShapeBitmapCursor","","",3,null],[12,"XcursorTryShapeCursor","","",3,null],[12,"XcursorXcFileLoad","","",3,null],[12,"XcursorXcFileLoadAllImages","","",3,null],[12,"XcursorXcFileLoadImage","","",3,null],[12,"XcursorXcFileLoadImages","","",3,null],[12,"XcursorXcFileSave","","",3,null],[3,"_XcursorAnimate","","",null,null],[12,"cursors","","",4,null],[12,"sequence","","",4,null],[3,"_XcursorChunkHeader","","",null,null],[12,"header","","",5,null],[12,"type_","","",5,null],[12,"subtype","","",5,null],[12,"version","","",5,null],[3,"_XcursorComment","","",null,null],[12,"version","","",6,null],[12,"comment_type","","",6,null],[12,"comment","","",6,null],[3,"_XcursorComments","","",null,null],[12,"ncomment","","",7,null],[12,"comments","","",7,null],[3,"_XcursorCursors","","",null,null],[12,"dpy","","",8,null],[12,"ref_","","",8,null],[12,"ncursor","","",8,null],[12,"cursors","","",8,null],[3,"_XcursorFile","","",null,null],[12,"closure","","",9,null],[12,"read","","",9,null],[12,"write","","",9,null],[12,"seek","","",9,null],[3,"_XcursorFileHeader","","",null,null],[12,"magic","","",10,null],[12,"header","","",10,null],[12,"version","","",10,null],[12,"ntoc","","",10,null],[12,"tocs","","",10,null],[3,"_XcursorFileToc","","",null,null],[12,"type_","","",11,null],[12,"subtype","","",11,null],[12,"position","","",11,null],[3,"_XcursorImage","","",null,null],[12,"version","","",12,null],[12,"size","","",12,null],[12,"width","","",12,null],[12,"height","","",12,null],[12,"xhot","","",12,null],[12,"yhot","","",12,null],[12,"delay","","",12,null],[12,"pixels","","",12,null],[3,"_XcursorImages","","",null,null],[12,"nimage","","",13,null],[12,"images","","",13,null],[12,"name","","",13,null],[6,"XcursorBool","","",null,null],[6,"XcursorDim","","",null,null],[6,"XcursorPixel","","",null,null],[6,"XcursorUInt","","",null,null],[6,"XcursorAnimate","","",null,null],[6,"XcursorChunkHeader","","",null,null],[6,"XcursorComment","","",null,null],[6,"XcursorComments","","",null,null],[6,"XcursorCursors","","",null,null],[6,"XcursorFile","","",null,null],[6,"XcursorFileHeader","","",null,null],[6,"XcursorFileToc","","",null,null],[6,"XcursorImage","","",null,null],[6,"XcursorImages","","",null,null],[11,"open","","",3,{"inputs":[{"name":"xcursor"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"_xcursoranimate"}],"output":{"name":"_xcursoranimate"}}],[11,"clone","","",5,{"inputs":[{"name":"_xcursorchunkheader"}],"output":{"name":"_xcursorchunkheader"}}],[11,"clone","","",6,{"inputs":[{"name":"_xcursorcomment"}],"output":{"name":"_xcursorcomment"}}],[11,"clone","","",7,{"inputs":[{"name":"_xcursorcomments"}],"output":{"name":"_xcursorcomments"}}],[11,"clone","","",8,{"inputs":[{"name":"_xcursorcursors"}],"output":{"name":"_xcursorcursors"}}],[11,"clone","","",9,{"inputs":[{"name":"_xcursorfile"}],"output":{"name":"_xcursorfile"}}],[11,"clone","","",10,{"inputs":[{"name":"_xcursorfileheader"}],"output":{"name":"_xcursorfileheader"}}],[11,"clone","","",11,{"inputs":[{"name":"_xcursorfiletoc"}],"output":{"name":"_xcursorfiletoc"}}],[11,"clone","","",12,{"inputs":[{"name":"_xcursorimage"}],"output":{"name":"_xcursorimage"}}],[11,"clone","","",13,{"inputs":[{"name":"_xcursorimages"}],"output":{"name":"_xcursorimages"}}],[0,"xf86vmode","x11_dl","",null,null],[3,"Xf86vmode","x11_dl::xf86vmode","",null,null],[12,"XF86VidModeAddModeLine","","",14,null],[12,"XF86VidModeDeleteModeLine","","",14,null],[12,"XF86VidModeGetAllModeLines","","",14,null],[12,"XF86VidModeGetDotClocks","","",14,null],[12,"XF86VidModeGetGamma","","",14,null],[12,"XF86VidModeGetGammaRamp","","",14,null],[12,"XF86VidModeGetGammaRampSize","","",14,null],[12,"XF86VidModeGetModeLine","","",14,null],[12,"XF86VidModeGetMonitor","","",14,null],[12,"XF86VidModeGetPermissions","","",14,null],[12,"XF86VidModeGetViewPort","","",14,null],[12,"XF86VidModeLockModeSwitch","","",14,null],[12,"XF86VidModeModModeLine","","",14,null],[12,"XF86VidModeQueryExtension","","",14,null],[12,"XF86VidModeQueryVersion","","",14,null],[12,"XF86VidModeSetClientVersion","","",14,null],[12,"XF86VidModeSetGamma","","",14,null],[12,"XF86VidModeSetGammaRamp","","",14,null],[12,"XF86VidModeSetViewPort","","",14,null],[12,"XF86VidModeSwitchMode","","",14,null],[12,"XF86VidModeSwitchToMode","","",14,null],[12,"XF86VidModeValidateModeLine","","",14,null],[3,"XF86VidModeGamma","","",null,null],[12,"red","","",15,null],[12,"green","","",15,null],[12,"blue","","",15,null],[3,"XF86VidModeModeInfo","","",null,null],[12,"dotclock","","",16,null],[12,"hdisplay","","",16,null],[12,"hsyncstart","","",16,null],[12,"hsyncend","","",16,null],[12,"htotal","","",16,null],[12,"vdisplay","","",16,null],[12,"vsyncstart","","",16,null],[12,"vsyncend","","",16,null],[12,"vtotal","","",16,null],[12,"flags","","",16,null],[12,"privsize","","",16,null],[12,"private","","",16,null],[3,"XF86VidModeModeLine","","",null,null],[12,"hdisplay","","",17,null],[12,"hsyncstart","","",17,null],[12,"hsyncend","","",17,null],[12,"htotal","","",17,null],[12,"hskew","","",17,null],[12,"vdisplay","","",17,null],[12,"vsyncstart","","",17,null],[12,"vsyncend","","",17,null],[12,"vtotal","","",17,null],[12,"flags","","",17,null],[12,"privsize","","",17,null],[12,"private","","",17,null],[3,"XF86VidModeMonitor","","",null,null],[12,"vendor","","",18,null],[12,"model","","",18,null],[12,"EMPTY","","",18,null],[12,"nhsync","","",18,null],[12,"hsync","","",18,null],[12,"nvsync","","",18,null],[12,"vsync","","",18,null],[3,"XF86VidModeNotifyEvent","","",null,null],[12,"type_","","",19,null],[12,"serial","","",19,null],[12,"send_event","","",19,null],[12,"display","","",19,null],[12,"root","","",19,null],[12,"state","","",19,null],[12,"kind","","",19,null],[12,"forced","","",19,null],[12,"time","","",19,null],[3,"XF86VidModeSyncRange","","",null,null],[12,"hi","","",20,null],[12,"lo","","",20,null],[11,"open","","",14,{"inputs":[{"name":"xf86vmode"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"xf86vidmodegamma"}],"output":{"name":"xf86vidmodegamma"}}],[11,"eq","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"},{"name":"xf86vidmodemodeinfo"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"xf86vidmodemodeinfo"}],"output":{"name":"xf86vidmodemodeinfo"}}],[11,"clone","","",17,{"inputs":[{"name":"xf86vidmodemodeline"}],"output":{"name":"xf86vidmodemodeline"}}],[11,"clone","","",18,{"inputs":[{"name":"xf86vidmodemonitor"}],"output":{"name":"xf86vidmodemonitor"}}],[11,"clone","","",19,{"inputs":[{"name":"xf86vidmodenotifyevent"}],"output":{"name":"xf86vidmodenotifyevent"}}],[11,"clone","","",20,{"inputs":[{"name":"xf86vidmodesyncrange"}],"output":{"name":"xf86vidmodesyncrange"}}],[0,"xlib","x11_dl","",null,null],[3,"Xlib","x11_dl::xlib","",null,null],[12,"XActivateScreenSaver","","",21,null],[12,"XAddConnectionWatch","","",21,null],[12,"XAddExtension","","",21,null],[12,"XAddHost","","",21,null],[12,"XAddHosts","","",21,null],[12,"XAddPixel","","",21,null],[12,"XAddToExtensionList","","",21,null],[12,"XAddToSaveSet","","",21,null],[12,"XAllocClassHint","","",21,null],[12,"XAllocColor","","",21,null],[12,"XAllocColorCells","","",21,null],[12,"XAllocColorPlanes","","",21,null],[12,"XAllocIconSize","","",21,null],[12,"XAllocNamedColor","","",21,null],[12,"XAllocSizeHints","","",21,null],[12,"XAllocStandardColormap","","",21,null],[12,"XAllocWMHints","","",21,null],[12,"XAllowEvents","","",21,null],[12,"XAllPlanes","","",21,null],[12,"XAutoRepeatOff","","",21,null],[12,"XAutoRepeatOn","","",21,null],[12,"XBaseFontNameListOfFontSet","","",21,null],[12,"XBell","","",21,null],[12,"XBitmapBitOrder","","",21,null],[12,"XBitmapPad","","",21,null],[12,"XBitmapUnit","","",21,null],[12,"XBlackPixel","","",21,null],[12,"XBlackPixelOfScreen","","",21,null],[12,"XCellsOfScreen","","",21,null],[12,"XChangeActivePointerGrab","","",21,null],[12,"XChangeGC","","",21,null],[12,"XChangeKeyboardControl","","",21,null],[12,"XChangeKeyboardMapping","","",21,null],[12,"XChangePointerControl","","",21,null],[12,"XChangeProperty","","",21,null],[12,"XChangeSaveSet","","",21,null],[12,"XChangeWindowAttributes","","",21,null],[12,"XCheckIfEvent","","",21,null],[12,"XCheckMaskEvent","","",21,null],[12,"XCheckTypedEvent","","",21,null],[12,"XCheckTypedWindowEvent","","",21,null],[12,"XCheckWindowEvent","","",21,null],[12,"XCirculateSubwindows","","",21,null],[12,"XCirculateSubwindowsDown","","",21,null],[12,"XCirculateSubwindowsUp","","",21,null],[12,"XClearArea","","",21,null],[12,"XClearWindow","","",21,null],[12,"XClipBox","","",21,null],[12,"XCloseDisplay","","",21,null],[12,"XCloseIM","","",21,null],[12,"XCloseOM","","",21,null],[12,"XcmsAddColorSpace","","",21,null],[12,"XcmsAddFunctionSet","","",21,null],[12,"XcmsAllocColor","","",21,null],[12,"XcmsAllocNamedColor","","",21,null],[12,"XcmsCCCOfColormap","","",21,null],[12,"XcmsCIELabClipab","","",21,null],[12,"XcmsCIELabClipL","","",21,null],[12,"XcmsCIELabClipLab","","",21,null],[12,"XcmsCIELabQueryMaxC","","",21,null],[12,"XcmsCIELabQueryMaxL","","",21,null],[12,"XcmsCIELabQueryMaxLC","","",21,null],[12,"XcmsCIELabQueryMinL","","",21,null],[12,"XcmsCIELabToCIEXYZ","","",21,null],[12,"XcmsCIELabWhiteShiftColors","","",21,null],[12,"XcmsCIELuvClipL","","",21,null],[12,"XcmsCIELuvClipLuv","","",21,null],[12,"XcmsCIELuvClipuv","","",21,null],[12,"XcmsCIELuvQueryMaxC","","",21,null],[12,"XcmsCIELuvQueryMaxL","","",21,null],[12,"XcmsCIELuvQueryMaxLC","","",21,null],[12,"XcmsCIELuvQueryMinL","","",21,null],[12,"XcmsCIELuvToCIEuvY","","",21,null],[12,"XcmsCIELuvWhiteShiftColors","","",21,null],[12,"XcmsCIEuvYToCIELuv","","",21,null],[12,"XcmsCIEuvYToCIEXYZ","","",21,null],[12,"XcmsCIEuvYToTekHVC","","",21,null],[12,"XcmsCIExyYToCIEXYZ","","",21,null],[12,"XcmsCIEXYZToCIELab","","",21,null],[12,"XcmsCIEXYZToCIEuvY","","",21,null],[12,"XcmsCIEXYZToCIExyY","","",21,null],[12,"XcmsCIEXYZToRGBi","","",21,null],[12,"XcmsClientWhitePointOfCCC","","",21,null],[12,"XcmsConvertColors","","",21,null],[12,"XcmsCreateCCC","","",21,null],[12,"XcmsDefaultCCC","","",21,null],[12,"XcmsDisplayOfCCC","","",21,null],[12,"XcmsFormatOfPrefix","","",21,null],[12,"XcmsFreeCCC","","",21,null],[12,"XcmsLookupColor","","",21,null],[12,"XcmsPrefixOfFormat","","",21,null],[12,"XcmsQueryBlack","","",21,null],[12,"XcmsQueryBlue","","",21,null],[12,"XcmsQueryColor","","",21,null],[12,"XcmsQueryColors","","",21,null],[12,"XcmsQueryGreen","","",21,null],[12,"XcmsQueryRed","","",21,null],[12,"XcmsQueryWhite","","",21,null],[12,"XcmsRGBiToCIEXYZ","","",21,null],[12,"XcmsRGBiToRGB","","",21,null],[12,"XcmsRGBToRGBi","","",21,null],[12,"XcmsScreenNumberOfCCC","","",21,null],[12,"XcmsScreenWhitePointOfCCC","","",21,null],[12,"XcmsSetCCCOfColormap","","",21,null],[12,"XcmsSetCompressionProc","","",21,null],[12,"XcmsSetWhiteAdjustProc","","",21,null],[12,"XcmsSetWhitePoint","","",21,null],[12,"XcmsStoreColor","","",21,null],[12,"XcmsStoreColors","","",21,null],[12,"XcmsTekHVCClipC","","",21,null],[12,"XcmsTekHVCClipV","","",21,null],[12,"XcmsTekHVCClipVC","","",21,null],[12,"XcmsTekHVCQueryMaxC","","",21,null],[12,"XcmsTekHVCQueryMaxV","","",21,null],[12,"XcmsTekHVCQueryMaxVC","","",21,null],[12,"XcmsTekHVCQueryMaxVSamples","","",21,null],[12,"XcmsTekHVCQueryMinV","","",21,null],[12,"XcmsTekHVCToCIEuvY","","",21,null],[12,"XcmsTekHVCWhiteShiftColors","","",21,null],[12,"XcmsVisualOfCCC","","",21,null],[12,"XConfigureWindow","","",21,null],[12,"XConnectionNumber","","",21,null],[12,"XContextDependentDrawing","","",21,null],[12,"XContextualDrawing","","",21,null],[12,"XConvertCase","","",21,null],[12,"XConvertSelection","","",21,null],[12,"XCopyArea","","",21,null],[12,"XCopyColormapAndFree","","",21,null],[12,"XCopyGC","","",21,null],[12,"XCopyPlane","","",21,null],[12,"XCreateBitmapFromData","","",21,null],[12,"XCreateColormap","","",21,null],[12,"XCreateFontCursor","","",21,null],[12,"XCreateFontSet","","",21,null],[12,"XCreateGC","","",21,null],[12,"XCreateGlyphCursor","","",21,null],[12,"XCreateImage","","",21,null],[12,"XCreatePixmap","","",21,null],[12,"XCreatePixmapCursor","","",21,null],[12,"XCreatePixmapFromBitmapData","","",21,null],[12,"XCreateRegion","","",21,null],[12,"XCreateSimpleWindow","","",21,null],[12,"XCreateWindow","","",21,null],[12,"XDefaultColormap","","",21,null],[12,"XDefaultColormapOfScreen","","",21,null],[12,"XDefaultDepth","","",21,null],[12,"XDefaultDepthOfScreen","","",21,null],[12,"XDefaultGC","","",21,null],[12,"XDefaultGCOfScreen","","",21,null],[12,"XDefaultRootWindow","","",21,null],[12,"XDefaultScreen","","",21,null],[12,"XDefaultScreenOfDisplay","","",21,null],[12,"XDefaultString","","",21,null],[12,"XDefaultVisual","","",21,null],[12,"XDefaultVisualOfScreen","","",21,null],[12,"XDefineCursor","","",21,null],[12,"XDeleteContext","","",21,null],[12,"XDeleteModifiermapEntry","","",21,null],[12,"XDeleteProperty","","",21,null],[12,"XDestroyIC","","",21,null],[12,"XDestroyImage","","",21,null],[12,"XDestroyOC","","",21,null],[12,"XDestroyRegion","","",21,null],[12,"XDestroySubwindows","","",21,null],[12,"XDestroyWindow","","",21,null],[12,"XDirectionalDependentDrawing","","",21,null],[12,"XDisableAccessControl","","",21,null],[12,"XDisplayCells","","",21,null],[12,"XDisplayHeight","","",21,null],[12,"XDisplayHeightMM","","",21,null],[12,"XDisplayKeycodes","","",21,null],[12,"XDisplayMotionBufferSize","","",21,null],[12,"XDisplayName","","",21,null],[12,"XDisplayOfIM","","",21,null],[12,"XDisplayOfOM","","",21,null],[12,"XDisplayOfScreen","","",21,null],[12,"XDisplayPlanes","","",21,null],[12,"XDisplayString","","",21,null],[12,"XDisplayWidth","","",21,null],[12,"XDisplayWidthMM","","",21,null],[12,"XDoesBackingStore","","",21,null],[12,"XDoesSaveUnders","","",21,null],[12,"XDrawArc","","",21,null],[12,"XDrawArcs","","",21,null],[12,"XDrawImageString","","",21,null],[12,"XDrawImageString16","","",21,null],[12,"XDrawLine","","",21,null],[12,"XDrawLines","","",21,null],[12,"XDrawPoint","","",21,null],[12,"XDrawPoints","","",21,null],[12,"XDrawRectangle","","",21,null],[12,"XDrawRectangles","","",21,null],[12,"XDrawSegments","","",21,null],[12,"XDrawString","","",21,null],[12,"XDrawString16","","",21,null],[12,"XDrawText","","",21,null],[12,"XDrawText16","","",21,null],[12,"XEHeadOfExtensionList","","",21,null],[12,"XEmptyRegion","","",21,null],[12,"XEnableAccessControl","","",21,null],[12,"XEqualRegion","","",21,null],[12,"XESetBeforeFlush","","",21,null],[12,"XESetCloseDisplay","","",21,null],[12,"XESetCopyEventCookie","","",21,null],[12,"XESetCopyGC","","",21,null],[12,"XESetCreateFont","","",21,null],[12,"XESetCreateGC","","",21,null],[12,"XESetError","","",21,null],[12,"XESetErrorString","","",21,null],[12,"XESetEventToWire","","",21,null],[12,"XESetFlushGC","","",21,null],[12,"XESetFreeFont","","",21,null],[12,"XESetFreeGC","","",21,null],[12,"XESetPrintErrorValues","","",21,null],[12,"XESetWireToError","","",21,null],[12,"XESetWireToEvent","","",21,null],[12,"XESetWireToEventCookie","","",21,null],[12,"XEventMaskOfScreen","","",21,null],[12,"XEventsQueued","","",21,null],[12,"XExtendedMaxRequestSize","","",21,null],[12,"XExtentsOfFontSet","","",21,null],[12,"XFetchBuffer","","",21,null],[12,"XFetchBytes","","",21,null],[12,"XFetchName","","",21,null],[12,"XFillArc","","",21,null],[12,"XFillArcs","","",21,null],[12,"XFillPolygon","","",21,null],[12,"XFillRectangle","","",21,null],[12,"XFillRectangles","","",21,null],[12,"XFilterEvent","","",21,null],[12,"XFindContext","","",21,null],[12,"XFindOnExtensionList","","",21,null],[12,"XFlush","","",21,null],[12,"XFlushGC","","",21,null],[12,"XFontsOfFontSet","","",21,null],[12,"XForceScreenSaver","","",21,null],[12,"XFree","","",21,null],[12,"XFreeColormap","","",21,null],[12,"XFreeColors","","",21,null],[12,"XFreeCursor","","",21,null],[12,"XFreeEventData","","",21,null],[12,"XFreeExtensionList","","",21,null],[12,"XFreeFont","","",21,null],[12,"XFreeFontInfo","","",21,null],[12,"XFreeFontNames","","",21,null],[12,"XFreeFontPath","","",21,null],[12,"XFreeFontSet","","",21,null],[12,"XFreeGC","","",21,null],[12,"XFreeModifiermap","","",21,null],[12,"XFreePixmap","","",21,null],[12,"XFreeStringList","","",21,null],[12,"XGContextFromGC","","",21,null],[12,"XGeometry","","",21,null],[12,"XGetAtomName","","",21,null],[12,"XGetAtomNames","","",21,null],[12,"XGetClassHint","","",21,null],[12,"XGetCommand","","",21,null],[12,"XGetDefault","","",21,null],[12,"XGetErrorDatabaseText","","",21,null],[12,"XGetErrorText","","",21,null],[12,"XGetEventData","","",21,null],[12,"XGetFontPath","","",21,null],[12,"XGetFontProperty","","",21,null],[12,"XGetGCValues","","",21,null],[12,"XGetGeometry","","",21,null],[12,"XGetIconName","","",21,null],[12,"XGetIconSizes","","",21,null],[12,"XGetImage","","",21,null],[12,"XGetInputFocus","","",21,null],[12,"XGetKeyboardControl","","",21,null],[12,"XGetKeyboardMapping","","",21,null],[12,"XGetModifierMapping","","",21,null],[12,"XGetMotionEvents","","",21,null],[12,"XGetNormalHints","","",21,null],[12,"XGetPixel","","",21,null],[12,"XGetPointerControl","","",21,null],[12,"XGetPointerMapping","","",21,null],[12,"XGetRGBColormaps","","",21,null],[12,"XGetScreenSaver","","",21,null],[12,"XGetSelectionOwner","","",21,null],[12,"XGetSizeHints","","",21,null],[12,"XGetStandardColormap","","",21,null],[12,"XGetSubImage","","",21,null],[12,"XGetTextProperty","","",21,null],[12,"XGetTransientForHint","","",21,null],[12,"XGetVisualInfo","","",21,null],[12,"XGetWindowAttributes","","",21,null],[12,"XGetWindowProperty","","",21,null],[12,"XGetWMClientMachine","","",21,null],[12,"XGetWMColormapWindows","","",21,null],[12,"XGetWMHints","","",21,null],[12,"XGetWMIconName","","",21,null],[12,"XGetWMName","","",21,null],[12,"XGetWMNormalHints","","",21,null],[12,"XGetWMProtocols","","",21,null],[12,"XGetWMSizeHints","","",21,null],[12,"XGetZoomHints","","",21,null],[12,"XGrabButton","","",21,null],[12,"XGrabKey","","",21,null],[12,"XGrabKeyboard","","",21,null],[12,"XGrabPointer","","",21,null],[12,"XGrabServer","","",21,null],[12,"XHeightMMOfScreen","","",21,null],[12,"XHeightOfScreen","","",21,null],[12,"XIconifyWindow","","",21,null],[12,"XIfEvent","","",21,null],[12,"XImageByteOrder","","",21,null],[12,"XIMOfIC","","",21,null],[12,"XInitExtension","","",21,null],[12,"XInitImage","","",21,null],[12,"XInitThreads","","",21,null],[12,"XInsertModifiermapEntry","","",21,null],[12,"XInstallColormap","","",21,null],[12,"XInternalConnectionNumbers","","",21,null],[12,"XInternAtom","","",21,null],[12,"XInternAtoms","","",21,null],[12,"XIntersectRegion","","",21,null],[12,"XkbAddDeviceLedInfo","","",21,null],[12,"XkbAddGeomColor","","",21,null],[12,"XkbAddGeomDoodad","","",21,null],[12,"XkbAddGeomKey","","",21,null],[12,"XkbAddGeomKeyAlias","","",21,null],[12,"XkbAddGeomOutline","","",21,null],[12,"XkbAddGeomOverlay","","",21,null],[12,"XkbAddGeomOverlayKey","","",21,null],[12,"XkbAddGeomOverlayRow","","",21,null],[12,"XkbAddGeomProperty","","",21,null],[12,"XkbAddGeomRow","","",21,null],[12,"XkbAddGeomSection","","",21,null],[12,"XkbAddGeomShape","","",21,null],[12,"XkbAddKeyType","","",21,null],[12,"XkbAllocClientMap","","",21,null],[12,"XkbAllocCompatMap","","",21,null],[12,"XkbAllocControls","","",21,null],[12,"XkbAllocDeviceInfo","","",21,null],[12,"XkbAllocGeomColors","","",21,null],[12,"XkbAllocGeomDoodads","","",21,null],[12,"XkbAllocGeometry","","",21,null],[12,"XkbAllocGeomKeyAliases","","",21,null],[12,"XkbAllocGeomKeys","","",21,null],[12,"XkbAllocGeomOutlines","","",21,null],[12,"XkbAllocGeomOverlayKeys","","",21,null],[12,"XkbAllocGeomOverlayRows","","",21,null],[12,"XkbAllocGeomOverlays","","",21,null],[12,"XkbAllocGeomPoints","","",21,null],[12,"XkbAllocGeomProps","","",21,null],[12,"XkbAllocGeomRows","","",21,null],[12,"XkbAllocGeomSectionDoodads","","",21,null],[12,"XkbAllocGeomSections","","",21,null],[12,"XkbAllocGeomShapes","","",21,null],[12,"XkbAllocIndicatorMaps","","",21,null],[12,"XkbAllocKeyboard","","",21,null],[12,"XkbAllocNames","","",21,null],[12,"XkbAllocServerMap","","",21,null],[12,"XkbApplyCompatMapToKey","","",21,null],[12,"XkbApplyVirtualModChanges","","",21,null],[12,"XkbBell","","",21,null],[12,"XkbBellEvent","","",21,null],[12,"XkbChangeDeviceInfo","","",21,null],[12,"XkbChangeEnabledControls","","",21,null],[12,"XkbChangeKeycodeRange","","",21,null],[12,"XkbChangeMap","","",21,null],[12,"XkbChangeNames","","",21,null],[12,"XkbChangeTypesOfKey","","",21,null],[12,"XkbComputeEffectiveMap","","",21,null],[12,"XkbComputeRowBounds","","",21,null],[12,"XkbComputeSectionBounds","","",21,null],[12,"XkbComputeShapeBounds","","",21,null],[12,"XkbComputeShapeTop","","",21,null],[12,"XkbCopyKeyType","","",21,null],[12,"XkbCopyKeyTypes","","",21,null],[12,"XkbDeviceBell","","",21,null],[12,"XkbDeviceBellEvent","","",21,null],[12,"XkbFindOverlayForKey","","",21,null],[12,"XkbForceBell","","",21,null],[12,"XkbForceDeviceBell","","",21,null],[12,"XkbFreeClientMap","","",21,null],[12,"XkbFreeCompatMap","","",21,null],[12,"XkbFreeComponentList","","",21,null],[12,"XkbFreeControls","","",21,null],[12,"XkbFreeDeviceInfo","","",21,null],[12,"XkbFreeGeomColors","","",21,null],[12,"XkbFreeGeomDoodads","","",21,null],[12,"XkbFreeGeometry","","",21,null],[12,"XkbFreeGeomKeyAliases","","",21,null],[12,"XkbFreeGeomKeys","","",21,null],[12,"XkbFreeGeomOutlines","","",21,null],[12,"XkbFreeGeomOverlayKeys","","",21,null],[12,"XkbFreeGeomOverlayRows","","",21,null],[12,"XkbFreeGeomOverlays","","",21,null],[12,"XkbFreeGeomPoints","","",21,null],[12,"XkbFreeGeomProperties","","",21,null],[12,"XkbFreeGeomRows","","",21,null],[12,"XkbFreeGeomSections","","",21,null],[12,"XkbFreeGeomShapes","","",21,null],[12,"XkbFreeIndicatorMaps","","",21,null],[12,"XkbFreeKeyboard","","",21,null],[12,"XkbFreeNames","","",21,null],[12,"XkbFreeServerMap","","",21,null],[12,"XkbGetAutoRepeatRate","","",21,null],[12,"XkbGetAutoResetControls","","",21,null],[12,"XkbGetCompatMap","","",21,null],[12,"XkbGetControls","","",21,null],[12,"XkbGetDetectableAutoRepeat","","",21,null],[12,"XkbGetDeviceButtonActions","","",21,null],[12,"XkbGetDeviceInfo","","",21,null],[12,"XkbGetDeviceInfoChanges","","",21,null],[12,"XkbGetDeviceLedInfo","","",21,null],[12,"XkbGetGeometry","","",21,null],[12,"XkbGetIndicatorMap","","",21,null],[12,"XkbGetIndicatorState","","",21,null],[12,"XkbGetKeyActions","","",21,null],[12,"XkbGetKeyBehaviors","","",21,null],[12,"XkbGetKeyboard","","",21,null],[12,"XkbGetKeyboardByName","","",21,null],[12,"XkbGetKeyExplicitComponents","","",21,null],[12,"XkbGetKeyModifierMap","","",21,null],[12,"XkbGetKeySyms","","",21,null],[12,"XkbGetKeyTypes","","",21,null],[12,"XkbGetKeyVirtualModMap","","",21,null],[12,"XkbGetMap","","",21,null],[12,"XkbGetMapChanges","","",21,null],[12,"XkbGetNamedDeviceIndicator","","",21,null],[12,"XkbGetNamedGeometry","","",21,null],[12,"XkbGetNamedIndicator","","",21,null],[12,"XkbGetNames","","",21,null],[12,"XkbGetPerClientControls","","",21,null],[12,"XkbGetState","","",21,null],[12,"XkbGetUpdatedMap","","",21,null],[12,"XkbGetVirtualMods","","",21,null],[12,"XkbGetXlibControls","","",21,null],[12,"XkbIgnoreExtension","","",21,null],[12,"XkbInitCanonicalKeyTypes","","",21,null],[12,"XkbKeycodeToKeysym","","",21,null],[12,"XkbKeysymToModifiers","","",21,null],[12,"XkbKeyTypesForCoreSymbols","","",21,null],[12,"XkbLatchGroup","","",21,null],[12,"XkbLatchModifiers","","",21,null],[12,"XkbLibraryVersion","","",21,null],[12,"XkbListComponents","","",21,null],[12,"XkbLockGroup","","",21,null],[12,"XkbLockModifiers","","",21,null],[12,"XkbLookupKeyBinding","","",21,null],[12,"XkbLookupKeySym","","",21,null],[12,"XkbNoteControlsChanges","","",21,null],[12,"XkbNoteDeviceChanges","","",21,null],[12,"XkbNoteMapChanges","","",21,null],[12,"XkbNoteNameChanges","","",21,null],[12,"XkbOpenDisplay","","",21,null],[12,"XkbQueryExtension","","",21,null],[12,"XkbRefreshKeyboardMapping","","",21,null],[12,"XkbResizeDeviceButtonActions","","",21,null],[12,"XkbResizeKeyActions","","",21,null],[12,"XkbResizeKeySyms","","",21,null],[12,"XkbResizeKeyType","","",21,null],[12,"XkbSelectEventDetails","","",21,null],[12,"XkbSelectEvents","","",21,null],[12,"XkbSetAtomFuncs","","",21,null],[12,"XkbSetAutoRepeatRate","","",21,null],[12,"XkbSetAutoResetControls","","",21,null],[12,"XkbSetCompatMap","","",21,null],[12,"XkbSetControls","","",21,null],[12,"XkbSetDebuggingFlags","","",21,null],[12,"XkbSetDetectableAutoRepeat","","",21,null],[12,"XkbSetDeviceButtonActions","","",21,null],[12,"XkbSetDeviceInfo","","",21,null],[12,"XkbSetDeviceLedInfo","","",21,null],[12,"XkbSetGeometry","","",21,null],[12,"XkbSetIgnoreLockMods","","",21,null],[12,"XkbSetIndicatorMap","","",21,null],[12,"XkbSetMap","","",21,null],[12,"XkbSetNamedDeviceIndicator","","",21,null],[12,"XkbSetNamedIndicator","","",21,null],[12,"XkbSetNames","","",21,null],[12,"XkbSetPerClientControls","","",21,null],[12,"XkbSetServerInternalMods","","",21,null],[12,"XkbSetXlibControls","","",21,null],[12,"XkbToControl","","",21,null],[12,"XkbTranslateKeyCode","","",21,null],[12,"XkbTranslateKeySym","","",21,null],[12,"XkbUpdateActionVirtualMods","","",21,null],[12,"XkbUpdateKeyTypeVirtualMods","","",21,null],[12,"XkbUpdateMapFromCore","","",21,null],[12,"XkbUseExtension","","",21,null],[12,"XkbVirtualModsToReal","","",21,null],[12,"XkbXlibControlsImplemented","","",21,null],[12,"XKeycodeToKeysym","","",21,null],[12,"XKeysymToKeycode","","",21,null],[12,"XKeysymToString","","",21,null],[12,"XKillClient","","",21,null],[12,"XLastKnownRequestProcessed","","",21,null],[12,"XListDepths","","",21,null],[12,"XListExtensions","","",21,null],[12,"XListFonts","","",21,null],[12,"XListFontsWithInfo","","",21,null],[12,"XListHosts","","",21,null],[12,"XListInstalledColormaps","","",21,null],[12,"XListPixmapFormats","","",21,null],[12,"XListProperties","","",21,null],[12,"XLoadFont","","",21,null],[12,"XLoadQueryFont","","",21,null],[12,"XLocaleOfFontSet","","",21,null],[12,"XLocaleOfIM","","",21,null],[12,"XLocaleOfOM","","",21,null],[12,"XLockDisplay","","",21,null],[12,"XLookupColor","","",21,null],[12,"XLookupKeysym","","",21,null],[12,"XLookupString","","",21,null],[12,"XLowerWindow","","",21,null],[12,"XMapRaised","","",21,null],[12,"XMapSubwindows","","",21,null],[12,"XMapWindow","","",21,null],[12,"XMaskEvent","","",21,null],[12,"XMatchVisualInfo","","",21,null],[12,"XMaxCmapsOfScreen","","",21,null],[12,"XMaxRequestSize","","",21,null],[12,"XmbDrawImageString","","",21,null],[12,"XmbDrawString","","",21,null],[12,"XmbDrawText","","",21,null],[12,"XmbLookupString","","",21,null],[12,"XmbResetIC","","",21,null],[12,"XmbSetWMProperties","","",21,null],[12,"XmbTextEscapement","","",21,null],[12,"XmbTextExtents","","",21,null],[12,"XmbTextListToTextProperty","","",21,null],[12,"XmbTextPerCharExtents","","",21,null],[12,"XmbTextPropertyToTextList","","",21,null],[12,"XMinCmapsOfScreen","","",21,null],[12,"XMoveResizeWindow","","",21,null],[12,"XMoveWindow","","",21,null],[12,"XNewModifiermap","","",21,null],[12,"XNextEvent","","",21,null],[12,"XNextRequest","","",21,null],[12,"XNoOp","","",21,null],[12,"XOffsetRegion","","",21,null],[12,"XOMOfOC","","",21,null],[12,"XOpenDisplay","","",21,null],[12,"XOpenIM","","",21,null],[12,"XOpenOM","","",21,null],[12,"XParseColor","","",21,null],[12,"XParseGeometry","","",21,null],[12,"XPeekEvent","","",21,null],[12,"XPeekIfEvent","","",21,null],[12,"XPending","","",21,null],[12,"Xpermalloc","","",21,null],[12,"XPlanesOfScreen","","",21,null],[12,"XPointInRegion","","",21,null],[12,"XPolygonRegion","","",21,null],[12,"XProcessInternalConnection","","",21,null],[12,"XProtocolRevision","","",21,null],[12,"XProtocolVersion","","",21,null],[12,"XPutBackEvent","","",21,null],[12,"XPutImage","","",21,null],[12,"XPutPixel","","",21,null],[12,"XQLength","","",21,null],[12,"XQueryBestCursor","","",21,null],[12,"XQueryBestSize","","",21,null],[12,"XQueryBestStipple","","",21,null],[12,"XQueryBestTile","","",21,null],[12,"XQueryColor","","",21,null],[12,"XQueryColors","","",21,null],[12,"XQueryExtension","","",21,null],[12,"XQueryFont","","",21,null],[12,"XQueryKeymap","","",21,null],[12,"XQueryPointer","","",21,null],[12,"XQueryTextExtents","","",21,null],[12,"XQueryTextExtents16","","",21,null],[12,"XQueryTree","","",21,null],[12,"XRaiseWindow","","",21,null],[12,"XReadBitmapFile","","",21,null],[12,"XReadBitmapFileData","","",21,null],[12,"XRebindKeysym","","",21,null],[12,"XRecolorCursor","","",21,null],[12,"XReconfigureWMWindow","","",21,null],[12,"XRectInRegion","","",21,null],[12,"XRefreshKeyboardMapping","","",21,null],[12,"XRegisterIMInstantiateCallback","","",21,null],[12,"XRemoveConnectionWatch","","",21,null],[12,"XRemoveFromSaveSet","","",21,null],[12,"XRemoveHost","","",21,null],[12,"XRemoveHosts","","",21,null],[12,"XReparentWindow","","",21,null],[12,"XResetScreenSaver","","",21,null],[12,"XResizeWindow","","",21,null],[12,"XResourceManagerString","","",21,null],[12,"XRestackWindows","","",21,null],[12,"XrmCombineDatabase","","",21,null],[12,"XrmCombineFileDatabase","","",21,null],[12,"XrmDestroyDatabase","","",21,null],[12,"XrmEnumerateDatabase","","",21,null],[12,"XrmGetDatabase","","",21,null],[12,"XrmGetFileDatabase","","",21,null],[12,"XrmGetResource","","",21,null],[12,"XrmGetStringDatabase","","",21,null],[12,"XrmInitialize","","",21,null],[12,"XrmLocaleOfDatabase","","",21,null],[12,"XrmMergeDatabases","","",21,null],[12,"XrmParseCommand","","",21,null],[12,"XrmPermStringToQuark","","",21,null],[12,"XrmPutFileDatabase","","",21,null],[12,"XrmPutLineResource","","",21,null],[12,"XrmPutResource","","",21,null],[12,"XrmPutStringResource","","",21,null],[12,"XrmQGetResource","","",21,null],[12,"XrmQGetSearchList","","",21,null],[12,"XrmQGetSearchResource","","",21,null],[12,"XrmQPutResource","","",21,null],[12,"XrmQPutStringResource","","",21,null],[12,"XrmQuarkToString","","",21,null],[12,"XrmSetDatabase","","",21,null],[12,"XrmStringToBindingQuarkList","","",21,null],[12,"XrmStringToQuark","","",21,null],[12,"XrmStringToQuarkList","","",21,null],[12,"XrmUniqueQuark","","",21,null],[12,"XRootWindow","","",21,null],[12,"XRootWindowOfScreen","","",21,null],[12,"XRotateBuffers","","",21,null],[12,"XRotateWindowProperties","","",21,null],[12,"XSaveContext","","",21,null],[12,"XScreenCount","","",21,null],[12,"XScreenNumberOfScreen","","",21,null],[12,"XScreenOfDisplay","","",21,null],[12,"XScreenResourceString","","",21,null],[12,"XSelectInput","","",21,null],[12,"XSendEvent","","",21,null],[12,"XServerVendor","","",21,null],[12,"XSetAccessControl","","",21,null],[12,"XSetAfterFunction","","",21,null],[12,"XSetArcMode","","",21,null],[12,"XSetAuthorization","","",21,null],[12,"XSetBackground","","",21,null],[12,"XSetClassHint","","",21,null],[12,"XSetClipMask","","",21,null],[12,"XSetClipOrigin","","",21,null],[12,"XSetClipRectangles","","",21,null],[12,"XSetCloseDownMode","","",21,null],[12,"XSetCommand","","",21,null],[12,"XSetDashes","","",21,null],[12,"XSetErrorHandler","","",21,null],[12,"XSetFillRule","","",21,null],[12,"XSetFillStyle","","",21,null],[12,"XSetFont","","",21,null],[12,"XSetFontPath","","",21,null],[12,"XSetForeground","","",21,null],[12,"XSetFunction","","",21,null],[12,"XSetGraphicsExposures","","",21,null],[12,"XSetICFocus","","",21,null],[12,"XSetIconName","","",21,null],[12,"XSetIconSizes","","",21,null],[12,"XSetInputFocus","","",21,null],[12,"XSetIOErrorHandler","","",21,null],[12,"XSetLineAttributes","","",21,null],[12,"XSetLocaleModifiers","","",21,null],[12,"XSetModifierMapping","","",21,null],[12,"XSetNormalHints","","",21,null],[12,"XSetPlaneMask","","",21,null],[12,"XSetPointerMapping","","",21,null],[12,"XSetRegion","","",21,null],[12,"XSetRGBColormaps","","",21,null],[12,"XSetScreenSaver","","",21,null],[12,"XSetSelectionOwner","","",21,null],[12,"XSetSizeHints","","",21,null],[12,"XSetStandardColormap","","",21,null],[12,"XSetStandardProperties","","",21,null],[12,"XSetState","","",21,null],[12,"XSetStipple","","",21,null],[12,"XSetSubwindowMode","","",21,null],[12,"XSetTextProperty","","",21,null],[12,"XSetTile","","",21,null],[12,"XSetTransientForHint","","",21,null],[12,"XSetTSOrigin","","",21,null],[12,"XSetWindowBackground","","",21,null],[12,"XSetWindowBackgroundPixmap","","",21,null],[12,"XSetWindowBorder","","",21,null],[12,"XSetWindowBorderPixmap","","",21,null],[12,"XSetWindowBorderWidth","","",21,null],[12,"XSetWindowColormap","","",21,null],[12,"XSetWMClientMachine","","",21,null],[12,"XSetWMColormapWindows","","",21,null],[12,"XSetWMHints","","",21,null],[12,"XSetWMIconName","","",21,null],[12,"XSetWMName","","",21,null],[12,"XSetWMNormalHints","","",21,null],[12,"XSetWMProperties","","",21,null],[12,"XSetWMProtocols","","",21,null],[12,"XSetWMSizeHints","","",21,null],[12,"XSetZoomHints","","",21,null],[12,"XShrinkRegion","","",21,null],[12,"XStoreBuffer","","",21,null],[12,"XStoreBytes","","",21,null],[12,"XStoreColor","","",21,null],[12,"XStoreColors","","",21,null],[12,"XStoreName","","",21,null],[12,"XStoreNamedColor","","",21,null],[12,"XStringListToTextProperty","","",21,null],[12,"XStringToKeysym","","",21,null],[12,"XSubImage","","",21,null],[12,"XSubtractRegion","","",21,null],[12,"XSupportsLocale","","",21,null],[12,"XSync","","",21,null],[12,"XSynchronize","","",21,null],[12,"XTextExtents","","",21,null],[12,"XTextExtents16","","",21,null],[12,"XTextPropertyToStringList","","",21,null],[12,"XTextWidth","","",21,null],[12,"XTextWidth16","","",21,null],[12,"XTranslateCoordinates","","",21,null],[12,"XUndefineCursor","","",21,null],[12,"XUngrabButton","","",21,null],[12,"XUngrabKey","","",21,null],[12,"XUngrabKeyboard","","",21,null],[12,"XUngrabPointer","","",21,null],[12,"XUngrabServer","","",21,null],[12,"XUninstallColormap","","",21,null],[12,"XUnionRectWithRegion","","",21,null],[12,"XUnionRegion","","",21,null],[12,"XUnloadFont","","",21,null],[12,"XUnlockDisplay","","",21,null],[12,"XUnmapSubwindows","","",21,null],[12,"XUnmapWindow","","",21,null],[12,"XUnregisterIMInstantiateCallback","","",21,null],[12,"XUnsetICFocus","","",21,null],[12,"Xutf8DrawImageString","","",21,null],[12,"Xutf8DrawString","","",21,null],[12,"Xutf8DrawText","","",21,null],[12,"Xutf8LookupString","","",21,null],[12,"Xutf8ResetIC","","",21,null],[12,"Xutf8SetWMProperties","","",21,null],[12,"Xutf8TextEscapement","","",21,null],[12,"Xutf8TextExtents","","",21,null],[12,"Xutf8TextListToTextProperty","","",21,null],[12,"Xutf8TextPerCharExtents","","",21,null],[12,"Xutf8TextPropertyToTextList","","",21,null],[12,"XVendorRelease","","",21,null],[12,"XVisualIDFromVisual","","",21,null],[12,"XWarpPointer","","",21,null],[12,"XwcDrawImageString","","",21,null],[12,"XwcDrawString","","",21,null],[12,"XwcDrawText","","",21,null],[12,"XwcFreeStringList","","",21,null],[12,"XwcLookupString","","",21,null],[12,"XwcResetIC","","",21,null],[12,"XwcTextEscapement","","",21,null],[12,"XwcTextExtents","","",21,null],[12,"XwcTextListToTextProperty","","",21,null],[12,"XwcTextPerCharExtents","","",21,null],[12,"XwcTextPropertyToTextList","","",21,null],[12,"XWhitePixel","","",21,null],[12,"XWhitePixelOfScreen","","",21,null],[12,"XWidthMMOfScreen","","",21,null],[12,"XWidthOfScreen","","",21,null],[12,"XWindowEvent","","",21,null],[12,"XWithdrawWindow","","",21,null],[12,"XWMGeometry","","",21,null],[12,"XWriteBitmapFile","","",21,null],[12,"XXorRegion","","",21,null],[12,"XCreateIC","","",21,null],[12,"XCreateOC","","",21,null],[12,"XGetICValues","","",21,null],[12,"XGetIMValues","","",21,null],[12,"XGetOCValues","","",21,null],[12,"XGetOMValues","","",21,null],[12,"XSetICValues","","",21,null],[12,"XSetIMValues","","",21,null],[12,"XSetOCValues","","",21,null],[12,"XSetOMValues","","",21,null],[12,"XVaCreateNestedList","","",21,null],[3,"_XcmsCCC","","",null,null],[3,"XcmsColor","","",null,null],[3,"_XcmsColorSpace","","",null,null],[3,"_XcmsFunctionSet","","",null,null],[3,"_XkbAction","","",null,null],[3,"_XkbBounds","","",null,null],[3,"_XkbChanges","","",null,null],[3,"_XkbClientMapRec","","",null,null],[3,"_XkbColor","","",null,null],[3,"_XkbComponentList","","",null,null],[3,"_XkbComponentNames","","",null,null],[3,"_XkbControls","","",null,null],[3,"_XkbControlsChanges","","",null,null],[3,"_XkbControlsNotify","","",null,null],[3,"_XkbDeviceChanges","","",null,null],[3,"_XkbDeviceInfo","","",null,null],[3,"_XkbDeviceLedInfo","","",null,null],[3,"_XkbDoodad","","",null,null],[3,"_XkbExtensionDeviceNotify","","",null,null],[3,"_XkbGeometry","","",null,null],[3,"_XkbGeometrySizes","","",null,null],[3,"_XkbIndicatorMapRec","","",null,null],[3,"_XkbKey","","",null,null],[3,"_XkbKeyType","","",null,null],[3,"_XkbMapChanges","","",null,null],[3,"_XkbMapNotifyEvent","","",null,null],[3,"_XkbMods","","",null,null],[3,"_XkbNameChanges","","",null,null],[3,"_XkbNamesNotify","","",null,null],[3,"_XkbOutline","","",null,null],[3,"_XkbOverlay","","",null,null],[3,"_XkbOverlayKey","","",null,null],[3,"_XkbOverlayRow","","",null,null],[3,"_XkbProperty","","",null,null],[3,"_XkbRow","","",null,null],[3,"_XkbSection","","",null,null],[3,"_XkbServerMapRec","","",null,null],[3,"_XkbShape","","",null,null],[3,"_XkbStateRec","","",null,null],[3,"_XkbSymInterpretRec","","",null,null],[3,"XEvent","","",null,null],[12,"pad","","",22,null],[3,"XAnyEvent","","",null,null],[12,"type_","","",23,null],[12,"serial","","",23,null],[12,"send_event","","",23,null],[12,"display","","",23,null],[12,"window","","",23,null],[3,"XButtonEvent","","",null,null],[12,"type_","","",24,null],[12,"serial","","",24,null],[12,"send_event","","",24,null],[12,"display","","",24,null],[12,"window","","",24,null],[12,"root","","",24,null],[12,"subwindow","","",24,null],[12,"time","","",24,null],[12,"x","","",24,null],[12,"y","","",24,null],[12,"x_root","","",24,null],[12,"y_root","","",24,null],[12,"state","","",24,null],[12,"button","","",24,null],[12,"same_screen","","",24,null],[3,"XCirculateEvent","","",null,null],[12,"type_","","",25,null],[12,"serial","","",25,null],[12,"send_event","","",25,null],[12,"display","","",25,null],[12,"event","","",25,null],[12,"window","","",25,null],[12,"place","","",25,null],[3,"XCirculateRequestEvent","","",null,null],[12,"type_","","",26,null],[12,"serial","","",26,null],[12,"send_event","","",26,null],[12,"display","","",26,null],[12,"parent","","",26,null],[12,"window","","",26,null],[12,"place","","",26,null],[3,"XClientMessageEvent","","",null,null],[12,"type_","","",27,null],[12,"serial","","",27,null],[12,"send_event","","",27,null],[12,"display","","",27,null],[12,"window","","",27,null],[12,"message_type","","",27,null],[12,"format","","",27,null],[12,"data","","",27,null],[3,"XColormapEvent","","",null,null],[12,"type_","","",28,null],[12,"serial","","",28,null],[12,"send_event","","",28,null],[12,"display","","",28,null],[12,"window","","",28,null],[12,"colormap","","",28,null],[12,"new","","",28,null],[12,"state","","",28,null],[3,"XConfigureEvent","","",null,null],[12,"type_","","",29,null],[12,"serial","","",29,null],[12,"send_event","","",29,null],[12,"display","","",29,null],[12,"event","","",29,null],[12,"window","","",29,null],[12,"x","","",29,null],[12,"y","","",29,null],[12,"width","","",29,null],[12,"height","","",29,null],[12,"border_width","","",29,null],[12,"above","","",29,null],[12,"override_redirect","","",29,null],[3,"XConfigureRequestEvent","","",null,null],[12,"type_","","",30,null],[12,"serial","","",30,null],[12,"send_event","","",30,null],[12,"display","","",30,null],[12,"parent","","",30,null],[12,"window","","",30,null],[12,"x","","",30,null],[12,"y","","",30,null],[12,"width","","",30,null],[12,"height","","",30,null],[12,"border_width","","",30,null],[12,"above","","",30,null],[12,"detail","","",30,null],[12,"value_mask","","",30,null],[3,"XCreateWindowEvent","","",null,null],[12,"type_","","",31,null],[12,"serial","","",31,null],[12,"send_event","","",31,null],[12,"display","","",31,null],[12,"parent","","",31,null],[12,"window","","",31,null],[12,"x","","",31,null],[12,"y","","",31,null],[12,"width","","",31,null],[12,"height","","",31,null],[12,"border_width","","",31,null],[12,"override_redirect","","",31,null],[3,"XCrossingEvent","","",null,null],[12,"type_","","",32,null],[12,"serial","","",32,null],[12,"send_event","","",32,null],[12,"display","","",32,null],[12,"window","","",32,null],[12,"root","","",32,null],[12,"subwindow","","",32,null],[12,"time","","",32,null],[12,"x","","",32,null],[12,"y","","",32,null],[12,"x_root","","",32,null],[12,"y_root","","",32,null],[12,"mode","","",32,null],[12,"detail","","",32,null],[12,"same_screen","","",32,null],[12,"focus","","",32,null],[12,"state","","",32,null],[3,"XDestroyWindowEvent","","",null,null],[12,"type_","","",33,null],[12,"serial","","",33,null],[12,"send_event","","",33,null],[12,"display","","",33,null],[12,"event","","",33,null],[12,"window","","",33,null],[3,"XErrorEvent","","",null,null],[12,"type_","","",34,null],[12,"display","","",34,null],[12,"serial","","",34,null],[12,"error_code","","",34,null],[12,"request_code","","",34,null],[12,"minor_code","","",34,null],[12,"resourceid","","",34,null],[3,"XExposeEvent","","",null,null],[12,"type_","","",35,null],[12,"serial","","",35,null],[12,"send_event","","",35,null],[12,"display","","",35,null],[12,"window","","",35,null],[12,"x","","",35,null],[12,"y","","",35,null],[12,"width","","",35,null],[12,"height","","",35,null],[12,"count","","",35,null],[3,"XFocusChangeEvent","","",null,null],[12,"type_","","",36,null],[12,"serial","","",36,null],[12,"send_event","","",36,null],[12,"display","","",36,null],[12,"window","","",36,null],[12,"mode","","",36,null],[12,"detail","","",36,null],[3,"XGraphicsExposeEvent","","",null,null],[12,"type_","","",37,null],[12,"serial","","",37,null],[12,"send_event","","",37,null],[12,"display","","",37,null],[12,"drawable","","",37,null],[12,"x","","",37,null],[12,"y","","",37,null],[12,"width","","",37,null],[12,"height","","",37,null],[12,"count","","",37,null],[12,"major_code","","",37,null],[12,"minor_code","","",37,null],[3,"XGravityEvent","","",null,null],[12,"type_","","",38,null],[12,"serial","","",38,null],[12,"send_event","","",38,null],[12,"display","","",38,null],[12,"event","","",38,null],[12,"window","","",38,null],[12,"x","","",38,null],[12,"y","","",38,null],[3,"XKeyEvent","","",null,null],[12,"type_","","",39,null],[12,"serial","","",39,null],[12,"send_event","","",39,null],[12,"display","","",39,null],[12,"window","","",39,null],[12,"root","","",39,null],[12,"subwindow","","",39,null],[12,"time","","",39,null],[12,"x","","",39,null],[12,"y","","",39,null],[12,"x_root","","",39,null],[12,"y_root","","",39,null],[12,"state","","",39,null],[12,"keycode","","",39,null],[12,"same_screen","","",39,null],[3,"XKeymapEvent","","",null,null],[12,"type_","","",40,null],[12,"serial","","",40,null],[12,"send_event","","",40,null],[12,"display","","",40,null],[12,"window","","",40,null],[12,"key_vector","","",40,null],[3,"XMapEvent","","",null,null],[12,"type_","","",41,null],[12,"serial","","",41,null],[12,"send_event","","",41,null],[12,"display","","",41,null],[12,"event","","",41,null],[12,"window","","",41,null],[12,"override_redirect","","",41,null],[3,"XMappingEvent","","",null,null],[12,"type_","","",42,null],[12,"serial","","",42,null],[12,"send_event","","",42,null],[12,"display","","",42,null],[12,"event","","",42,null],[12,"request","","",42,null],[12,"first_keycode","","",42,null],[12,"count","","",42,null],[3,"XMapRequestEvent","","",null,null],[12,"type_","","",43,null],[12,"serial","","",43,null],[12,"send_event","","",43,null],[12,"display","","",43,null],[12,"parent","","",43,null],[12,"window","","",43,null],[3,"XMotionEvent","","",null,null],[12,"type_","","",44,null],[12,"serial","","",44,null],[12,"send_event","","",44,null],[12,"display","","",44,null],[12,"window","","",44,null],[12,"root","","",44,null],[12,"subwindow","","",44,null],[12,"time","","",44,null],[12,"x","","",44,null],[12,"y","","",44,null],[12,"x_root","","",44,null],[12,"y_root","","",44,null],[12,"state","","",44,null],[12,"is_hint","","",44,null],[12,"same_screen","","",44,null],[3,"XNoExposeEvent","","",null,null],[12,"type_","","",45,null],[12,"serial","","",45,null],[12,"send_event","","",45,null],[12,"display","","",45,null],[12,"drawable","","",45,null],[12,"major_code","","",45,null],[12,"minor_code","","",45,null],[3,"XPropertyEvent","","",null,null],[12,"type_","","",46,null],[12,"serial","","",46,null],[12,"send_event","","",46,null],[12,"display","","",46,null],[12,"window","","",46,null],[12,"atom","","",46,null],[12,"time","","",46,null],[12,"state","","",46,null],[3,"XReparentEvent","","",null,null],[12,"type_","","",47,null],[12,"serial","","",47,null],[12,"send_event","","",47,null],[12,"display","","",47,null],[12,"event","","",47,null],[12,"window","","",47,null],[12,"parent","","",47,null],[12,"x","","",47,null],[12,"y","","",47,null],[12,"override_redirect","","",47,null],[3,"XResizeRequestEvent","","",null,null],[12,"type_","","",48,null],[12,"serial","","",48,null],[12,"send_event","","",48,null],[12,"display","","",48,null],[12,"window","","",48,null],[12,"width","","",48,null],[12,"height","","",48,null],[3,"XSelectionClearEvent","","",null,null],[12,"type_","","",49,null],[12,"serial","","",49,null],[12,"send_event","","",49,null],[12,"display","","",49,null],[12,"window","","",49,null],[12,"selection","","",49,null],[12,"time","","",49,null],[3,"XSelectionEvent","","",null,null],[12,"type_","","",50,null],[12,"serial","","",50,null],[12,"send_event","","",50,null],[12,"display","","",50,null],[12,"requestor","","",50,null],[12,"selection","","",50,null],[12,"target","","",50,null],[12,"property","","",50,null],[12,"time","","",50,null],[3,"XSelectionRequestEvent","","",null,null],[12,"type_","","",51,null],[12,"serial","","",51,null],[12,"send_event","","",51,null],[12,"display","","",51,null],[12,"owner","","",51,null],[12,"requestor","","",51,null],[12,"selection","","",51,null],[12,"target","","",51,null],[12,"property","","",51,null],[12,"time","","",51,null],[3,"XUnmapEvent","","",null,null],[12,"type_","","",52,null],[12,"serial","","",52,null],[12,"send_event","","",52,null],[12,"display","","",52,null],[12,"event","","",52,null],[12,"window","","",52,null],[12,"from_configure","","",52,null],[3,"XVisibilityEvent","","",null,null],[12,"type_","","",53,null],[12,"serial","","",53,null],[12,"send_event","","",53,null],[12,"display","","",53,null],[12,"window","","",53,null],[12,"state","","",53,null],[3,"_XkbCompatMapRec","","",null,null],[12,"sym_interpret","","",54,null],[12,"groups","","",54,null],[12,"num_si","","",54,null],[12,"size_si","","",54,null],[3,"_XkbDesc","","",null,null],[12,"dpy","","",55,null],[12,"flags","","",55,null],[12,"device_spec","","",55,null],[12,"min_key_code","","",55,null],[12,"max_key_code","","",55,null],[12,"ctrls","","",55,null],[12,"server","","",55,null],[12,"map","","",55,null],[12,"indicators","","",55,null],[12,"names","","",55,null],[12,"compat","","",55,null],[12,"geom","","",55,null],[3,"_XkbIndicatorRec","","",null,null],[12,"phys_indicators","","",56,null],[12,"maps","","",56,null],[3,"_XkbKeyAliasRec","","",null,null],[12,"real","","",57,null],[12,"alias","","",57,null],[3,"_XkbKeyNameRec","","",null,null],[12,"name","","",58,null],[3,"_XkbNamesRec","","",null,null],[12,"keycodes","","",59,null],[12,"geometry","","",59,null],[12,"symbols","","",59,null],[12,"types","","",59,null],[12,"compat","","",59,null],[12,"vmods","","",59,null],[12,"indicators","","",59,null],[12,"groups","","",59,null],[12,"keys","","",59,null],[12,"key_aliases","","",59,null],[12,"radio_groups","","",59,null],[12,"phys_symbols","","",59,null],[12,"num_keys","","",59,null],[12,"num_key_aliases","","",59,null],[12,"num_rg","","",59,null],[3,"Depth","","",null,null],[12,"depth","","",60,null],[12,"nvisuals","","",60,null],[12,"visuals","","",60,null],[3,"Screen","","",null,null],[12,"ext_data","","",61,null],[12,"display","","",61,null],[12,"root","","",61,null],[12,"width","","",61,null],[12,"height","","",61,null],[12,"mwidth","","",61,null],[12,"mheight","","",61,null],[12,"ndepths","","",61,null],[12,"depths","","",61,null],[12,"root_depth","","",61,null],[12,"root_visual","","",61,null],[12,"default_gc","","",61,null],[12,"cmap","","",61,null],[12,"white_pixel","","",61,null],[12,"black_pixel","","",61,null],[12,"max_maps","","",61,null],[12,"min_maps","","",61,null],[12,"backing_store","","",61,null],[12,"save_unders","","",61,null],[12,"root_input_mask","","",61,null],[3,"ScreenFormat","","",null,null],[12,"ext_data","","",62,null],[12,"depth","","",62,null],[12,"bits_per_pixel","","",62,null],[12,"scanline_pad","","",62,null],[3,"Visual","","",null,null],[12,"ext_data","","",63,null],[12,"visualid","","",63,null],[12,"class","","",63,null],[12,"red_mask","","",63,null],[12,"green_mask","","",63,null],[12,"blue_mask","","",63,null],[12,"bits_per_rgb","","",63,null],[12,"map_entries","","",63,null],[3,"XArc","","",null,null],[12,"x","","",64,null],[12,"y","","",64,null],[12,"width","","",64,null],[12,"height","","",64,null],[12,"angle1","","",64,null],[12,"angle2","","",64,null],[3,"XChar2b","","",null,null],[12,"byte1","","",65,null],[12,"byte2","","",65,null],[3,"XCharStruct","","",null,null],[12,"lbearing","","",66,null],[12,"rbearing","","",66,null],[12,"width","","",66,null],[12,"ascent","","",66,null],[12,"descent","","",66,null],[12,"attributes","","",66,null],[3,"XClassHint","","",null,null],[12,"res_name","","",67,null],[12,"res_class","","",67,null],[3,"XColor","","",null,null],[12,"pixel","","",68,null],[12,"red","","",68,null],[12,"green","","",68,null],[12,"blue","","",68,null],[12,"flags","","",68,null],[12,"pad","","",68,null],[3,"XComposeStatus","","",null,null],[12,"compose_ptr","","",69,null],[12,"chars_matched","","",69,null],[3,"XExtCodes","","",null,null],[12,"extension","","",70,null],[12,"major_opcode","","",70,null],[12,"first_event","","",70,null],[12,"first_error","","",70,null],[3,"XExtData","","",null,null],[12,"number","","",71,null],[12,"next","","",71,null],[12,"free_private","","",71,null],[12,"private_data","","",71,null],[3,"XFontProp","","",null,null],[12,"name","","",72,null],[12,"card32","","",72,null],[3,"XFontSetExtents","","",null,null],[12,"max_ink_extent","","",73,null],[12,"max_logical_extent","","",73,null],[3,"XFontStruct","","",null,null],[12,"ext_data","","",74,null],[12,"fid","","",74,null],[12,"direction","","",74,null],[12,"min_char_or_byte2","","",74,null],[12,"max_char_or_byte2","","",74,null],[12,"min_byte1","","",74,null],[12,"max_byte1","","",74,null],[12,"all_chars_exist","","",74,null],[12,"default_char","","",74,null],[12,"n_properties","","",74,null],[12,"properties","","",74,null],[12,"min_bounds","","",74,null],[12,"max_bounds","","",74,null],[12,"per_char","","",74,null],[12,"ascent","","",74,null],[12,"descent","","",74,null],[3,"XGCValues","","",null,null],[12,"function","","",75,null],[12,"plane_mask","","",75,null],[12,"foreground","","",75,null],[12,"background","","",75,null],[12,"line_width","","",75,null],[12,"line_style","","",75,null],[12,"cap_style","","",75,null],[12,"join_style","","",75,null],[12,"fill_style","","",75,null],[12,"fill_rule","","",75,null],[12,"arc_mode","","",75,null],[12,"tile","","",75,null],[12,"stipple","","",75,null],[12,"ts_x_origin","","",75,null],[12,"ts_y_origin","","",75,null],[12,"font","","",75,null],[12,"subwindow_mode","","",75,null],[12,"graphics_exposures","","",75,null],[12,"clip_x_origin","","",75,null],[12,"clip_y_origin","","",75,null],[12,"clip_mask","","",75,null],[12,"dash_offset","","",75,null],[12,"dashes","","",75,null],[3,"XGenericEventCookie","","",null,null],[12,"type_","","",76,null],[12,"serial","","",76,null],[12,"send_event","","",76,null],[12,"display","","",76,null],[12,"extension","","",76,null],[12,"evtype","","",76,null],[12,"cookie","","",76,null],[12,"data","","",76,null],[3,"XHostAddress","","",null,null],[12,"family","","",77,null],[12,"length","","",77,null],[12,"address","","",77,null],[3,"XIconSize","","",null,null],[12,"min_width","","",78,null],[12,"min_height","","",78,null],[12,"max_width","","",78,null],[12,"max_height","","",78,null],[12,"width_inc","","",78,null],[12,"height_inc","","",78,null],[3,"XImage","","",null,null],[12,"width","","",79,null],[12,"height","","",79,null],[12,"xoffset","","",79,null],[12,"format","","",79,null],[12,"data","","",79,null],[12,"byte_order","","",79,null],[12,"bitmap_unity","","",79,null],[12,"bitmap_bit_order","","",79,null],[12,"bitmap_pad","","",79,null],[12,"depth","","",79,null],[12,"bytes_per_line","","",79,null],[12,"bits_per_pixel","","",79,null],[12,"red_mask","","",79,null],[12,"green_mask","","",79,null],[12,"blue_mask","","",79,null],[12,"obdata","","",79,null],[12,"funcs","","",79,null],[3,"XKeyboardControl","","",null,null],[12,"key_click_percent","","",80,null],[12,"bell_percent","","",80,null],[12,"bell_pitch","","",80,null],[12,"bell_duration","","",80,null],[12,"led","","",80,null],[12,"led_mode","","",80,null],[12,"key","","",80,null],[12,"auto_repeat_mode","","",80,null],[3,"XKeyboardState","","",null,null],[12,"key_click_percent","","",81,null],[12,"bell_percent","","",81,null],[12,"bell_pitch","","",81,null],[12,"bell_duration","","",81,null],[12,"led_mask","","",81,null],[12,"global_auto_repeat","","",81,null],[12,"auto_repeats","","",81,null],[3,"XmbTextItem","","",null,null],[12,"chars","","",82,null],[12,"nchars","","",82,null],[12,"delta","","",82,null],[12,"font_set","","",82,null],[3,"XModifierKeymap","","",null,null],[12,"max_keypermod","","",83,null],[12,"modifiermap","","",83,null],[3,"XOMCharSetList","","",null,null],[12,"charset_count","","",84,null],[12,"charset_list","","",84,null],[3,"XPixmapFormatValues","","",null,null],[12,"depth","","",85,null],[12,"bits_per_pixel","","",85,null],[12,"scanline_pad","","",85,null],[3,"XPoint","","",null,null],[12,"x","","",86,null],[12,"y","","",86,null],[3,"XRectangle","","",null,null],[12,"x","","",87,null],[12,"y","","",87,null],[12,"width","","",87,null],[12,"height","","",87,null],[3,"XrmOptionDescRec","","",null,null],[12,"option","","",88,null],[12,"specifier","","",88,null],[12,"argKind","","",88,null],[12,"value","","",88,null],[3,"XrmValue","","",null,null],[12,"size","","",89,null],[12,"addr","","",89,null],[3,"XSegment","","",null,null],[12,"x1","","",90,null],[12,"y1","","",90,null],[12,"x2","","",90,null],[12,"y2","","",90,null],[3,"XSetWindowAttributes","","",null,null],[12,"background_pixmap","","",91,null],[12,"background_pixel","","",91,null],[12,"border_pixmap","","",91,null],[12,"border_pixel","","",91,null],[12,"bit_gravity","","",91,null],[12,"win_gravity","","",91,null],[12,"backing_store","","",91,null],[12,"backing_planes","","",91,null],[12,"backing_pixel","","",91,null],[12,"save_under","","",91,null],[12,"event_mask","","",91,null],[12,"do_not_propagate_mask","","",91,null],[12,"override_redirect","","",91,null],[12,"colormap","","",91,null],[12,"cursor","","",91,null],[3,"XSizeHints","","",null,null],[12,"flags","","",92,null],[12,"x","","",92,null],[12,"y","","",92,null],[12,"width","","",92,null],[12,"height","","",92,null],[12,"min_width","","",92,null],[12,"min_height","","",92,null],[12,"max_width","","",92,null],[12,"max_height","","",92,null],[12,"width_inc","","",92,null],[12,"height_inc","","",92,null],[12,"min_aspect","","",92,null],[12,"max_aspect","","",92,null],[12,"base_width","","",92,null],[12,"base_height","","",92,null],[12,"win_gravity","","",92,null],[3,"XStandardColormap","","",null,null],[12,"colormap","","",93,null],[12,"red_max","","",93,null],[12,"red_mult","","",93,null],[12,"green_max","","",93,null],[12,"green_mult","","",93,null],[12,"blue_max","","",93,null],[12,"blue_mult","","",93,null],[12,"base_pixel","","",93,null],[12,"visualid","","",93,null],[12,"killid","","",93,null],[3,"XTextItem","","",null,null],[12,"chars","","",94,null],[12,"nchars","","",94,null],[12,"delta","","",94,null],[12,"font","","",94,null],[3,"XTextItem16","","",null,null],[12,"chars","","",95,null],[12,"nchars","","",95,null],[12,"delta","","",95,null],[12,"font","","",95,null],[3,"XTextProperty","","",null,null],[12,"value","","",96,null],[12,"encoding","","",96,null],[12,"format","","",96,null],[12,"nitems","","",96,null],[3,"XTimeCoord","","",null,null],[12,"time","","",97,null],[12,"x","","",97,null],[12,"y","","",97,null],[3,"XVisualInfo","","",null,null],[12,"visual","","",98,null],[12,"visualid","","",98,null],[12,"screen","","",98,null],[12,"depth","","",98,null],[12,"class","","",98,null],[12,"red_mask","","",98,null],[12,"green_mask","","",98,null],[12,"blue_mask","","",98,null],[12,"colormap_size","","",98,null],[12,"bits_per_rgb","","",98,null],[3,"XwcTextItem","","",null,null],[12,"chars","","",99,null],[12,"nchars","","",99,null],[12,"delta","","",99,null],[12,"font_set","","",99,null],[3,"XWindowAttributes","","",null,null],[12,"x","","",100,null],[12,"y","","",100,null],[12,"width","","",100,null],[12,"height","","",100,null],[12,"border_width","","",100,null],[12,"depth","","",100,null],[12,"visual","","",100,null],[12,"root","","",100,null],[12,"class","","",100,null],[12,"bit_gravity","","",100,null],[12,"win_gravity","","",100,null],[12,"backing_store","","",100,null],[12,"backing_planes","","",100,null],[12,"backing_pixel","","",100,null],[12,"save_under","","",100,null],[12,"colormap","","",100,null],[12,"map_installed","","",100,null],[12,"map_state","","",100,null],[12,"all_event_masks","","",100,null],[12,"your_event_mask","","",100,null],[12,"do_not_propagate_mask","","",100,null],[12,"override_redirect","","",100,null],[12,"screen","","",100,null],[3,"XWindowChanges","","",null,null],[12,"x","","",101,null],[12,"y","","",101,null],[12,"width","","",101,null],[12,"height","","",101,null],[12,"border_width","","",101,null],[12,"sibling","","",101,null],[12,"stack_mode","","",101,null],[3,"XWMHints","","",null,null],[12,"flags","","",102,null],[12,"input","","",102,null],[12,"initial_state","","",102,null],[12,"icon_pixmap","","",102,null],[12,"icon_window","","",102,null],[12,"icon_x","","",102,null],[12,"icon_y","","",102,null],[12,"icon_mask","","",102,null],[12,"window_group","","",102,null],[3,"AspectRatio","","",null,null],[12,"x","","",103,null],[12,"y","","",103,null],[3,"ClientMessageData","","",null,null],[3,"ImageFns","","",null,null],[12,"create_image","","",104,null],[12,"destroy_image","","",104,null],[12,"get_pixel","","",104,null],[12,"put_pixel","","",104,null],[12,"sub_image","","",104,null],[12,"add_pixel","","",104,null],[4,"_XDisplay","","",null,null],[4,"xError","","",null,null],[4,"xEvent","","",null,null],[4,"_XGC","","",null,null],[4,"_XIC","","",null,null],[4,"_XIM","","",null,null],[4,"_XRegion","","",null,null],[4,"_XOC","","",null,null],[4,"_XOM","","",null,null],[4,"_XrmHashBucketRec","","",null,null],[6,"Atom","","",null,null],[6,"Bool","","",null,null],[6,"Colormap","","",null,null],[6,"Cursor","","",null,null],[6,"Drawable","","",null,null],[6,"Font","","",null,null],[6,"GContext","","",null,null],[6,"KeyCode","","",null,null],[6,"KeySym","","",null,null],[6,"Mask","","",null,null],[6,"Pixmap","","",null,null],[6,"Status","","",null,null],[6,"Time","","",null,null],[6,"VisualID","","",null,null],[6,"Window","","",null,null],[6,"XID","","",null,null],[6,"XPointer","","",null,null],[6,"XEDataObject","","",null,null],[6,"Display","","",null,null],[6,"GC","","",null,null],[6,"Region","","",null,null],[6,"XcmsCCC","","",null,null],[6,"XcmsColorSpace","","",null,null],[6,"XcmsFunctionSet","","",null,null],[6,"XFontSet","","",null,null],[6,"XIC","","",null,null],[6,"XIM","","",null,null],[6,"XkbAction","","",null,null],[6,"XkbBoundsPtr","","",null,null],[6,"XkbChangesPtr","","",null,null],[6,"XkbClientMapPtr","","",null,null],[6,"XkbColorPtr","","",null,null],[6,"XkbCompatMapPtr","","",null,null],[6,"XkbComponentListPtr","","",null,null],[6,"XkbComponentNamesPtr","","",null,null],[6,"XkbControlsChangesPtr","","",null,null],[6,"XkbControlsNotifyEvent","","",null,null],[6,"XkbControlsPtr","","",null,null],[6,"XkbDescPtr","","",null,null],[6,"XkbDeviceChangesPtr","","",null,null],[6,"XkbDeviceInfoPtr","","",null,null],[6,"XkbDeviceLedInfoPtr","","",null,null],[6,"XkbDoodadPtr","","",null,null],[6,"XkbExtensionDeviceNotifyEvent","","",null,null],[6,"XkbGeometryPtr","","",null,null],[6,"XkbGeometrySizesPtr","","",null,null],[6,"XkbIndicatorMapPtr","","",null,null],[6,"XkbIndicatorMapRec","","",null,null],[6,"XkbIndicatorPtr","","",null,null],[6,"XkbKeyTypePtr","","",null,null],[6,"XkbMapChangesPtr","","",null,null],[6,"XkbMapNotifyEvent","","",null,null],[6,"XkbModsPtr","","",null,null],[6,"XkbModsRec","","",null,null],[6,"XkbNameChangesPtr","","",null,null],[6,"XkbNamesNotifyEvent","","",null,null],[6,"XkbNamesPtr","","",null,null],[6,"XkbKeyAliasPtr","","",null,null],[6,"XkbKeyNamePtr","","",null,null],[6,"XkbKeyPtr","","",null,null],[6,"XkbOutlinePtr","","",null,null],[6,"XkbOverlayKeyPtr","","",null,null],[6,"XkbOverlayPtr","","",null,null],[6,"XkbOverlayRowPtr","","",null,null],[6,"XkbPropertyPtr","","",null,null],[6,"XkbRowPtr","","",null,null],[6,"XkbSectionPtr","","",null,null],[6,"XkbServerMapPtr","","",null,null],[6,"XkbShapePtr","","",null,null],[6,"XkbStatePtr","","",null,null],[6,"XkbSymInterpretPtr","","",null,null],[6,"XOM","","",null,null],[6,"XrmDatabase","","",null,null],[6,"XrmOptionDescList","","",null,null],[6,"XConnectionWatchProc","","",null,null],[6,"XICCEncodingStyle","","",null,null],[6,"XOrientation","","",null,null],[6,"XrmBinding","","",null,null],[6,"XrmOptionKind","","",null,null],[6,"XButtonPressedEvent","","",null,null],[6,"XButtonReleasedEvent","","",null,null],[6,"XEnterWindowEvent","","",null,null],[6,"XLeaveWindowEvent","","",null,null],[6,"XFocusInEvent","","",null,null],[6,"XFocusOutEvent","","",null,null],[6,"XKeyPressedEvent","","",null,null],[6,"XKeyReleasedEvent","","",null,null],[6,"XPointerMovedEvent","","",null,null],[17,"AllocNone","","",null,null],[17,"AllocAll","","",null,null],[17,"XkbKeyNameLength","","",null,null],[17,"XkbNumIndicators","","",null,null],[17,"XkbNumKbdGroups","","",null,null],[17,"XkbNumVirtualMods","","",null,null],[17,"XA_PRIMARY","","",null,null],[17,"XA_SECONDARY","","",null,null],[17,"XA_ARC","","",null,null],[17,"XA_ATOM","","",null,null],[17,"XA_BITMAP","","",null,null],[17,"XA_CARDINAL","","",null,null],[17,"XA_COLORMAP","","",null,null],[17,"XA_CURSOR","","",null,null],[17,"XA_CUT_BUFFER0","","",null,null],[17,"XA_CUT_BUFFER1","","",null,null],[17,"XA_CUT_BUFFER2","","",null,null],[17,"XA_CUT_BUFFER3","","",null,null],[17,"XA_CUT_BUFFER4","","",null,null],[17,"XA_CUT_BUFFER5","","",null,null],[17,"XA_CUT_BUFFER6","","",null,null],[17,"XA_CUT_BUFFER7","","",null,null],[17,"XA_DRAWABLE","","",null,null],[17,"XA_FONT","","",null,null],[17,"XA_INTEGER","","",null,null],[17,"XA_PIXMAP","","",null,null],[17,"XA_POINT","","",null,null],[17,"XA_RECTANGLE","","",null,null],[17,"XA_RESOURCE_MANAGER","","",null,null],[17,"XA_RGB_COLOR_MAP","","",null,null],[17,"XA_RGB_BEST_MAP","","",null,null],[17,"XA_RGB_BLUE_MAP","","",null,null],[17,"XA_RGB_DEFAULT_MAP","","",null,null],[17,"XA_RGB_GRAY_MAP","","",null,null],[17,"XA_RGB_GREEN_MAP","","",null,null],[17,"XA_RGB_RED_MAP","","",null,null],[17,"XA_STRING","","",null,null],[17,"XA_VISUALID","","",null,null],[17,"XA_WINDOW","","",null,null],[17,"XA_WM_COMMAND","","",null,null],[17,"XA_WM_HINTS","","",null,null],[17,"XA_WM_CLIENT_MACHINE","","",null,null],[17,"XA_WM_ICON_NAME","","",null,null],[17,"XA_WM_ICON_SIZE","","",null,null],[17,"XA_WM_NAME","","",null,null],[17,"XA_WM_NORMAL_HINTS","","",null,null],[17,"XA_WM_SIZE_HINTS","","",null,null],[17,"XA_WM_ZOOM_HINTS","","",null,null],[17,"XA_MIN_SPACE","","",null,null],[17,"XA_NORM_SPACE","","",null,null],[17,"XA_MAX_SPACE","","",null,null],[17,"XA_END_SPACE","","",null,null],[17,"XA_SUPERSCRIPT_X","","",null,null],[17,"XA_SUPERSCRIPT_Y","","",null,null],[17,"XA_SUBSCRIPT_X","","",null,null],[17,"XA_SUBSCRIPT_Y","","",null,null],[17,"XA_UNDERLINE_POSITION","","",null,null],[17,"XA_UNDERLINE_THICKNESS","","",null,null],[17,"XA_STRIKEOUT_ASCENT","","",null,null],[17,"XA_STRIKEOUT_DESCENT","","",null,null],[17,"XA_ITALIC_ANGLE","","",null,null],[17,"XA_X_HEIGHT","","",null,null],[17,"XA_QUAD_WIDTH","","",null,null],[17,"XA_WEIGHT","","",null,null],[17,"XA_POINT_SIZE","","",null,null],[17,"XA_RESOLUTION","","",null,null],[17,"XA_COPYRIGHT","","",null,null],[17,"XA_NOTICE","","",null,null],[17,"XA_FONT_NAME","","",null,null],[17,"XA_FAMILY_NAME","","",null,null],[17,"XA_FULL_NAME","","",null,null],[17,"XA_CAP_HEIGHT","","",null,null],[17,"XA_WM_CLASS","","",null,null],[17,"XA_WM_TRANSIENT_FOR","","",null,null],[17,"False","","",null,null],[17,"True","","",null,null],[17,"Unsorted","","",null,null],[17,"YSorted","","",null,null],[17,"YXSorted","","",null,null],[17,"YXBanded","","",null,null],[17,"DoRed","","",null,null],[17,"DoGreen","","",null,null],[17,"DoBlue","","",null,null],[17,"Success","","",null,null],[17,"BadRequest","","",null,null],[17,"BadValue","","",null,null],[17,"BadWindow","","",null,null],[17,"BadPixmap","","",null,null],[17,"BadAtom","","",null,null],[17,"BadCursor","","",null,null],[17,"BadFont","","",null,null],[17,"BadMatch","","",null,null],[17,"BadDrawable","","",null,null],[17,"BadAccess","","",null,null],[17,"BadAlloc","","",null,null],[17,"BadColor","","",null,null],[17,"BadGC","","",null,null],[17,"BadIDChoice","","",null,null],[17,"BadName","","",null,null],[17,"BadLength","","",null,null],[17,"BadImplementation","","",null,null],[17,"FirstExtensionError","","",null,null],[17,"LastExtensionError","","",null,null],[17,"KeyPress","","",null,null],[17,"KeyRelease","","",null,null],[17,"ButtonPress","","",null,null],[17,"ButtonRelease","","",null,null],[17,"MotionNotify","","",null,null],[17,"EnterNotify","","",null,null],[17,"LeaveNotify","","",null,null],[17,"FocusIn","","",null,null],[17,"FocusOut","","",null,null],[17,"KeymapNotify","","",null,null],[17,"Expose","","",null,null],[17,"GraphicsExpose","","",null,null],[17,"NoExpose","","",null,null],[17,"VisibilityNotify","","",null,null],[17,"CreateNotify","","",null,null],[17,"DestroyNotify","","",null,null],[17,"UnmapNotify","","",null,null],[17,"MapNotify","","",null,null],[17,"MapRequest","","",null,null],[17,"ReparentNotify","","",null,null],[17,"ConfigureNotify","","",null,null],[17,"ConfigureRequest","","",null,null],[17,"GravityNotify","","",null,null],[17,"ResizeRequest","","",null,null],[17,"CirculateNotify","","",null,null],[17,"CirculateRequest","","",null,null],[17,"PropertyNotify","","",null,null],[17,"SelectionClear","","",null,null],[17,"SelectionRequest","","",null,null],[17,"SelectionNotify","","",null,null],[17,"ColormapNotify","","",null,null],[17,"ClientMessage","","",null,null],[17,"MappingNotify","","",null,null],[17,"NoEventMask","","",null,null],[17,"KeyPressMask","","",null,null],[17,"KeyReleaseMask","","",null,null],[17,"ButtonPressMask","","",null,null],[17,"ButtonReleaseMask","","",null,null],[17,"EnterWindowMask","","",null,null],[17,"LeaveWindowMask","","",null,null],[17,"PointerMotionMask","","",null,null],[17,"PointerMotionHintMask","","",null,null],[17,"Button1MotionMask","","",null,null],[17,"Button2MotionMask","","",null,null],[17,"Button3MotionMask","","",null,null],[17,"Button4MotionMask","","",null,null],[17,"Button5MotionMask","","",null,null],[17,"ButtonMotionMask","","",null,null],[17,"KeymapStateMask","","",null,null],[17,"ExposureMask","","",null,null],[17,"VisibilityChangeMask","","",null,null],[17,"StructureNotifyMask","","",null,null],[17,"ResizeRedirectMask","","",null,null],[17,"SubstructureNotifyMask","","",null,null],[17,"SubstructureRedirectMask","","",null,null],[17,"FocusChangeMask","","",null,null],[17,"PropertyChangeMask","","",null,null],[17,"ColormapChangeMask","","",null,null],[17,"OwnerGrabButtonMask","","",null,null],[17,"GrabModeSync","","",null,null],[17,"GrabModeAsync","","",null,null],[17,"GrabSuccess","","",null,null],[17,"AlreadyGrabbed","","",null,null],[17,"GrabInvalidTime","","",null,null],[17,"GrabNotViewable","","",null,null],[17,"GrabFrozen","","",null,null],[17,"IsUnmapped","","",null,null],[17,"IsUnviewable","","",null,null],[17,"IsViewable","","",null,null],[17,"ShiftMask","","",null,null],[17,"LockMask","","",null,null],[17,"ControlMask","","",null,null],[17,"Mod1Mask","","",null,null],[17,"Mod2Mask","","",null,null],[17,"Mod3Mask","","",null,null],[17,"Mod4Mask","","",null,null],[17,"Mod5Mask","","",null,null],[17,"Button1","","",null,null],[17,"Button2","","",null,null],[17,"Button3","","",null,null],[17,"Button4","","",null,null],[17,"Button5","","",null,null],[17,"USPosition","","",null,null],[17,"USSize","","",null,null],[17,"PPosition","","",null,null],[17,"PSize","","",null,null],[17,"PMinSize","","",null,null],[17,"PMaxSize","","",null,null],[17,"PResizeInc","","",null,null],[17,"PAspect","","",null,null],[17,"PBaseSize","","",null,null],[17,"PWinGravity","","",null,null],[17,"PAllHints","","",null,null],[17,"CurrentTime","","",null,null],[17,"StaticGray","","",null,null],[17,"GrayScale","","",null,null],[17,"StaticColor","","",null,null],[17,"PseudoColor","","",null,null],[17,"TrueColor","","",null,null],[17,"DirectColor","","",null,null],[17,"VisualNoMask","","",null,null],[17,"VisualIDMask","","",null,null],[17,"VisualScreenMask","","",null,null],[17,"VisualDepthMask","","",null,null],[17,"VisualClassMask","","",null,null],[17,"VisualRedMaskMask","","",null,null],[17,"VisualGreenMaskMask","","",null,null],[17,"VisualBlueMaskMask","","",null,null],[17,"VisualColormapSizeMask","","",null,null],[17,"VisualBitsPerRGBMask","","",null,null],[17,"VisualAllMask","","",null,null],[17,"CWBackPixmap","","",null,null],[17,"CWBackPixel","","",null,null],[17,"CWBorderPixmap","","",null,null],[17,"CWBorderPixel","","",null,null],[17,"CWBitGravity","","",null,null],[17,"CWWinGravity","","",null,null],[17,"CWBackingStore","","",null,null],[17,"CWBackingPlanes","","",null,null],[17,"CWBackingPixel","","",null,null],[17,"CWOverrideRedirect","","",null,null],[17,"CWSaveUnder","","",null,null],[17,"CWEventMask","","",null,null],[17,"CWDontPropagate","","",null,null],[17,"CWColormap","","",null,null],[17,"CWCursor","","",null,null],[17,"InputOutput","","",null,null],[17,"InputOnly","","",null,null],[17,"XIMPreeditArea","","",null,null],[17,"XIMPreeditCallbacks","","",null,null],[17,"XIMPreeditPosition","","",null,null],[17,"XIMPreeditNothing","","",null,null],[17,"XIMPreeditNone","","",null,null],[17,"XIMStatusArea","","",null,null],[17,"XIMStatusCallbacks","","",null,null],[17,"XIMStatusNothing","","",null,null],[17,"XIMStatusNone","","",null,null],[11,"open","","",21,{"inputs":[{"name":"xlib"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"xevent"},{"name":"xevent"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"xevent"}],"output":{"name":"xevent"}}],[11,"get_type","","",22,{"inputs":[{"name":"xevent"}],"output":{"name":"c_int"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xanyevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xbuttonevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xcirculateevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xclientmessageevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xcolormapevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xconfigureevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xcreatewindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xcrossingevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xdestroywindowevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xerrorevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xfocuschangeevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xgravityevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xkeyevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xkeymapevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xmappingevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xmotionevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xnoexposeevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xpropertyevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xreparentevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xresizerequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xselectionclearevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xselectionevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xselectionrequestevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xunmapevent"}],"output":{"name":"xevent"}}],[11,"from","","",22,{"inputs":[{"name":"xevent"},{"name":"xvisibilityevent"}],"output":{"name":"xevent"}}],[11,"eq","","",23,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"xanyevent"},{"name":"xanyevent"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"xanyevent"}],"output":{"name":"xanyevent"}}],[11,"from","","",23,{"inputs":[{"name":"xanyevent"},{"name":"xevent"}],"output":{"name":"xanyevent"}}],[11,"eq","","",24,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"xbuttonevent"},{"name":"xbuttonevent"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"xbuttonevent"}],"output":{"name":"xbuttonevent"}}],[11,"from","","",24,{"inputs":[{"name":"xbuttonevent"},{"name":"xevent"}],"output":{"name":"xbuttonevent"}}],[11,"eq","","",25,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"xcirculateevent"},{"name":"xcirculateevent"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"xcirculateevent"}],"output":{"name":"xcirculateevent"}}],[11,"from","","",25,{"inputs":[{"name":"xcirculateevent"},{"name":"xevent"}],"output":{"name":"xcirculateevent"}}],[11,"eq","","",26,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xcirculaterequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"xcirculaterequestevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"from","","",26,{"inputs":[{"name":"xcirculaterequestevent"},{"name":"xevent"}],"output":{"name":"xcirculaterequestevent"}}],[11,"eq","","",27,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"xclientmessageevent"},{"name":"xclientmessageevent"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"xclientmessageevent"}],"output":{"name":"xclientmessageevent"}}],[11,"from","","",27,{"inputs":[{"name":"xclientmessageevent"},{"name":"xevent"}],"output":{"name":"xclientmessageevent"}}],[11,"eq","","",28,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"xcolormapevent"},{"name":"xcolormapevent"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"xcolormapevent"}],"output":{"name":"xcolormapevent"}}],[11,"from","","",28,{"inputs":[{"name":"xcolormapevent"},{"name":"xevent"}],"output":{"name":"xcolormapevent"}}],[11,"eq","","",29,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"xconfigureevent"},{"name":"xconfigureevent"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"xconfigureevent"}],"output":{"name":"xconfigureevent"}}],[11,"from","","",29,{"inputs":[{"name":"xconfigureevent"},{"name":"xevent"}],"output":{"name":"xconfigureevent"}}],[11,"eq","","",30,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xconfigurerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"xconfigurerequestevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"from","","",30,{"inputs":[{"name":"xconfigurerequestevent"},{"name":"xevent"}],"output":{"name":"xconfigurerequestevent"}}],[11,"eq","","",31,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xcreatewindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"xcreatewindowevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"from","","",31,{"inputs":[{"name":"xcreatewindowevent"},{"name":"xevent"}],"output":{"name":"xcreatewindowevent"}}],[11,"eq","","",32,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"xcrossingevent"},{"name":"xcrossingevent"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"xcrossingevent"}],"output":{"name":"xcrossingevent"}}],[11,"from","","",32,{"inputs":[{"name":"xcrossingevent"},{"name":"xevent"}],"output":{"name":"xcrossingevent"}}],[11,"eq","","",33,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xdestroywindowevent"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"xdestroywindowevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"from","","",33,{"inputs":[{"name":"xdestroywindowevent"},{"name":"xevent"}],"output":{"name":"xdestroywindowevent"}}],[11,"eq","","",34,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"xerrorevent"},{"name":"xerrorevent"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"xerrorevent"}],"output":{"name":"xerrorevent"}}],[11,"from","","",34,{"inputs":[{"name":"xerrorevent"},{"name":"xevent"}],"output":{"name":"xerrorevent"}}],[11,"eq","","",35,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"xexposeevent"},{"name":"xexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"xexposeevent"}],"output":{"name":"xexposeevent"}}],[11,"from","","",35,{"inputs":[{"name":"xexposeevent"},{"name":"xevent"}],"output":{"name":"xexposeevent"}}],[11,"eq","","",36,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xfocuschangeevent"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"xfocuschangeevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"from","","",36,{"inputs":[{"name":"xfocuschangeevent"},{"name":"xevent"}],"output":{"name":"xfocuschangeevent"}}],[11,"eq","","",37,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xgraphicsexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"xgraphicsexposeevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"from","","",37,{"inputs":[{"name":"xgraphicsexposeevent"},{"name":"xevent"}],"output":{"name":"xgraphicsexposeevent"}}],[11,"eq","","",38,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"xgravityevent"},{"name":"xgravityevent"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"xgravityevent"}],"output":{"name":"xgravityevent"}}],[11,"from","","",38,{"inputs":[{"name":"xgravityevent"},{"name":"xevent"}],"output":{"name":"xgravityevent"}}],[11,"eq","","",39,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"xkeyevent"},{"name":"xkeyevent"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"xkeyevent"}],"output":{"name":"xkeyevent"}}],[11,"from","","",39,{"inputs":[{"name":"xkeyevent"},{"name":"xevent"}],"output":{"name":"xkeyevent"}}],[11,"eq","","",40,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"xkeymapevent"},{"name":"xkeymapevent"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"xkeymapevent"}],"output":{"name":"xkeymapevent"}}],[11,"from","","",40,{"inputs":[{"name":"xkeymapevent"},{"name":"xevent"}],"output":{"name":"xkeymapevent"}}],[11,"eq","","",41,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"xmapevent"},{"name":"xmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"xmapevent"}],"output":{"name":"xmapevent"}}],[11,"from","","",41,{"inputs":[{"name":"xmapevent"},{"name":"xevent"}],"output":{"name":"xmapevent"}}],[11,"eq","","",42,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"xmappingevent"},{"name":"xmappingevent"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"xmappingevent"}],"output":{"name":"xmappingevent"}}],[11,"from","","",42,{"inputs":[{"name":"xmappingevent"},{"name":"xevent"}],"output":{"name":"xmappingevent"}}],[11,"eq","","",43,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"xmaprequestevent"},{"name":"xmaprequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"xmaprequestevent"}],"output":{"name":"xmaprequestevent"}}],[11,"from","","",43,{"inputs":[{"name":"xmaprequestevent"},{"name":"xevent"}],"output":{"name":"xmaprequestevent"}}],[11,"eq","","",44,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"xmotionevent"},{"name":"xmotionevent"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"xmotionevent"}],"output":{"name":"xmotionevent"}}],[11,"from","","",44,{"inputs":[{"name":"xmotionevent"},{"name":"xevent"}],"output":{"name":"xmotionevent"}}],[11,"eq","","",45,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"xnoexposeevent"},{"name":"xnoexposeevent"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"xnoexposeevent"}],"output":{"name":"xnoexposeevent"}}],[11,"from","","",45,{"inputs":[{"name":"xnoexposeevent"},{"name":"xevent"}],"output":{"name":"xnoexposeevent"}}],[11,"eq","","",46,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"xpropertyevent"},{"name":"xpropertyevent"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"xpropertyevent"}],"output":{"name":"xpropertyevent"}}],[11,"from","","",46,{"inputs":[{"name":"xpropertyevent"},{"name":"xevent"}],"output":{"name":"xpropertyevent"}}],[11,"eq","","",47,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"xreparentevent"},{"name":"xreparentevent"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"xreparentevent"}],"output":{"name":"xreparentevent"}}],[11,"from","","",47,{"inputs":[{"name":"xreparentevent"},{"name":"xevent"}],"output":{"name":"xreparentevent"}}],[11,"eq","","",48,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"xresizerequestevent"},{"name":"xresizerequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"xresizerequestevent"}],"output":{"name":"xresizerequestevent"}}],[11,"from","","",48,{"inputs":[{"name":"xresizerequestevent"},{"name":"xevent"}],"output":{"name":"xresizerequestevent"}}],[11,"eq","","",49,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"xselectionclearevent"},{"name":"xselectionclearevent"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"xselectionclearevent"}],"output":{"name":"xselectionclearevent"}}],[11,"from","","",49,{"inputs":[{"name":"xselectionclearevent"},{"name":"xevent"}],"output":{"name":"xselectionclearevent"}}],[11,"eq","","",50,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"xselectionevent"},{"name":"xselectionevent"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"xselectionevent"}],"output":{"name":"xselectionevent"}}],[11,"from","","",50,{"inputs":[{"name":"xselectionevent"},{"name":"xevent"}],"output":{"name":"xselectionevent"}}],[11,"eq","","",51,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xselectionrequestevent"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"xselectionrequestevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"from","","",51,{"inputs":[{"name":"xselectionrequestevent"},{"name":"xevent"}],"output":{"name":"xselectionrequestevent"}}],[11,"eq","","",52,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"xunmapevent"},{"name":"xunmapevent"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"xunmapevent"}],"output":{"name":"xunmapevent"}}],[11,"from","","",52,{"inputs":[{"name":"xunmapevent"},{"name":"xevent"}],"output":{"name":"xunmapevent"}}],[11,"eq","","",53,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"xvisibilityevent"},{"name":"xvisibilityevent"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"xvisibilityevent"}],"output":{"name":"xvisibilityevent"}}],[11,"from","","",53,{"inputs":[{"name":"xvisibilityevent"},{"name":"xevent"}],"output":{"name":"xvisibilityevent"}}],[11,"eq","","",55,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"_xkbdesc"},{"name":"_xkbdesc"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"_xkbdesc"}],"output":{"name":"_xkbdesc"}}],[11,"eq","","",57,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"_xkbkeyaliasrec"},{"name":"_xkbkeyaliasrec"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"_xkbkeyaliasrec"}],"output":{"name":"_xkbkeyaliasrec"}}],[11,"eq","","",58,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"_xkbkeynamerec"},{"name":"_xkbkeynamerec"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"_xkbkeynamerec"}],"output":{"name":"_xkbkeynamerec"}}],[11,"eq","","",59,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"_xkbnamesrec"},{"name":"_xkbnamesrec"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"_xkbnamesrec"}],"output":{"name":"_xkbnamesrec"}}],[11,"eq","","",60,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"eq","","",61,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"screen"},{"name":"screen"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"screen"}],"output":{"name":"screen"}}],[11,"eq","","",62,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"screenformat"},{"name":"screenformat"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"screenformat"}],"output":{"name":"screenformat"}}],[11,"eq","","",63,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"visual"},{"name":"visual"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"visual"}],"output":{"name":"visual"}}],[11,"eq","","",64,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"xarc"},{"name":"xarc"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"xarc"}],"output":{"name":"xarc"}}],[11,"eq","","",65,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"xchar2b"},{"name":"xchar2b"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"xchar2b"}],"output":{"name":"xchar2b"}}],[11,"eq","","",66,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"xcharstruct"},{"name":"xcharstruct"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"xcharstruct"}],"output":{"name":"xcharstruct"}}],[11,"eq","","",67,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"xclasshint"},{"name":"xclasshint"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"xclasshint"}],"output":{"name":"xclasshint"}}],[11,"eq","","",68,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"xcolor"},{"name":"xcolor"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"xcolor"}],"output":{"name":"xcolor"}}],[11,"eq","","",69,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"xcomposestatus"},{"name":"xcomposestatus"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"xcomposestatus"}],"output":{"name":"xcomposestatus"}}],[11,"eq","","",70,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"xextcodes"},{"name":"xextcodes"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"xextcodes"}],"output":{"name":"xextcodes"}}],[11,"eq","","",72,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"xfontprop"},{"name":"xfontprop"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"xfontprop"}],"output":{"name":"xfontprop"}}],[11,"eq","","",73,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"xfontsetextents"},{"name":"xfontsetextents"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"xfontsetextents"}],"output":{"name":"xfontsetextents"}}],[11,"eq","","",74,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"xfontstruct"},{"name":"xfontstruct"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"xfontstruct"}],"output":{"name":"xfontstruct"}}],[11,"eq","","",75,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"xgcvalues"},{"name":"xgcvalues"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"xgcvalues"}],"output":{"name":"xgcvalues"}}],[11,"eq","","",76,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"xgenericeventcookie"},{"name":"xgenericeventcookie"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"xgenericeventcookie"}],"output":{"name":"xgenericeventcookie"}}],[11,"eq","","",77,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"xhostaddress"},{"name":"xhostaddress"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"xhostaddress"}],"output":{"name":"xhostaddress"}}],[11,"eq","","",78,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"xiconsize"},{"name":"xiconsize"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"xiconsize"}],"output":{"name":"xiconsize"}}],[11,"eq","","",79,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"ximage"},{"name":"ximage"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"ximage"}],"output":{"name":"ximage"}}],[11,"eq","","",80,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"xkeyboardcontrol"},{"name":"xkeyboardcontrol"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"xkeyboardcontrol"}],"output":{"name":"xkeyboardcontrol"}}],[11,"eq","","",81,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"xkeyboardstate"},{"name":"xkeyboardstate"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"xkeyboardstate"}],"output":{"name":"xkeyboardstate"}}],[11,"eq","","",82,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"xmbtextitem"},{"name":"xmbtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"xmbtextitem"}],"output":{"name":"xmbtextitem"}}],[11,"eq","","",83,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"xmodifierkeymap"},{"name":"xmodifierkeymap"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"xmodifierkeymap"}],"output":{"name":"xmodifierkeymap"}}],[11,"eq","","",84,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"xomcharsetlist"},{"name":"xomcharsetlist"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"xomcharsetlist"}],"output":{"name":"xomcharsetlist"}}],[11,"eq","","",85,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"xpixmapformatvalues"},{"name":"xpixmapformatvalues"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"xpixmapformatvalues"}],"output":{"name":"xpixmapformatvalues"}}],[11,"eq","","",86,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"xpoint"},{"name":"xpoint"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"xpoint"}],"output":{"name":"xpoint"}}],[11,"eq","","",87,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"xrectangle"},{"name":"xrectangle"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"xrectangle"}],"output":{"name":"xrectangle"}}],[11,"eq","","",88,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"xrmoptiondescrec"},{"name":"xrmoptiondescrec"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"xrmoptiondescrec"}],"output":{"name":"xrmoptiondescrec"}}],[11,"eq","","",89,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"xrmvalue"},{"name":"xrmvalue"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"xrmvalue"}],"output":{"name":"xrmvalue"}}],[11,"eq","","",90,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"xsegment"},{"name":"xsegment"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"xsegment"}],"output":{"name":"xsegment"}}],[11,"eq","","",91,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"xsetwindowattributes"},{"name":"xsetwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"xsetwindowattributes"}],"output":{"name":"xsetwindowattributes"}}],[11,"eq","","",92,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"xsizehints"},{"name":"xsizehints"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"xsizehints"}],"output":{"name":"xsizehints"}}],[11,"eq","","",93,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"xstandardcolormap"},{"name":"xstandardcolormap"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"xstandardcolormap"}],"output":{"name":"xstandardcolormap"}}],[11,"eq","","",94,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"xtextitem"},{"name":"xtextitem"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"xtextitem"}],"output":{"name":"xtextitem"}}],[11,"eq","","",95,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"xtextitem16"},{"name":"xtextitem16"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"xtextitem16"}],"output":{"name":"xtextitem16"}}],[11,"eq","","",96,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"xtextproperty"},{"name":"xtextproperty"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"xtextproperty"}],"output":{"name":"xtextproperty"}}],[11,"eq","","",97,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"xtimecoord"},{"name":"xtimecoord"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"xtimecoord"}],"output":{"name":"xtimecoord"}}],[11,"eq","","",98,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"xvisualinfo"},{"name":"xvisualinfo"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"xvisualinfo"}],"output":{"name":"xvisualinfo"}}],[11,"eq","","",99,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"xwctextitem"},{"name":"xwctextitem"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"xwctextitem"}],"output":{"name":"xwctextitem"}}],[11,"eq","","",100,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"xwindowattributes"},{"name":"xwindowattributes"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"xwindowattributes"}],"output":{"name":"xwindowattributes"}}],[11,"eq","","",101,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"xwindowchanges"},{"name":"xwindowchanges"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"xwindowchanges"}],"output":{"name":"xwindowchanges"}}],[11,"eq","","",102,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"xwmhints"},{"name":"xwmhints"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"xwmhints"}],"output":{"name":"xwmhints"}}],[11,"eq","","",103,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"aspectratio"},{"name":"aspectratio"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"aspectratio"}],"output":{"name":"aspectratio"}}],[11,"eq","","",105,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"clientmessagedata"},{"name":"clientmessagedata"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"clientmessagedata"}],"output":{"name":"clientmessagedata"}}],[11,"get_byte","","",105,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_char"}}],[11,"get_long","","",105,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_long"}}],[11,"get_short","","",105,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"}],"output":{"name":"c_short"}}],[11,"set_byte","","",105,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_char"}],"output":null}],[11,"set_long","","",105,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_long"}],"output":null}],[11,"set_short","","",105,{"inputs":[{"name":"clientmessagedata"},{"name":"usize"},{"name":"c_short"}],"output":null}],[11,"clone","","",104,{"inputs":[{"name":"imagefns"}],"output":{"name":"imagefns"}}],[11,"eq","","",104,{"inputs":[{"name":"imagefns"},{"name":"imagefns"}],"output":{"name":"bool"}}],[0,"xrender","x11_dl","",null,null],[3,"Xrender","x11_dl::xrender","",null,null],[12,"XRenderAddGlyphs","","",106,null],[12,"XRenderAddTraps","","",106,null],[12,"XRenderChangePicture","","",106,null],[12,"XRenderComposite","","",106,null],[12,"XRenderCompositeDoublePoly","","",106,null],[12,"XRenderCompositeString16","","",106,null],[12,"XRenderCompositeString32","","",106,null],[12,"XRenderCompositeString8","","",106,null],[12,"XRenderCompositeText16","","",106,null],[12,"XRenderCompositeText32","","",106,null],[12,"XRenderCompositeText8","","",106,null],[12,"XRenderCompositeTrapezoids","","",106,null],[12,"XRenderCompositeTriangles","","",106,null],[12,"XRenderCompositeTriFan","","",106,null],[12,"XRenderCompositeTriStrip","","",106,null],[12,"XRenderCreateAnimCursor","","",106,null],[12,"XRenderCreateConicalGradient","","",106,null],[12,"XRenderCreateCursor","","",106,null],[12,"XRenderCreateGlyphSet","","",106,null],[12,"XRenderCreateLinearGradient","","",106,null],[12,"XRenderCreatePicture","","",106,null],[12,"XRenderCreateRadialGradient","","",106,null],[12,"XRenderCreateSolidFill","","",106,null],[12,"XRenderFillRectangle","","",106,null],[12,"XRenderFillRectangles","","",106,null],[12,"XRenderFindFormat","","",106,null],[12,"XRenderFindStandardFormat","","",106,null],[12,"XRenderFindVisualFormat","","",106,null],[12,"XRenderFreeGlyphs","","",106,null],[12,"XRenderFreeGlyphSet","","",106,null],[12,"XRenderFreePicture","","",106,null],[12,"XRenderParseColor","","",106,null],[12,"XRenderQueryExtension","","",106,null],[12,"XRenderQueryFilters","","",106,null],[12,"XRenderQueryFormats","","",106,null],[12,"XRenderQueryPictIndexValues","","",106,null],[12,"XRenderQuerySubpixelOrder","","",106,null],[12,"XRenderQueryVersion","","",106,null],[12,"XRenderReferenceGlyphSet","","",106,null],[12,"XRenderSetPictureClipRectangles","","",106,null],[12,"XRenderSetPictureClipRegion","","",106,null],[12,"XRenderSetPictureFilter","","",106,null],[12,"XRenderSetPictureTransform","","",106,null],[12,"XRenderSetSubpixelOrder","","",106,null],[3,"_XAnimCursor","","",null,null],[12,"cursor","","",107,null],[12,"delay","","",107,null],[3,"_XCircle","","",null,null],[12,"x","","",108,null],[12,"y","","",108,null],[12,"radius","","",108,null],[3,"_XConicalGradient","","",null,null],[12,"center","","",109,null],[12,"angle","","",109,null],[3,"_XFilters","","",null,null],[12,"nfilter","","",110,null],[12,"filter","","",110,null],[12,"nalias","","",110,null],[12,"alias","","",110,null],[3,"_XGlyphElt8","","",null,null],[12,"glyphset","","",111,null],[12,"chars","","",111,null],[12,"nchars","","",111,null],[12,"xOff","","",111,null],[12,"yOff","","",111,null],[3,"_XGlyphElt16","","",null,null],[12,"glyphset","","",112,null],[12,"chars","","",112,null],[12,"nchars","","",112,null],[12,"xOff","","",112,null],[12,"yOff","","",112,null],[3,"_XGlyphElt32","","",null,null],[12,"glyphset","","",113,null],[12,"chars","","",113,null],[12,"nchars","","",113,null],[12,"xOff","","",113,null],[12,"yOff","","",113,null],[3,"_XGlyphInfo","","",null,null],[12,"width","","",114,null],[12,"height","","",114,null],[12,"x","","",114,null],[12,"y","","",114,null],[12,"xOff","","",114,null],[12,"yOff","","",114,null],[3,"_XIndexValue","","",null,null],[12,"pixel","","",115,null],[12,"red","","",115,null],[12,"green","","",115,null],[12,"blue","","",115,null],[12,"alpha","","",115,null],[3,"_XLinearGradient","","",null,null],[12,"p1","","",116,null],[12,"p2","","",116,null],[3,"_XLineFixed","","",null,null],[12,"p1","","",117,null],[12,"p2","","",117,null],[3,"_XPointDouble","","",null,null],[12,"x","","",118,null],[12,"y","","",118,null],[3,"_XPointFixed","","",null,null],[12,"x","","",119,null],[12,"y","","",119,null],[3,"_XRadialGradient","","",null,null],[12,"inner","","",120,null],[12,"outer","","",120,null],[3,"XRenderColor","","",null,null],[12,"red","","",121,null],[12,"green","","",121,null],[12,"blue","","",121,null],[12,"alpha","","",121,null],[3,"XRenderDirectFormat","","",null,null],[12,"red","","",122,null],[12,"redMask","","",122,null],[12,"green","","",122,null],[12,"greenMask","","",122,null],[12,"blue","","",122,null],[12,"blueMask","","",122,null],[12,"alpha","","",122,null],[12,"alphaMask","","",122,null],[3,"XRenderPictFormat","","",null,null],[12,"id","","",123,null],[12,"type_","","",123,null],[12,"depth","","",123,null],[12,"direct","","",123,null],[12,"colormap","","",123,null],[3,"_XRenderPictureAttributes","","",null,null],[12,"repeat","","",124,null],[12,"alpha_map","","",124,null],[12,"alpha_x_origin","","",124,null],[12,"alpha_y_origin","","",124,null],[12,"clip_x_origin","","",124,null],[12,"clip_y_origin","","",124,null],[12,"clip_mask","","",124,null],[12,"graphics_exposures","","",124,null],[12,"subwindow_mode","","",124,null],[12,"poly_edge","","",124,null],[12,"poly_mode","","",124,null],[12,"dither","","",124,null],[12,"component_alpha","","",124,null],[3,"_XSpanFix","","",null,null],[12,"left","","",125,null],[12,"right","","",125,null],[12,"y","","",125,null],[3,"_XTrap","","",null,null],[12,"top","","",126,null],[12,"bottom","","",126,null],[3,"_XTrapezoid","","",null,null],[12,"top","","",127,null],[12,"bottom","","",127,null],[12,"left","","",127,null],[12,"right","","",127,null],[3,"_XTriangle","","",null,null],[12,"p1","","",128,null],[12,"p2","","",128,null],[12,"p3","","",128,null],[3,"_XTransform","","",null,null],[12,"matrix","","",129,null],[6,"Glyph","","",null,null],[6,"GlyphSet","","",null,null],[6,"PictFormat","","",null,null],[6,"Picture","","",null,null],[6,"XDouble","","",null,null],[6,"XFixed","","",null,null],[6,"XAnimCursor","","",null,null],[6,"XCircle","","",null,null],[6,"XConicalGradient","","",null,null],[6,"XFilters","","",null,null],[6,"XGlyphElt8","","",null,null],[6,"XGlyphElt16","","",null,null],[6,"XGlyphElt32","","",null,null],[6,"XGlyphInfo","","",null,null],[6,"XIndexValue","","",null,null],[6,"XLinearGradient","","",null,null],[6,"XLineFixed","","",null,null],[6,"XPointDouble","","",null,null],[6,"XPointFixed","","",null,null],[6,"XRadialGradient","","",null,null],[6,"XRenderPictureAttributes","","",null,null],[6,"XSpanFix","","",null,null],[6,"XTrap","","",null,null],[6,"XTrapezoid","","",null,null],[6,"XTriangle","","",null,null],[6,"XTransform","","",null,null],[11,"open","","",106,{"inputs":[{"name":"xrender"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"_xanimcursor"}],"output":{"name":"_xanimcursor"}}],[11,"clone","","",108,{"inputs":[{"name":"_xcircle"}],"output":{"name":"_xcircle"}}],[11,"clone","","",109,{"inputs":[{"name":"_xconicalgradient"}],"output":{"name":"_xconicalgradient"}}],[11,"clone","","",110,{"inputs":[{"name":"_xfilters"}],"output":{"name":"_xfilters"}}],[11,"clone","","",111,{"inputs":[{"name":"_xglyphelt8"}],"output":{"name":"_xglyphelt8"}}],[11,"clone","","",112,{"inputs":[{"name":"_xglyphelt16"}],"output":{"name":"_xglyphelt16"}}],[11,"clone","","",113,{"inputs":[{"name":"_xglyphelt32"}],"output":{"name":"_xglyphelt32"}}],[11,"clone","","",114,{"inputs":[{"name":"_xglyphinfo"}],"output":{"name":"_xglyphinfo"}}],[11,"clone","","",115,{"inputs":[{"name":"_xindexvalue"}],"output":{"name":"_xindexvalue"}}],[11,"clone","","",116,{"inputs":[{"name":"_xlineargradient"}],"output":{"name":"_xlineargradient"}}],[11,"clone","","",117,{"inputs":[{"name":"_xlinefixed"}],"output":{"name":"_xlinefixed"}}],[11,"clone","","",118,{"inputs":[{"name":"_xpointdouble"}],"output":{"name":"_xpointdouble"}}],[11,"clone","","",119,{"inputs":[{"name":"_xpointfixed"}],"output":{"name":"_xpointfixed"}}],[11,"clone","","",120,{"inputs":[{"name":"_xradialgradient"}],"output":{"name":"_xradialgradient"}}],[11,"clone","","",121,{"inputs":[{"name":"xrendercolor"}],"output":{"name":"xrendercolor"}}],[11,"clone","","",122,{"inputs":[{"name":"xrenderdirectformat"}],"output":{"name":"xrenderdirectformat"}}],[11,"clone","","",123,{"inputs":[{"name":"xrenderpictformat"}],"output":{"name":"xrenderpictformat"}}],[11,"clone","","",124,{"inputs":[{"name":"_xrenderpictureattributes"}],"output":{"name":"_xrenderpictureattributes"}}],[11,"clone","","",125,{"inputs":[{"name":"_xspanfix"}],"output":{"name":"_xspanfix"}}],[11,"clone","","",126,{"inputs":[{"name":"_xtrap"}],"output":{"name":"_xtrap"}}],[11,"clone","","",127,{"inputs":[{"name":"_xtrapezoid"}],"output":{"name":"_xtrapezoid"}}],[11,"clone","","",128,{"inputs":[{"name":"_xtriangle"}],"output":{"name":"_xtriangle"}}],[11,"clone","","",129,{"inputs":[{"name":"_xtransform"}],"output":{"name":"_xtransform"}}]],"paths":[[4,"OpenErrorKind"],[3,"OpenError"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeNotifyEvent"],[3,"XF86VidModeSyncRange"],[3,"Xlib"],[3,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbCompatMapRec"],[3,"_XkbDesc"],[3,"_XkbIndicatorRec"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XExtData"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"AspectRatio"],[3,"ImageFns"],[3,"ClientMessageData"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"]]};
searchIndex['conrod'] = {"items":[[0,"","conrod","",null,null],[0,"color","","",null,null],[11,"complement","elmesque::color","Produce a complementary color. The two colors will accent each other. This is the same as\nrotating the hue by 180 degrees.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"luminance","","Calculate and return the luminance of the Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"plain_contrast","","Return either black or white, depending which contrasts the Color the most. This will be\nuseful for determining a readable color for text on any given background Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"to_hsl","","Extract the components of a color in the HSL format.",0,{"inputs":[{"name":"color"}],"output":{"name":"hsla"}}],[11,"to_rgb","","Extract the components of a color in the RGB format.",0,{"inputs":[{"name":"color"}],"output":{"name":"rgba"}}],[11,"to_fsa","","Extract the components of a color in the RGB format within a fixed-size array.",0,null],[11,"to_byte_fsa","","Same as `to_fsa`, except r, g, b and a are represented in byte form.",0,null],[11,"to_hex","","Return the hex representation of this color in the format #RRGGBBAA\ne.g. `Color(1.0, 0.0, 5.0, 1.0) == \"#FF0080FF\"`",0,{"inputs":[{"name":"color"}],"output":{"name":"string"}}],[11,"with_luminance","","Return the same color but with the given luminance.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"alpha","","Return the same color but with the alpha multiplied by the given alpha.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"with_alpha","","Return the same color but with the given alpha.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"highlighted","","Return a highlighted version of the current Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"clicked","","Return a clicked version of the current Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"invert","","Return the Color's invert.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"red","","Return the red value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"green","","Return the green value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"blue","","Return the blue value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"set_red","","Set the red value.",0,null],[11,"set_green","","Set the green value.",0,null],[11,"set_blue","","Set the blue value.",0,null],[11,"decode","","",0,{"inputs":[{"name":"color"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"color"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"color"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"eq","","",0,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"hsla"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"hsla"}],"output":{"name":"hsla"}}],[11,"fmt","","",2,{"inputs":[{"name":"rgba"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"rgba"}],"output":{"name":"rgba"}}],[11,"fmt","","",3,{"inputs":[{"name":"gradient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"gradient"}],"output":{"name":"gradient"}}],[11,"fmt","elmesque::element","",4,{"inputs":[{"name":"properties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"properties"}],"output":{"name":"properties"}}],[11,"fmt","","",5,{"inputs":[{"name":"element"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"element"}],"output":{"name":"element"}}],[11,"width","","Create an `Element` with a given width.",5,{"inputs":[{"name":"element"},{"name":"i32"}],"output":{"name":"element"}}],[11,"height","","Create an `Element` with a given height.",5,{"inputs":[{"name":"element"},{"name":"i32"}],"output":{"name":"element"}}],[11,"size","","Create an `Element` with a given size.",5,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"}],"output":{"name":"element"}}],[11,"opacity","","Create an `Element` with a given opacity.",5,{"inputs":[{"name":"element"},{"name":"f32"}],"output":{"name":"element"}}],[11,"color","","Create an `Element with a given background color.",5,{"inputs":[{"name":"element"},{"name":"color"}],"output":{"name":"element"}}],[11,"container","","Put an element in a container. This lets you position the element really easily, and there are\ntons of ways to set the `Position`.",5,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"},{"name":"position"}],"output":{"name":"element"}}],[11,"clear","","Put an element in a cleared wrapper. The color provided will be the color that clears the\nscreen before rendering the contained element.",5,{"inputs":[{"name":"element"},{"name":"color"}],"output":{"name":"element"}}],[11,"above","","Stack elements vertically. To put `a` above `b` you would say: `a.above(b)`",5,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"below","","Stack elements vertically. To put `a` below `b` you would say: `a.below(b)`",5,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"beside","","Put elements beside each other horizontally. To put `b` to the right of `a` you would say:\n`a.beside(b)`",5,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"get_width","","Return the width of the Element.",5,{"inputs":[{"name":"element"}],"output":{"name":"i32"}}],[11,"get_height","","Return the height of the Element.",5,{"inputs":[{"name":"element"}],"output":{"name":"i32"}}],[11,"get_size","","Return the size of the Element's bounding rectangle.",5,null],[11,"draw","","Draw the form with some given graphics backend.",5,null],[11,"is_over","","Return whether or not a point is over the element.",5,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"prim"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"prim"}],"output":{"name":"prim"}}],[11,"fmt","","",7,{"inputs":[{"name":"imagestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"imagestyle"}],"output":{"name":"imagestyle"}}],[11,"fmt","","",8,{"inputs":[{"name":"three"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"three"}],"output":{"name":"three"}}],[11,"fmt","","",9,{"inputs":[{"name":"pos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"pos"}],"output":{"name":"pos"}}],[11,"fmt","","",10,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","","",11,{"inputs":[{"name":"direction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"new","","Construct a renderer, used for rendering elmesque `Element`s.",12,{"inputs":[{"name":"renderer"},{"name":"f64"},{"name":"f64"},{"name":"g"}],"output":{"name":"renderer"}}],[11,"character_cache","","Builder method for constructing a Renderer with a GlyphCache for drawing text.",12,{"inputs":[{"name":"renderer"},{"name":"c"}],"output":{"name":"renderer"}}],[11,"fmt","elmesque::form","",13,{"inputs":[{"name":"form"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"form"}],"output":{"name":"form"}}],[11,"fmt","","",14,{"inputs":[{"name":"fillstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"fillstyle"}],"output":{"name":"fillstyle"}}],[11,"fmt","","",15,{"inputs":[{"name":"linecap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"linecap"}],"output":{"name":"linecap"}}],[11,"fmt","","",16,{"inputs":[{"name":"linejoin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"linejoin"}],"output":{"name":"linejoin"}}],[11,"fmt","","",17,{"inputs":[{"name":"linestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"linestyle"}],"output":{"name":"linestyle"}}],[11,"default","","The default LineStyle.",17,{"inputs":[{"name":"linestyle"}],"output":{"name":"linestyle"}}],[11,"width","","The LineStyle with some given width.",17,{"inputs":[{"name":"linestyle"},{"name":"f64"}],"output":{"name":"linestyle"}}],[11,"fmt","","",18,{"inputs":[{"name":"basicform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"basicform"}],"output":{"name":"basicform"}}],[11,"fmt","","",19,{"inputs":[{"name":"shapestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"shapestyle"}],"output":{"name":"shapestyle"}}],[11,"shift","","Move a form by the given amount. this is a relative translation so `shift(10.0, 10.0, form)\nwould move `form` ten pixels up and ten pixels to the right.",13,{"inputs":[{"name":"form"},{"name":"f64"},{"name":"f64"}],"output":{"name":"form"}}],[11,"shift_x","","Move a shape in the x direction. This is relative so `shift_x(10.0, form)` moves `form` 10\npixels to the right.",13,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"shift_y","","Move a shape in the y direction. This is relative so `shift_y(10.0, form)` moves `form\nupwards by 10 pixels.",13,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"scale","","Scale a form by a given factor. Scaling by 2 doubles both dimensions and quadruples the\narea.",13,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"rotate","","Rotate a form by a given angle. Rotate takes radians and turns things counterclockwise.\nSo to turn `form` 30 degrees to the left you would say `rotate(degrees(30), form)`.",13,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"alpha","","Set the alpha of a Form. The default is 1 and 0 is totally transparent.",13,{"inputs":[{"name":"form"},{"name":"f32"}],"output":{"name":"form"}}],[11,"fmt","","",20,{"inputs":[{"name":"pointpath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"pointpath"}],"output":{"name":"pointpath"}}],[11,"fmt","","",21,{"inputs":[{"name":"shape"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"filled","","Create a filled-in shape.",21,{"inputs":[{"name":"shape"},{"name":"color"}],"output":{"name":"form"}}],[11,"textured","","Create a textured shape.\nThe texture is described by some path and is tiled to fill the entire shape.",21,{"inputs":[{"name":"shape"},{"name":"pathbuf"}],"output":{"name":"form"}}],[11,"gradient","","Fill a shape with a gradient.",21,{"inputs":[{"name":"shape"},{"name":"gradient"}],"output":{"name":"form"}}],[11,"outlined","","Outline a shape with a given line style.",21,{"inputs":[{"name":"shape"},{"name":"linestyle"}],"output":{"name":"form"}}],[11,"fmt","elmesque::text","",22,{"inputs":[{"name":"text"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"fmt","","",23,{"inputs":[{"name":"textunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"textunit"}],"output":{"name":"textunit"}}],[11,"fmt","","",24,{"inputs":[{"name":"line"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"line"}],"output":{"name":"line"}}],[11,"fmt","","",25,{"inputs":[{"name":"style"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"style"}],"output":{"name":"style"}}],[11,"default","","",25,{"inputs":[{"name":"style"}],"output":{"name":"style"}}],[11,"from_string","","Convert a string into text which can be styled and displayed.",22,{"inputs":[{"name":"text"},{"name":"string"}],"output":{"name":"text"}}],[11,"empty","","Text with nothing in it.",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"append","","Put two chunks of text together.",22,{"inputs":[{"name":"text"},{"name":"text"}],"output":{"name":"text"}}],[11,"concat","","Put many chunks of text together.",22,{"inputs":[{"name":"text"},{"name":"vec"}],"output":{"name":"text"}}],[11,"join","","Put many chunks of text together with a separator.",22,{"inputs":[{"name":"text"},{"name":"text"},{"name":"vec"}],"output":{"name":"text"}}],[11,"style","","Set the style of some text. For example, if you design a `Style` called `foorter_style` that is\nspecifically for the bottom of your page, you could apply it to text like this:",22,{"inputs":[{"name":"text"},{"name":"style"}],"output":{"name":"text"}}],[11,"typeface","","Provide a path of a typeface to be used for some text.",22,{"inputs":[{"name":"text"},{"name":"pathbuf"}],"output":{"name":"text"}}],[11,"monospace","","Switch to a monospace typeface. Good for code snippets.",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"height","","Set the height of some text in pixels.",22,{"inputs":[{"name":"text"},{"name":"f64"}],"output":{"name":"text"}}],[11,"color","","Set the color of some text.",22,{"inputs":[{"name":"text"},{"name":"color"}],"output":{"name":"text"}}],[11,"bold","","Make the text bold.",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"italic","","Make the text italic.",22,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"line","","Put lines on text.",22,{"inputs":[{"name":"text"},{"name":"line"}],"output":{"name":"text"}}],[11,"fmt","elmesque::transform_2d","",26,{"inputs":[{"name":"transform2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"transform2d"}],"output":{"name":"transform2d"}}],[11,"multiply","","Multiply two transforms together.",26,{"inputs":[{"name":"transform2d"},{"name":"transform2d"}],"output":{"name":"transform2d"}}],[4,"Color","conrod::color","Color supporting RGB and HSL variants.",null,null],[13,"Rgba","","Red, Green, Blue, Alpha - All values' scales represented between 0.0 and 1.0.",0,null],[13,"Hsla","","Hue, Saturation, Lightness, Alpha - all valuess scales represented between 0.0 and 1.0.",0,null],[6,"Colour","","",null,null],[5,"rgba","","Create RGB colors with an alpha component for transparency.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb","","Create RGB colors from numbers between 0.0 and 1.0.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgba_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[5,"hsla","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV) with an alpha component for\ntransparency.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"hsl","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV). This gives you access to colors\nmore like a color wheel, where all hues are arranged in a circle that you specify with radians.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"grayscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"greyscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"random","","Construct a random color.",null,{"inputs":[],"output":{"name":"color"}}],[3,"Hsla","","The parts of HSL along with an alpha for transparency.",null,null],[3,"Rgba","","The parts of RGB along with an alpha for transparency.",null,null],[5,"f32_to_byte","","Convert an f32 color to a byte.",null,{"inputs":[{"name":"f32"}],"output":{"name":"u8"}}],[5,"rgb_to_hsl","","Pure function for converting rgb to hsl.",null,null],[5,"hsl_to_rgb","","Pure function for converting hsl to rgb.",null,null],[4,"Gradient","","Linear or Radial Gradient.",null,null],[13,"Linear","","Takes a start and end point and then a series of color stops that indicate how to\ninterpolate between the start and end points.",3,null],[13,"Radial","","First takes a start point and inner radius. Then takes an end point and outer radius.\nIt then takes a series of color stops that indicate how to interpolate between the\ninner and outer circles.",3,null],[5,"linear","","Create a linear gradient.",null,null],[5,"radial","","Create a radial gradient.",null,null],[5,"light_red","","Built-in colors.",null,{"inputs":[],"output":{"name":"color"}}],[5,"red","","Scarlet Red - Regular - #CC0000",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_red","","Scarlet Red - Dark - #A30000",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_orange","","Orange - Light - #FCAF3E",null,{"inputs":[],"output":{"name":"color"}}],[5,"orange","","Orange - Regular - #F57900",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_orange","","Orange - Dark - #CE5C00",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_yellow","","Butter - Light - #FCE94F",null,{"inputs":[],"output":{"name":"color"}}],[5,"yellow","","Butter - Regular - #EDD400",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_yellow","","Butter - Dark - #C4A000",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_green","","Chameleon - Light - #8AE234",null,{"inputs":[],"output":{"name":"color"}}],[5,"green","","Chameleon - Regular - #73D216",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_green","","Chameleon - Dark - #4E9A06",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_blue","","Sky Blue - Light - #729FCF",null,{"inputs":[],"output":{"name":"color"}}],[5,"blue","","Sky Blue - Regular - #3465A4",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_blue","","Sky Blue - Dark - #204A87",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_purple","","Plum - Light - #AD7FA8",null,{"inputs":[],"output":{"name":"color"}}],[5,"purple","","Plum - Regular - #75507B",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_purple","","Plum - Dark - #5C3566",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_brown","","Chocolate - Light - #E9B96E",null,{"inputs":[],"output":{"name":"color"}}],[5,"brown","","Chocolate - Regular - #C17D11",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_brown","","Chocolate - Dark - #8F5902",null,{"inputs":[],"output":{"name":"color"}}],[5,"black","","Straight Black.",null,{"inputs":[],"output":{"name":"color"}}],[5,"white","","Straight White.",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_gray","","Alluminium - Light",null,{"inputs":[],"output":{"name":"color"}}],[5,"gray","","Alluminium - Regular",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_gray","","Alluminium - Dark",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_grey","","Aluminium - Light - #EEEEEC",null,{"inputs":[],"output":{"name":"color"}}],[5,"grey","","Aluminium - Regular - #D3D7CF",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_grey","","Aluminium - Dark - #BABDB6",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_charcoal","","Charcoal - Light - #888A85",null,{"inputs":[],"output":{"name":"color"}}],[5,"charcoal","","Charcoal - Regular - #555753",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_charcoal","","Charcoal - Dark - #2E3436",null,{"inputs":[],"output":{"name":"color"}}],[8,"Colorable","","Types that can be colored.",null,null],[10,"color","","Set the color of the widget.",27,{"inputs":[{"name":"colorable"},{"name":"color"}],"output":{"name":"self"}}],[11,"rgba","","Set the color of the widget from rgba values.",27,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"rgb","","Set the color of the widget from rgb values.",27,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsla","","Set the color of the widget from hsla values.",27,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsl","","Set the color of the widget from hsl values.",27,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[4,"Color","conrod","Color supporting RGB and HSL variants.",null,null],[13,"Rgba","","Red, Green, Blue, Alpha - All values' scales represented between 0.0 and 1.0.",0,null],[13,"Hsla","","Hue, Saturation, Lightness, Alpha - all valuess scales represented between 0.0 and 1.0.",0,null],[8,"Colorable","","Types that can be colored.",null,null],[10,"color","","Set the color of the widget.",27,{"inputs":[{"name":"colorable"},{"name":"color"}],"output":{"name":"self"}}],[11,"rgba","","Set the color of the widget from rgba values.",27,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"rgb","","Set the color of the widget from rgb values.",27,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsla","","Set the color of the widget from hsla values.",27,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsl","","Set the color of the widget from hsl values.",27,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",28,null],[10,"character","","Get reference to character.",28,{"inputs":[{"name":"charactercache"},{"name":"u32"},{"name":"char"}],"output":{"name":"character"}}],[11,"width","","Return the width for some given text.",28,{"inputs":[{"name":"charactercache"},{"name":"u32"},{"name":"str"}],"output":{"name":"f64"}}],[3,"Split","","A type of Canvas for flexibly designing and guiding widget layout as splits of a window.",null,null],[3,"Floating","","A type of Canvas for flexibly designing and guiding widget layout as splits of a window.",null,null],[3,"Button","","A pressable button widget whose reaction is triggered upon release.",null,null],[3,"DropDownList","","Displays a given `Vec<String>` as a selectable drop down menu. It's reaction is triggered upon\nselection of a list item.",null,null],[3,"EnvelopeEditor","","Used for editing a series of 2D Points on a cartesian (X, Y) plane within some given range.\nUseful for things such as oscillator/automation envelopes or any value series represented\nperiodically.",null,null],[3,"Label","","Displays some given text centred within a rectangle.",null,null],[3,"WidgetMatrix","","Draw a matrix of any rectangular widget type, where the matrix will provide a function with\nthe widget number, it's `rows` and `cols` position, the width and height for the widget and\nthe location at which the widget should be drawn.",null,null],[3,"NumberDialer","","A widget for precision control over any digit within a value. The reaction is triggered when\nthe value is updated or if the mouse button is released while the cursor is above the widget.",null,null],[3,"Slider","","Linear value selection. If the slider's width is greater than it's height, it will\nautomatically become a horizontal slider, otherwise it will be a vertical slider. Its reaction\nis triggered if the value is updated or if the mouse button is released while the cursor is\nabove the rectangle.",null,null],[3,"TextBox","","A widget for displaying and mutating a given one-line text `String`. It's reaction is\ntriggered upon pressing of the `Enter`/`Return` key.",null,null],[3,"Toggle","","A pressable widget for toggling the state of a bool. Like the button widget, it's reaction is\ntriggered upon release and will return the new bool state. Note that the toggle will not\nmutate the bool for you, you should do this yourself within the react closure.",null,null],[3,"XYPad","","Used for displaying and controlling a 2D point on a cartesian plane within a given range.\nIts reaction is triggered when the value is updated or if the mouse button is released while\nthe cursor is above the rectangle.",null,null],[3,"Background","","A type for drawing a colored window background.",null,null],[3,"Canvas","","The kind of Canvas.",null,null],[12,"kind","","The Kind of Canvas (i.e. Split, Floating, etc).",29,null],[12,"xy","","The position of the Canvas within the window.",29,null],[12,"element","","The Element used for drawing the Canvas.",29,null],[12,"widget_area_xy","","The position of the Widget area.",29,null],[12,"widget_area_dim","","The dimensions of the Widget area.",29,null],[12,"padding","","Padding for the Canvas describes the distance between each edge and its Widget's.",29,null],[12,"has_updated","","Has the Canvas been set since the last time the Ui was drawn?",29,null],[3,"Mouse","","Represents the current state of the Mouse.",null,null],[12,"xy","","Position of the mouse cursor.",30,null],[12,"left","","Left mouse button state.",30,null],[12,"middle","","Middle mouse button state.",30,null],[12,"right","","Right mouse button state.",30,null],[12,"unknown","","Unknown button state.",30,null],[3,"Align","","The alignment of an element's dimensions with another's.",null,null],[12,"horizontal","","Positioning relative to an elements width and position on the x axis.",31,null],[12,"vertical","","Positioning relative to an elements height and position on the y axis.",31,null],[3,"Theme","","A serializable collection of canvas and widget styling defaults.",null,null],[12,"name","","A name for the theme used for identification.",32,null],[12,"padding","","Padding for Canvas layout and positioning.",32,null],[12,"margin","","Margin for Canvas layout and positioning.",32,null],[12,"position","","A default widget position.",32,null],[12,"align","","A default alignment for widgets.",32,null],[12,"background_color","","A default background for the theme.",32,null],[12,"shape_color","","A default color for widget shapes.",32,null],[12,"frame_color","","A default color for widget frames.",32,null],[12,"frame_width","","A default width for widget frames.",32,null],[12,"label_color","","A default color for widget labels.",32,null],[12,"font_size_large","","A default \"large\" font size.",32,null],[12,"font_size_medium","","A default \"medium\" font size.",32,null],[12,"font_size_small","","A default \"small\" font size.",32,null],[12,"maybe_canvas_split","","Optional style defaults for a Canvas split.",32,null],[12,"maybe_canvas_floating","","Optional style defaults for a Floating Canvas.",32,null],[12,"maybe_button","","Optional style defaults for a Button widget.",32,null],[12,"maybe_drop_down_list","","Optional style defaults for a DropDownList.",32,null],[12,"maybe_envelope_editor","","Optional style defaults for an EnvelopeEditor.",32,null],[12,"maybe_number_dialer","","Optional style defaults for a NumberDialer.",32,null],[12,"maybe_slider","","Optional style defaults for a Slider.",32,null],[12,"maybe_text_box","","Optional style defaults for a TextBox.",32,null],[12,"maybe_toggle","","Optional style defaults for a Toggle.",32,null],[12,"maybe_xy_pad","","Optional style defaults for an XYPad.",32,null],[3,"GlyphCache","","A wrapper over some CharacterCache, exposing it's functionality via a RefCell.",null,null],[3,"Ui","","`Ui` is the most important type within Conrod and is necessary for rendering and maintaining\nwidget state.\n# Ui Handles the following:\n* Contains the state of all widgets which can be indexed via their UiId.\n* Stores rendering state for each widget until the end of each render cycle.\n* Contains the theme used for default styling of the widgets.\n* Maintains the latest user input state (for mouse and keyboard).\n* Maintains the latest window dimensions.",null,null],[12,"theme","","The theme used to set default styling for widgets.",33,null],[12,"glyph_cache","","Cache for character textures, used for label width calculation and glyph rendering.",33,null],[12,"win_w","","Window width.",33,null],[12,"win_h","","Window height.",33,null],[3,"UserInput","","A wrapper over the current user input state.",null,null],[12,"maybe_mouse","","Mouse state if it is available.",34,null],[12,"pressed_keys","","Keys pressed since the last cycle.",34,null],[12,"released_keys","","Keys released since the last cycle.",34,null],[12,"entered_text","","Text entered since the last cycle.",34,null],[4,"Framing","","To be used as a parameter for defining the aesthetic\nof the widget frame.",null,null],[13,"Frame","","Frame width and color.",35,null],[13,"NoFrame","","No frame.",35,null],[4,"MouseButtonState","","Represents the current state of a mouse button.",null,null],[13,"Up","","The mouse is currently up.",36,null],[13,"Down","","The mouse is currently down (pressed).",36,null],[4,"Corner","","A corner of a rectangle.",null,null],[13,"TopLeft","","The top left quarter of a rectangle's area.",37,null],[13,"TopRight","","The top right quarter of a rectangle's area.",37,null],[13,"BottomLeft","","The bottom left quarter of a rectangle's area.",37,null],[13,"BottomRight","","The bottom right quarter of a rectangle's area.",37,null],[4,"Direction","","Directionally positioned, relative to another widget.",null,null],[13,"Up","","Positioned above.",38,null],[13,"Down","","Positioned below.",38,null],[13,"Left","","Positioned to the left.",38,null],[13,"Right","","Positioned to the right.",38,null],[4,"HorizontalAlign","","The horizontal alignment of a widget positioned relatively to another widget on the y axis.",null,null],[13,"Left","","Align the left edges of the widgets.",39,null],[13,"Middle","","Align the centres of the widgets' closest parallel edges.",39,null],[13,"Right","","Align the right edges of the relative widgets.",39,null],[4,"Place","","Place the widget at a position on the Canvas.",null,null],[13,"Middle","","Centre of the Canvas.",40,null],[13,"TopLeft","","Top left of the Canvas - pad_top + pad_left.",40,null],[13,"TopRight","","Top right of the Canvas - pad_top - pad_right.",40,null],[13,"BottomLeft","","Bottom left of the Canvas + pad_bottom + pad_left.",40,null],[13,"BottomRight","","Bottom right of the Canvas + pad_bottom - pad_right.",40,null],[13,"MidTop","","Top centre of the Canvas - pad_top.",40,null],[13,"MidBottom","","Bottom centre of the Canvas + pad_bottom.",40,null],[13,"MidLeft","","Left centre of the Canvas + pad_left.",40,null],[13,"MidRight","","Right centre of the Canvas - pad_right.",40,null],[4,"Position","","A cached widget's position for rendering.",null,null],[13,"Absolute","","A specific position.",41,null],[13,"Relative","","A position relative to some other Ui element.",41,null],[13,"Direction","","A direction relative to some other Ui element.",41,null],[13,"Place","","A position at a place on the current Canvas.",41,null],[4,"VerticalAlign","","The vertical alignment of a widget positioned relatively to another widget on the x axis.",null,null],[13,"Top","","Align the top edges of the widgets.",42,null],[13,"Middle","","Align the centres of the widgets' closest parallel edges.",42,null],[13,"Bottom","","Align the bottom edges of the widgets.",42,null],[4,"UiId","","For functions that may take either a WidgetId or a CanvasId.",null,null],[13,"Canvas","","The ID for a Canvas.",43,null],[13,"Widget","","The ID for a Widget.",43,null],[5,"align_left_of","","The x offset required to align an element with `width` to the left of a target element.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"align_right_of","","The x offset required to align an element with `width` to the right of a target element.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"align_bottom_of","","The y offset required to align an element with `height` to the bottom of a target element.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"align_top_of","","The y offset required to align an element with `height` to the top of a target element.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[5,"middle_of","","The position of a rect with `dim` Dimensions at the middle of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"top_left_of","","The position of a rect with `dim` Dimensions at the top left of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"top_right_of","","The position of a rect with `dim` Dimensions at the top right of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"bottom_left_of","","The position of a rect with `dim` Dimensions at the bottom left of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"bottom_right_of","","The position of a rect with `dim` Dimensions at the bottom right of the `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"mid_top_of","","The position of a rect with `dim` Dimensions at the middle of the inside of the top edge of\nthe `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"mid_bottom_of","","The position of a rect with `dim` Dimensions at the middle of the inside of the bottom edge of\nthe `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"mid_left_of","","The position of a rect with `dim` Dimensions at the middle of the inside of the left edge of\nthe `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[5,"mid_right_of","","The position of a rect with `dim` Dimensions at the middle of the inside of the right edge of\nthe `target` Dimensions.",null,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[11,"clone","","",44,{"inputs":[{"name":"background"}],"output":{"name":"background"}}],[11,"new","","Construct a background.",44,{"inputs":[{"name":"background"}],"output":{"name":"background"}}],[11,"draw","","Draw the background.",44,{"inputs":[{"name":"background"},{"name":"ui"},{"name":"b"}],"output":null}],[11,"color","","",44,{"inputs":[{"name":"background"},{"name":"color"}],"output":{"name":"self"}}],[11,"new","","Construct a default Floating canvas.",45,{"inputs":[{"name":"floating"}],"output":{"name":"floating"}}],[11,"show_title_bar","","Show or hide the title bar.",45,{"inputs":[{"name":"floating"},{"name":"bool"}],"output":{"name":"floating"}}],[11,"pad_left","","Set the padding from the left edge.",45,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"pad_right","","Set the padding from the right edge.",45,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"pad_top","","Set the padding from the top edge.",45,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"pad_bottom","","Set the padding from the bottom edge.",45,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"pad","","Set the padding for all edges.",45,{"inputs":[{"name":"floating"},{"name":"scalar"}],"output":{"name":"floating"}}],[11,"set","","Register the Canvas within the Ui.",45,{"inputs":[{"name":"floating"},{"name":"canvasid"},{"name":"ui"}],"output":null}],[11,"color","","",45,{"inputs":[{"name":"floating"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",45,{"inputs":[{"name":"floating"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",45,{"inputs":[{"name":"floating"},{"name":"color"}],"output":{"name":"self"}}],[11,"position","","",45,{"inputs":[{"name":"floating"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",45,{"inputs":[{"name":"floating"}],"output":{"name":"position"}}],[11,"horizontal_align","","",45,{"inputs":[{"name":"floating"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",45,{"inputs":[{"name":"floating"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",45,{"inputs":[{"name":"floating"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",45,{"inputs":[{"name":"floating"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",45,{"inputs":[{"name":"floating"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",45,{"inputs":[{"name":"floating"}],"output":{"name":"depth"}}],[11,"width","","",45,{"inputs":[{"name":"floating"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",45,{"inputs":[{"name":"floating"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",45,{"inputs":[{"name":"floating"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",45,{"inputs":[{"name":"floating"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"label","","",45,{"inputs":[{"name":"floating"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",45,{"inputs":[{"name":"floating"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",45,{"inputs":[{"name":"floating"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"new","","Construct a default Canvas Split.",46,{"inputs":[{"name":"split"},{"name":"canvasid"}],"output":{"name":"split"}}],[11,"length","","Set the dimension of the Split.",46,{"inputs":[{"name":"split"},{"name":"length"}],"output":{"name":"split"}}],[11,"flow","","Set the child Canvas Splits of the current Canvas flowing in a given direction.",46,null],[11,"flow_down","","Set the child Canvasses flowing downwards.",46,null],[11,"flow_up","","Set the child Canvasses flowing upwards.",46,null],[11,"flow_right","","Set the child Canvasses flowing to the right.",46,null],[11,"flow_left","","Set the child Canvasses flowing to the left.",46,null],[11,"pad_left","","Set the padding from the left edge.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"pad_right","","Set the padding from the right edge.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"pad_top","","Set the padding from the top edge.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"pad_bottom","","Set the padding from the bottom edge.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"pad","","Set the padding for all edges.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin_left","","Set the margin from the left edge.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin_right","","Set the margin from the right edge.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin_top","","Set the margin from the top edge.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin_bottom","","Set the margin from the bottom edge.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"margin","","Set the margin for all edges.",46,{"inputs":[{"name":"split"},{"name":"scalar"}],"output":{"name":"split"}}],[11,"set","","Store the Canvas and it's children within the `Ui`. Each Canvas can be accessed via it's\nunique identifier `CanvasId`.",46,{"inputs":[{"name":"split"},{"name":"ui"}],"output":null}],[11,"color","","",46,{"inputs":[{"name":"split"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",46,{"inputs":[{"name":"split"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",46,{"inputs":[{"name":"split"},{"name":"color"}],"output":{"name":"self"}}],[11,"fmt","","",29,{"inputs":[{"name":"canvas"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"canvas"}],"output":{"name":"canvas"}}],[11,"empty","","An empty Canvas",29,{"inputs":[{"name":"canvas"}],"output":{"name":"canvas"}}],[11,"clone","","",35,{"inputs":[{"name":"framing"}],"output":{"name":"framing"}}],[11,"fmt","","",36,{"inputs":[{"name":"mousebuttonstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"mousebuttonstate"}],"output":{"name":"buttonstate"}}],[11,"fmt","","",30,{"inputs":[{"name":"mouse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"mouse"}],"output":{"name":"mouse"}}],[11,"new","","Constructor for a Mouse struct.",30,{"inputs":[{"name":"mouse"},{"name":"point"},{"name":"buttonstate"},{"name":"buttonstate"},{"name":"buttonstate"}],"output":{"name":"mouse"}}],[11,"relative_to","","Return the mouse state with its position relative to the given position.",30,{"inputs":[{"name":"mouse"},{"name":"point"}],"output":{"name":"mouse"}}],[11,"decode","","",41,{"inputs":[{"name":"position"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",41,{"inputs":[{"name":"position"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"position"},{"name":"position"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"position"},{"name":"position"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"default","","The default widget Position.",41,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"eq","","",38,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"direction"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"decode","","",38,{"inputs":[{"name":"direction"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",38,{"inputs":[{"name":"direction"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"direction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"eq","","",39,{"inputs":[{"name":"horizontalalign"},{"name":"horizontalalign"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"horizontalalign"},{"name":"horizontalalign"}],"output":{"name":"bool"}}],[11,"decode","","",39,{"inputs":[{"name":"horizontalalign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",39,{"inputs":[{"name":"horizontalalign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"horizontalalign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"horizontalalign"}],"output":{"name":"horizontalalign"}}],[11,"eq","","",42,{"inputs":[{"name":"verticalalign"},{"name":"verticalalign"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"verticalalign"},{"name":"verticalalign"}],"output":{"name":"bool"}}],[11,"decode","","",42,{"inputs":[{"name":"verticalalign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",42,{"inputs":[{"name":"verticalalign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"verticalalign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"verticalalign"}],"output":{"name":"verticalalign"}}],[11,"eq","","",40,{"inputs":[{"name":"place"},{"name":"place"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"place"},{"name":"place"}],"output":{"name":"bool"}}],[11,"decode","","",40,{"inputs":[{"name":"place"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",40,{"inputs":[{"name":"place"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",40,{"inputs":[{"name":"place"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"place"}],"output":{"name":"place"}}],[11,"clone","","",37,{"inputs":[{"name":"corner"}],"output":{"name":"corner"}}],[11,"to","","Align `width` to the given `target_width`.",39,{"inputs":[{"name":"horizontalalign"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[11,"to","","Align `height` to the given `target_height`.",42,{"inputs":[{"name":"verticalalign"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"scalar"}}],[11,"within","","Place the given `dim` within the `target_dim`.",40,{"inputs":[{"name":"place"},{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"point"}}],[11,"decode","","",32,{"inputs":[{"name":"theme"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",32,{"inputs":[{"name":"theme"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"theme"}],"output":{"name":"theme"}}],[11,"fmt","","",32,{"inputs":[{"name":"theme"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",31,{"inputs":[{"name":"align"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"align"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"align"}],"output":{"name":"align"}}],[11,"fmt","","",31,{"inputs":[{"name":"align"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","The default theme if not loading from file.",32,{"inputs":[{"name":"theme"}],"output":{"name":"theme"}}],[11,"load","","Load a theme from file.",32,{"inputs":[{"name":"theme"},{"name":"str"}],"output":{"name":"result"}}],[11,"save","","Save a theme to file.",32,{"inputs":[{"name":"theme"},{"name":"str"}],"output":{"name":"result"}}],[11,"decode","","",43,{"inputs":[{"name":"uiid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",43,{"inputs":[{"name":"uiid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"uiid"},{"name":"uiid"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"uiid"},{"name":"uiid"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"uiid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"uiid"}],"output":{"name":"uiid"}}],[11,"fmt","","",34,{"inputs":[{"name":"userinput"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"userinput"}],"output":{"name":"userinput"}}],[11,"char_width","","Return the width of a character.",47,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"},{"name":"char"}],"output":{"name":"f64"}}],[11,"width","","Return the width of the given text.",47,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"},{"name":"str"}],"output":{"name":"f64"}}],[11,"new","core::cell","Creates a new `RefCell` containing `value`.",48,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",48,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",48,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",48,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",48,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",48,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"fmt","core::num","",49,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",49,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",49,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",49,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",50,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"from_u64","","Makes a bignum from `u64` value.",50,{"inputs":[{"name":"big32x36"},{"name":"u64"}],"output":{"name":"big32x36"}}],[11,"is_zero","","Returns true if the bignum is zero.",50,{"inputs":[{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",50,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",50,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",50,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",50,{"inputs":[{"name":"big32x36"},{"name":"usize"}],"output":{"name":"big32x36"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",50,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",50,null],[11,"eq","","",50,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"option"}}],[11,"cmp","","",50,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"ordering"}}],[11,"clone","","",50,{"inputs":[{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"fmt","","",50,{"inputs":[{"name":"big32x36"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",51,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",51,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"is_zero","","Returns true if the bignum is zero.",51,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",51,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",51,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",51,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",51,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",51,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",51,null],[11,"eq","","",51,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",51,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",51,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",51,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",52,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",53,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",54,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",55,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",55,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",55,null],[11,"clone","","",56,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",56,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",56,null],[11,"fmt","","",57,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num","",58,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",59,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",59,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",60,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",59,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"fmt","","",59,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",61,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",62,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",63,null],[11,"fmt","","",63,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",63,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",63,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",63,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",63,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",63,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",63,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",63,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",63,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",64,null],[11,"get","","Dereferences the content.",64,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",64,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",64,null],[11,"fmt","","",64,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",65,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",65,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",65,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",65,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",65,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",65,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",66,null],[11,"eq","","",66,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",66,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",66,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",67,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",67,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",68,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",69,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",70,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",71,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",71,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",71,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","conrod","",72,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",72,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",72,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",72,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",72,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",72,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",72,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",73,null],[11,"fmt","","",73,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",73,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::atomic","",74,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",75,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",76,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",77,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",78,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",74,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",74,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",74,null],[11,"swap","","Stores a value into the bool, returning the old value.",74,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",74,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",74,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",74,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",74,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",74,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",75,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",75,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",75,null],[11,"swap","","Stores a value into the isize, returning the old value.",75,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",75,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",75,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",75,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",75,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",75,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",75,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",76,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",76,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",76,null],[11,"swap","","Stores a value into the usize, returning the old value.",76,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",76,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",76,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",76,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",76,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",76,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",76,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",77,null],[11,"load","","Loads a value from the pointer.",77,null],[11,"store","","Stores a value into the pointer.",77,null],[11,"swap","","Stores a value into the pointer, returning the old value.",77,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",77,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",79,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",79,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",79,null],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",79,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",79,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",79,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",79,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",80,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"clone","","",48,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",48,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",48,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",81,null],[11,"clone","","",81,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",82,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"drop","","",83,null],[11,"deref","","",84,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",84,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",85,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",85,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",85,null],[11,"clone","core::char","",86,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",87,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",86,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",89,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",88,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",90,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",90,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",90,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",90,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",91,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",91,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",92,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",92,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",92,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",92,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",93,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"indexable","","",93,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",93,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",94,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",94,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",94,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",94,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",94,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",94,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",94,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",95,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",95,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",95,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",96,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",96,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",96,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",97,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",97,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next_back","","",97,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",98,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",98,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",99,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",99,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"nth","","",99,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",99,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",99,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",99,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",99,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",100,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",100,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",100,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",100,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",100,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",100,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",101,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"clone","","",102,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",102,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"clone","","",103,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",103,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",103,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",103,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",103,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"indexable","","",103,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",103,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",104,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",104,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"indexable","","",104,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",104,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",105,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"clone","","",106,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",106,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"next_back","","",106,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",107,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",107,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",107,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",107,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",107,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",107,null],[11,"next_back","","",107,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",107,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",107,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",107,null],[11,"clone","","",108,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",108,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"next_back","","",108,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",108,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",108,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",109,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",109,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",109,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"clone","","",110,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",69,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",68,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",110,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"clone","","",111,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",111,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",111,null],[11,"next_back","","",111,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",110,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next","core::ops","",68,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",69,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",112,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",112,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",112,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",112,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"hash","core::option","",113,null],[11,"fmt","","",113,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",113,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",113,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",113,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",113,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",113,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",113,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",113,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",113,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",113,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",113,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value or returns a default.",113,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value or computes a default.",113,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",113,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",113,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",113,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",113,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",113,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",113,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",113,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",113,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",113,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",113,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",113,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",113,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",113,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",114,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",114,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next_back","","",114,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",116,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"next_back","","",116,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",117,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",113,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",118,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",119,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",120,null],[11,"fmt","","",120,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",120,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",120,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",120,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",120,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",120,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",120,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",120,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",120,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",120,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",120,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",120,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",120,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",120,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",120,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",120,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",120,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",120,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",120,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",120,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",120,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",121,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",122,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",123,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"next_back","","",123,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",120,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",124,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",125,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",126,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",127,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",128,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",129,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",130,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",131,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",132,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",133,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",134,null],[11,"next","","",134,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"count","","",134,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",134,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",134,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",134,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"indexable","","",134,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",134,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",135,null],[11,"next","","",135,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",135,null],[11,"count","","",135,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",135,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",135,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",135,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",136,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",136,null],[11,"next_back","","",136,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",136,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",137,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",137,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",137,null],[11,"next_back","","",137,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",138,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"next","","",139,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",139,null],[11,"next","","",140,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",140,null],[11,"next","","",141,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",141,null],[11,"next","","",142,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",142,null],[11,"clone","","",143,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",143,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",143,null],[11,"next_back","","",143,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"indexable","","",143,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"idx","","",143,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",144,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",144,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",144,null],[11,"next_back","","",144,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"indexable","","",144,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"idx","","",144,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",145,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",145,null],[11,"next_back","","",145,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",146,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",146,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",147,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",148,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",147,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",147,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",147,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",149,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"eq","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"haystack","","",149,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",149,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",149,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",151,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",151,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",151,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",151,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",151,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",151,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",151,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",151,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",152,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",152,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",152,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",152,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",152,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",152,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",152,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",152,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",153,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",153,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",153,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",153,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",153,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",153,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",153,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",153,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"eq","core::str","",154,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",154,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",155,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",155,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",155,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",156,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",156,null],[11,"next_back","","",156,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",157,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",157,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",157,null],[11,"next_back","","",157,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",158,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",159,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",159,null],[11,"call_mut","","",159,null],[11,"call_once","","",159,null],[11,"next","","",158,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",158,null],[11,"next_back","","",158,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",158,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",160,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",161,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",161,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",162,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",161,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",162,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",163,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",163,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",164,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",164,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",163,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",164,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",165,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",166,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",166,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",167,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",167,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",168,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",169,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",169,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",170,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",170,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",169,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",170,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",171,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",172,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",172,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",173,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",173,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",172,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",173,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",174,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",174,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",174,null],[11,"next_back","","",174,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",175,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",176,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",176,null],[11,"call_mut","","",176,null],[11,"call_once","","",176,null],[11,"next","","",175,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",175,null],[11,"next_back","","",175,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",177,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"clone","","",178,{"inputs":[{"name":"oldsearcher"}],"output":{"name":"oldsearcher"}}],[11,"clone","","",179,{"inputs":[{"name":"oldmatchindices"}],"output":{"name":"oldmatchindices"}}],[11,"clone","","",180,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",181,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",181,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",181,null],[11,"finish","","",181,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",181,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",181,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",182,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",182,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",183,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",183,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",184,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",184,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",185,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",185,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",186,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",186,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",187,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",187,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",188,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",189,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",190,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Consumes the `DebugStruct`, finishing output and returning any error\nencountered.",190,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",191,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Consumes the `DebugTuple`, finishing output and returning any error\nencountered.",191,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"finish","","",192,null],[11,"entry","","Adds a new entry to the set output.",193,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",193,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the set output.",194,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",194,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",195,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"finish","","Consumes the `DebugMap`, finishing output and returning any error\nencountered.",195,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",196,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",197,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",198,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",198,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",199,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",200,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",201,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",201,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",202,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",203,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",204,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",204,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",205,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",205,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",205,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",205,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",205,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",205,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",205,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",205,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",205,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",205,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",205,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",205,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",205,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",205,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"fmt","","",201,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",66,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",79,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",48,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","conrod","",47,{"inputs":[{"name":"glyphcache"}],"output":{"name":"refcell"}}],[11,"deref_mut","","",47,{"inputs":[{"name":"glyphcache"}],"output":{"name":"refcell"}}],[11,"new","","Constructor for a UiContext.",33,{"inputs":[{"name":"ui"},{"name":"c"},{"name":"theme"}],"output":{"name":"ui"}}],[11,"widget_size","","Return the dimensions of a Canvas.",33,{"inputs":[{"name":"ui"},{"name":"widgetid"}],"output":{"name":"dimensions"}}],[11,"canvas_size","","Return the dimensions of a Canvas.",33,{"inputs":[{"name":"ui"},{"name":"canvasid"}],"output":{"name":"dimensions"}}],[11,"handle_event","","Handle game events and update the state.",33,{"inputs":[{"name":"ui"},{"name":"e"}],"output":null}],[11,"pick_canvas","","If the given Point is currently on a Canvas, return the Id of that canvas.",33,{"inputs":[{"name":"ui"},{"name":"point"}],"output":{"name":"option"}}],[11,"get_xy","","Get the centred xy coords for some given `Dimension`s, `Position` and alignment.",33,{"inputs":[{"name":"ui"},{"name":"position"},{"name":"dimensions"},{"name":"horizontalalign"},{"name":"verticalalign"}],"output":{"name":"point"}}],[11,"draw","","Draw the `Ui` in it's current state.\n- The order of drawing is as follows:\n    1. Canvas splits.\n    2. Widgets on Canvas splits.\n    3. Floating Canvasses.\n    4. Widgets on Floating Canvasses.\n- Widgets are sorted by capturing and then render depth (depth first).\n- Construct the elmesque `Renderer` for rendering the elm `Element`s.\n- Render all widgets.",33,{"inputs":[{"name":"ui"},{"name":"g"}],"output":null}],[0,"utils","","",null,null],[5,"clamp","conrod::utils","Clamp a value between a given min and max.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"is_over_rect","","Return whether or not a given point is over a rectangle at a given point on a cartesian plane.",null,{"inputs":[{"name":"point"},{"name":"point"},{"name":"dimensions"}],"output":{"name":"bool"}}],[5,"percentage","","Get value percentage between max and min.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"f32"}}],[5,"value_from_perc","","Adjust the value to the given percentage.",null,{"inputs":[{"name":"f32"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"map_range","","Map a value from a given range to a new given range.",null,{"inputs":[{"name":"x"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"}],"output":{"name":"y"}}],[5,"val_to_string","","Get a suitable string from the value, its max and the pixel range.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"usize"}],"output":{"name":"string"}}],[11,"new","conrod","Create a button context to be built upon.",206,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"react","","Set the reaction for the Button. The reaction will be triggered upon release of the button.",206,{"inputs":[{"name":"button"},{"name":"f"}],"output":{"name":"self"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",206,{"inputs":[{"name":"button"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",206,{"inputs":[{"name":"button"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",206,{"inputs":[{"name":"button"}],"output":{"name":"str"}}],[11,"init_state","","",206,{"inputs":[{"name":"button"}],"output":{"name":"state"}}],[11,"style","","",206,{"inputs":[{"name":"button"}],"output":{"name":"style"}}],[11,"canvas_id","","",206,{"inputs":[{"name":"button"}],"output":{"name":"option"}}],[11,"update","","Update the state of the Button.",206,{"inputs":[{"name":"button"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given Button State.",206,{"inputs":[{"name":"button"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",206,{"inputs":[{"name":"button"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",206,{"inputs":[{"name":"button"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",206,{"inputs":[{"name":"button"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",206,{"inputs":[{"name":"button"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",206,{"inputs":[{"name":"button"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",206,{"inputs":[{"name":"button"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",206,{"inputs":[{"name":"button"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",206,{"inputs":[{"name":"button"}],"output":{"name":"position"}}],[11,"horizontal_align","","",206,{"inputs":[{"name":"button"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",206,{"inputs":[{"name":"button"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",206,{"inputs":[{"name":"button"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",206,{"inputs":[{"name":"button"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",206,{"inputs":[{"name":"button"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",206,{"inputs":[{"name":"button"}],"output":{"name":"depth"}}],[11,"width","","",206,{"inputs":[{"name":"button"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",206,{"inputs":[{"name":"button"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",206,{"inputs":[{"name":"button"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",206,{"inputs":[{"name":"button"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"new","","Construct a new DropDownList.",207,{"inputs":[{"name":"dropdownlist"},{"name":"vec"},{"name":"option"}],"output":{"name":"dropdownlist"}}],[11,"react","","Set the DropDownList's reaction. It will be triggered upon selection of a list item.",207,{"inputs":[{"name":"dropdownlist"},{"name":"f"}],"output":{"name":"dropdownlist"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",207,{"inputs":[{"name":"dropdownlist"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",207,{"inputs":[{"name":"dropdownlist"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",207,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"str"}}],[11,"init_state","","",207,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"state"}}],[11,"style","","",207,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"style"}}],[11,"canvas_id","","",207,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"option"}}],[11,"capture_mouse","","Capture the mouse if the menu was opened.",207,{"inputs":[{"name":"dropdownlist"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_mouse","","Uncapture the mouse if the menu was closed.",207,{"inputs":[{"name":"dropdownlist"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"update","","Update the state of the DropDownList.",207,{"inputs":[{"name":"dropdownlist"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given DropDownList State.",207,{"inputs":[{"name":"dropdownlist"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",207,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"position"}}],[11,"horizontal_align","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",207,{"inputs":[{"name":"dropdownlist"}],"output":{"name":"depth"}}],[11,"width","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",207,{"inputs":[{"name":"dropdownlist"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"point_radius","","Set the radius of the envelope point circle.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"f64"}],"output":{"name":"envelopeeditor"}}],[11,"line_width","","Set the width of the envelope lines.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"f64"}],"output":{"name":"envelopeeditor"}}],[11,"value_font_size","","Set the font size for the displayed values.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"fontsize"}],"output":{"name":"envelopeeditor"}}],[11,"skew_y","","Set the value skewing for the envelope's y-axis. This is useful for displaying exponential\nranges such as frequency.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"f32"}],"output":{"name":"envelopeeditor"}}],[11,"new","","Construct an EnvelopeEditor widget.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"vec"},{"name":"e"},{"name":"e"},{"name":"e"},{"name":"e"}],"output":{"name":"envelopeeditor"}}],[11,"react","","Set the reaction for the EnvelopeEditor.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"f"}],"output":{"name":"envelopeeditor"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",208,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"str"}}],[11,"init_state","","",208,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"state"}}],[11,"style","","",208,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"style"}}],[11,"canvas_id","","",208,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"option"}}],[11,"update","","Update the state of the EnvelopeEditor's cached state.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given EnvelopeEditor State.",208,{"inputs":[{"name":"envelopeeditor"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",208,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"position"}}],[11,"horizontal_align","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",208,{"inputs":[{"name":"envelopeeditor"}],"output":{"name":"depth"}}],[11,"width","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",208,{"inputs":[{"name":"envelopeeditor"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"fmt","","",209,{"inputs":[{"name":"label"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",209,{"inputs":[{"name":"label"}],"output":{"name":"label"}}],[11,"new","","Construct a new Label widget.",209,{"inputs":[{"name":"label"},{"name":"str"}],"output":{"name":"label"}}],[11,"font_size","","Set the font size for the label.",209,{"inputs":[{"name":"label"},{"name":"fontsize"}],"output":{"name":"label"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",209,{"inputs":[{"name":"label"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",209,{"inputs":[{"name":"label"}],"output":{"name":"str"}}],[11,"init_state","","",209,{"inputs":[{"name":"label"}],"output":{"name":"state"}}],[11,"style","","",209,{"inputs":[{"name":"label"}],"output":{"name":"style"}}],[11,"canvas_id","","",209,{"inputs":[{"name":"label"}],"output":{"name":"option"}}],[11,"update","","Update the state of the Label.",209,{"inputs":[{"name":"label"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element for the Label.",209,{"inputs":[{"name":"label"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",209,{"inputs":[{"name":"label"},{"name":"color"}],"output":{"name":"self"}}],[11,"position","","",209,{"inputs":[{"name":"label"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",209,{"inputs":[{"name":"label"}],"output":{"name":"position"}}],[11,"horizontal_align","","",209,{"inputs":[{"name":"label"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",209,{"inputs":[{"name":"label"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",209,{"inputs":[{"name":"label"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",209,{"inputs":[{"name":"label"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",209,{"inputs":[{"name":"label"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",209,{"inputs":[{"name":"label"}],"output":{"name":"depth"}}],[11,"width","","",209,{"inputs":[{"name":"label"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",209,{"inputs":[{"name":"label"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",209,{"inputs":[{"name":"label"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",209,{"inputs":[{"name":"label"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"clone","","",210,{"inputs":[{"name":"widgetmatrix"}],"output":{"name":"matrix"}}],[11,"new","","Create a widget matrix context.",210,{"inputs":[{"name":"widgetmatrix"},{"name":"usize"},{"name":"usize"}],"output":{"name":"matrix"}}],[11,"each_widget","","The reaction called for each widget in the matrix. This should be called following all\nbuilder methods.",210,{"inputs":[{"name":"widgetmatrix"},{"name":"ui"},{"name":"f"}],"output":null}],[11,"cell_padding","","A builder method for adding padding to the cell.",210,{"inputs":[{"name":"widgetmatrix"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix"}}],[11,"position","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",210,{"inputs":[{"name":"widgetmatrix"}],"output":{"name":"position"}}],[11,"horizontal_align","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",210,{"inputs":[{"name":"widgetmatrix"}],"output":{"name":"depth"}}],[11,"width","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",210,{"inputs":[{"name":"widgetmatrix"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"new","","Construct a new NumberDialer widget.",211,{"inputs":[{"name":"numberdialer"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"u8"}],"output":{"name":"numberdialer"}}],[11,"react","","Set the reaction for the NumberDialer. It will be triggered when the value is updated or if\nthe mouse button is released while the cursor is above the widget.",211,{"inputs":[{"name":"numberdialer"},{"name":"f"}],"output":{"name":"numberdialer"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",211,{"inputs":[{"name":"numberdialer"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",211,{"inputs":[{"name":"numberdialer"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",211,{"inputs":[{"name":"numberdialer"}],"output":{"name":"str"}}],[11,"init_state","","",211,{"inputs":[{"name":"numberdialer"}],"output":{"name":"state"}}],[11,"style","","",211,{"inputs":[{"name":"numberdialer"}],"output":{"name":"style"}}],[11,"canvas_id","","",211,{"inputs":[{"name":"numberdialer"}],"output":{"name":"option"}}],[11,"update","","Update the state of the NumberDialer.",211,{"inputs":[{"name":"numberdialer"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given NumberDialer State.",211,{"inputs":[{"name":"numberdialer"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",211,{"inputs":[{"name":"numberdialer"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",211,{"inputs":[{"name":"numberdialer"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",211,{"inputs":[{"name":"numberdialer"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",211,{"inputs":[{"name":"numberdialer"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",211,{"inputs":[{"name":"numberdialer"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",211,{"inputs":[{"name":"numberdialer"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",211,{"inputs":[{"name":"numberdialer"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",211,{"inputs":[{"name":"numberdialer"}],"output":{"name":"position"}}],[11,"horizontal_align","","",211,{"inputs":[{"name":"numberdialer"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",211,{"inputs":[{"name":"numberdialer"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",211,{"inputs":[{"name":"numberdialer"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",211,{"inputs":[{"name":"numberdialer"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",211,{"inputs":[{"name":"numberdialer"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",211,{"inputs":[{"name":"numberdialer"}],"output":{"name":"depth"}}],[11,"width","","",211,{"inputs":[{"name":"numberdialer"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",211,{"inputs":[{"name":"numberdialer"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",211,{"inputs":[{"name":"numberdialer"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",211,{"inputs":[{"name":"numberdialer"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"new","","Construct a new Slider widget.",212,{"inputs":[{"name":"slider"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"slider"}}],[11,"react","","Set the reaction for the Slider. It will be triggered if the value is updated or if the\nmouse button is released while the cursor is above the rectangle.",212,{"inputs":[{"name":"slider"},{"name":"f"}],"output":{"name":"slider"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",212,{"inputs":[{"name":"slider"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",212,{"inputs":[{"name":"slider"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",212,{"inputs":[{"name":"slider"}],"output":{"name":"str"}}],[11,"init_state","","",212,{"inputs":[{"name":"slider"}],"output":{"name":"state"}}],[11,"style","","",212,{"inputs":[{"name":"slider"}],"output":{"name":"style"}}],[11,"canvas_id","","",212,{"inputs":[{"name":"slider"}],"output":{"name":"option"}}],[11,"update","","Update the state of the Slider.",212,{"inputs":[{"name":"slider"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given Slider State.",212,{"inputs":[{"name":"slider"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",212,{"inputs":[{"name":"slider"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",212,{"inputs":[{"name":"slider"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",212,{"inputs":[{"name":"slider"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",212,{"inputs":[{"name":"slider"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",212,{"inputs":[{"name":"slider"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",212,{"inputs":[{"name":"slider"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"horizontal_align","","",212,{"inputs":[{"name":"slider"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",212,{"inputs":[{"name":"slider"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"position","","",212,{"inputs":[{"name":"slider"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",212,{"inputs":[{"name":"slider"}],"output":{"name":"position"}}],[11,"get_horizontal_align","","",212,{"inputs":[{"name":"slider"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",212,{"inputs":[{"name":"slider"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",212,{"inputs":[{"name":"slider"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",212,{"inputs":[{"name":"slider"}],"output":{"name":"depth"}}],[11,"width","","",212,{"inputs":[{"name":"slider"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",212,{"inputs":[{"name":"slider"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",212,{"inputs":[{"name":"slider"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",212,{"inputs":[{"name":"slider"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"new","","Construct a TextBox widget.",213,{"inputs":[{"name":"textbox"},{"name":"string"}],"output":{"name":"textbox"}}],[11,"font_size","","Set the font size of the text.",213,{"inputs":[{"name":"textbox"},{"name":"fontsize"}],"output":{"name":"textbox"}}],[11,"react","","Set the reaction for the TextBox. It will be triggered upon pressing of the\n`Enter`/`Return` key.",213,{"inputs":[{"name":"textbox"},{"name":"f"}],"output":{"name":"textbox"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",213,{"inputs":[{"name":"textbox"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",213,{"inputs":[{"name":"textbox"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",213,{"inputs":[{"name":"textbox"}],"output":{"name":"str"}}],[11,"init_state","","",213,{"inputs":[{"name":"textbox"}],"output":{"name":"state"}}],[11,"style","","",213,{"inputs":[{"name":"textbox"}],"output":{"name":"style"}}],[11,"canvas_id","","",213,{"inputs":[{"name":"textbox"}],"output":{"name":"option"}}],[11,"capture_keyboard","","Capture the keyboard if the Interaction has become `Captured`.",213,{"inputs":[{"name":"textbox"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_keyboard","","Uncapture the keyboard if the Interaction has become `Uncaptured`.",213,{"inputs":[{"name":"textbox"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"update","","Update the state of the TextBox.",213,{"inputs":[{"name":"textbox"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given TextBox State.",213,{"inputs":[{"name":"textbox"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",213,{"inputs":[{"name":"textbox"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",213,{"inputs":[{"name":"textbox"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",213,{"inputs":[{"name":"textbox"},{"name":"color"}],"output":{"name":"self"}}],[11,"position","","",213,{"inputs":[{"name":"textbox"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",213,{"inputs":[{"name":"textbox"}],"output":{"name":"position"}}],[11,"horizontal_align","","",213,{"inputs":[{"name":"textbox"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",213,{"inputs":[{"name":"textbox"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",213,{"inputs":[{"name":"textbox"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",213,{"inputs":[{"name":"textbox"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",213,{"inputs":[{"name":"textbox"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",213,{"inputs":[{"name":"textbox"}],"output":{"name":"depth"}}],[11,"width","","",213,{"inputs":[{"name":"textbox"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",213,{"inputs":[{"name":"textbox"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",213,{"inputs":[{"name":"textbox"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",213,{"inputs":[{"name":"textbox"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"new","","Construct a new Toggle widget.",214,{"inputs":[{"name":"toggle"},{"name":"bool"}],"output":{"name":"toggle"}}],[11,"react","","Set the reaction for the Toggle. It will be triggered upon release of the button.",214,{"inputs":[{"name":"toggle"},{"name":"f"}],"output":{"name":"self"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",214,{"inputs":[{"name":"toggle"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",214,{"inputs":[{"name":"toggle"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",214,{"inputs":[{"name":"toggle"}],"output":{"name":"str"}}],[11,"init_state","","",214,{"inputs":[{"name":"toggle"}],"output":{"name":"state"}}],[11,"style","","",214,{"inputs":[{"name":"toggle"}],"output":{"name":"style"}}],[11,"canvas_id","","",214,{"inputs":[{"name":"toggle"}],"output":{"name":"option"}}],[11,"update","","Update the state of the Toggle.",214,{"inputs":[{"name":"toggle"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given Toggle State.",214,{"inputs":[{"name":"toggle"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",214,{"inputs":[{"name":"toggle"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",214,{"inputs":[{"name":"toggle"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",214,{"inputs":[{"name":"toggle"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",214,{"inputs":[{"name":"toggle"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",214,{"inputs":[{"name":"toggle"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",214,{"inputs":[{"name":"toggle"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",214,{"inputs":[{"name":"toggle"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",214,{"inputs":[{"name":"toggle"}],"output":{"name":"position"}}],[11,"horizontal_align","","",214,{"inputs":[{"name":"toggle"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",214,{"inputs":[{"name":"toggle"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",214,{"inputs":[{"name":"toggle"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",214,{"inputs":[{"name":"toggle"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",214,{"inputs":[{"name":"toggle"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",214,{"inputs":[{"name":"toggle"}],"output":{"name":"depth"}}],[11,"width","","",214,{"inputs":[{"name":"toggle"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",214,{"inputs":[{"name":"toggle"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",214,{"inputs":[{"name":"toggle"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",214,{"inputs":[{"name":"toggle"},{"name":"theme"}],"output":{"name":"f64"}}],[11,"new","","Construct a new XYPad widget.",215,{"inputs":[{"name":"xypad"},{"name":"x"},{"name":"x"},{"name":"x"},{"name":"y"},{"name":"y"},{"name":"y"}],"output":{"name":"xypad"}}],[11,"line_width","","Set the width of the XYPad's crosshair lines.",215,{"inputs":[{"name":"xypad"},{"name":"f64"}],"output":{"name":"xypad"}}],[11,"value_font_size","","Set the font size for the displayed crosshair value.",215,{"inputs":[{"name":"xypad"},{"name":"fontsize"}],"output":{"name":"xypad"}}],[11,"react","","Set the reaction for the XYPad. It will be triggered when the value is updated or if the\nmouse button is released while the cursor is above the rectangle.",215,{"inputs":[{"name":"xypad"},{"name":"f"}],"output":{"name":"self"}}],[11,"enabled","","If true, will allow user inputs.  If false, will disallow user inputs.",215,{"inputs":[{"name":"xypad"},{"name":"bool"}],"output":{"name":"self"}}],[11,"canvas","","Set which Canvas to attach the Widget to. Note that you can also attach a widget to a\nCanvas by using the canvas placement `Positionable` methods.",215,{"inputs":[{"name":"xypad"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"unique_kind","","",215,{"inputs":[{"name":"xypad"}],"output":{"name":"str"}}],[11,"init_state","","",215,{"inputs":[{"name":"xypad"}],"output":{"name":"state"}}],[11,"style","","",215,{"inputs":[{"name":"xypad"}],"output":{"name":"style"}}],[11,"canvas_id","","",215,{"inputs":[{"name":"xypad"}],"output":{"name":"option"}}],[11,"update","","Update the XYPad's cached state.",215,{"inputs":[{"name":"xypad"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[11,"draw","","Construct an Element from the given XYPad State.",215,{"inputs":[{"name":"xypad"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"color","","",215,{"inputs":[{"name":"xypad"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame","","",215,{"inputs":[{"name":"xypad"},{"name":"f64"}],"output":{"name":"self"}}],[11,"frame_color","","",215,{"inputs":[{"name":"xypad"},{"name":"color"}],"output":{"name":"self"}}],[11,"label","","",215,{"inputs":[{"name":"xypad"},{"name":"str"}],"output":{"name":"self"}}],[11,"label_color","","",215,{"inputs":[{"name":"xypad"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_font_size","","",215,{"inputs":[{"name":"xypad"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"position","","",215,{"inputs":[{"name":"xypad"},{"name":"position"}],"output":{"name":"self"}}],[11,"get_position","","",215,{"inputs":[{"name":"xypad"}],"output":{"name":"position"}}],[11,"horizontal_align","","",215,{"inputs":[{"name":"xypad"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[11,"vertical_align","","",215,{"inputs":[{"name":"xypad"},{"name":"verticalalign"}],"output":{"name":"self"}}],[11,"get_horizontal_align","","",215,{"inputs":[{"name":"xypad"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[11,"get_vertical_align","","",215,{"inputs":[{"name":"xypad"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"depth","","",215,{"inputs":[{"name":"xypad"},{"name":"depth"}],"output":{"name":"self"}}],[11,"get_depth","","",215,{"inputs":[{"name":"xypad"}],"output":{"name":"depth"}}],[11,"width","","",215,{"inputs":[{"name":"xypad"},{"name":"f64"}],"output":{"name":"self"}}],[11,"height","","",215,{"inputs":[{"name":"xypad"},{"name":"f64"}],"output":{"name":"self"}}],[11,"get_width","","",215,{"inputs":[{"name":"xypad"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"f64"}}],[11,"get_height","","",215,{"inputs":[{"name":"xypad"},{"name":"theme"}],"output":{"name":"f64"}}],[6,"CanvasId","","Unique canvas identifier. Each canvas must use a unique `CanvasId` so that it's state can be\ncached within the `Ui` type. The reason we use a usize is because canvasses are cached within\na `Vec`, which is limited to a size of `usize` elements.",null,null],[6,"FontSize","","Font size used throughout Conrod.",null,null],[6,"Depth","","The depth at which the widget will be rendered. This determines the order of rendering where\nwidgets with a greater depth will be rendered first. 0.0 is the default depth.",null,null],[6,"Dimensions","","General use 2D spatial dimensions.",null,null],[6,"Point","","General use 2D spatial point.",null,null],[6,"WidgetId","","Unique widget identifier. Each widget must use a unique `WidgetId` so that it's state can be\ncached within the `Ui` type. The reason we use a usize is because widgets are cached within\na `Vec`, which is limited to a size of `usize` elements.",null,null],[8,"EnvelopePoint","","`EnvPoint` must be implemented for any type that is used as a 2D point within the\nEnvelopeEditor.",null,null],[16,"X","","A value on the X-axis of the envelope.",216,null],[16,"Y","","A value on the Y-axis of the envelope.",216,null],[10,"get_x","","Return the X value.",216,{"inputs":[{"name":"envelopepoint"}],"output":{"name":"x"}}],[10,"get_y","","Return the Y value.",216,{"inputs":[{"name":"envelopepoint"}],"output":{"name":"y"}}],[10,"set_x","","Set the X value.",216,{"inputs":[{"name":"envelopepoint"},{"name":"x"}],"output":null}],[10,"set_y","","Set the Y value.",216,{"inputs":[{"name":"envelopepoint"},{"name":"y"}],"output":null}],[11,"get_curve","","Return the bezier curve depth (-1. to 1.) for the next interpolation.",216,{"inputs":[{"name":"envelopepoint"}],"output":{"name":"f32"}}],[11,"set_curve","","Set the bezier curve depth (-1. to 1.) for the next interpolation.",216,{"inputs":[{"name":"envelopepoint"},{"name":"f32"}],"output":null}],[10,"new","","Create a new EnvPoint.",216,{"inputs":[{"name":"envelopepoint"},{"name":"x"},{"name":"y"}],"output":{"name":"self"}}],[8,"Frameable","","Widgets that may display a frame.",null,null],[10,"frame","","Set the width of the widget's frame.",217,{"inputs":[{"name":"frameable"},{"name":"f64"}],"output":{"name":"self"}}],[10,"frame_color","","Set the color of the widget's frame.",217,{"inputs":[{"name":"frameable"},{"name":"color"}],"output":{"name":"self"}}],[11,"frame_rgba","","Set the color of the widget's frame with rgba values.",217,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_rgb","","Set the color of the widget's frame with rgb values.",217,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_hsla","","Set the color of the widget's frame with hsla values.",217,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"frame_hsl","","Set the color of the widget's frame with hsl values.",217,{"inputs":[{"name":"frameable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[8,"Labelable","","Widgets that may display some label.",null,null],[10,"label","","Set the label for the widget.",218,{"inputs":[{"name":"labelable"},{"name":"str"}],"output":{"name":"self"}}],[10,"label_color","","Set the color of the widget's label.",218,{"inputs":[{"name":"labelable"},{"name":"color"}],"output":{"name":"self"}}],[11,"label_rgba","","Set the color of the widget's label from rgba values.",218,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_rgb","","Set the color of the widget's label from rgb values.",218,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_hsla","","Set the color of the widget's label from hsla values.",218,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"label_hsl","","Set the color of the widget's label from hsl values.",218,{"inputs":[{"name":"labelable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[10,"label_font_size","","Set the font size for the widget's label.",218,{"inputs":[{"name":"labelable"},{"name":"fontsize"}],"output":{"name":"self"}}],[11,"small_font","","Set a \"small\" font size for the widget's label.",218,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[11,"medium_font","","Set a \"medium\" font size for the widget's label.",218,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[11,"large_font","","Set a \"large\" font size for the widget's label.",218,{"inputs":[{"name":"labelable"},{"name":"ui"}],"output":{"name":"self"}}],[8,"Positionable","","Widgets that are positionable.",null,null],[10,"position","","Set the Position.",219,{"inputs":[{"name":"positionable"},{"name":"position"}],"output":{"name":"self"}}],[10,"get_position","","Get the Position.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"position"}}],[11,"point","","Set the position with some Point.",219,{"inputs":[{"name":"positionable"},{"name":"point"}],"output":{"name":"self"}}],[11,"xy","","Set the position with XY co-ords.",219,{"inputs":[{"name":"positionable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"relative","","Set the point relative to the previous widget.",219,{"inputs":[{"name":"positionable"},{"name":"point"}],"output":{"name":"self"}}],[11,"relative_xy","","Set the xy relative to the previous widget.",219,{"inputs":[{"name":"positionable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"relative_to","","Set the position relative to the widget with the given UiId.",219,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"point"}],"output":{"name":"self"}}],[11,"relative_xy_to","","Set the position relative to the widget with the given UiId.",219,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"down","","Set the position as below the previous widget.",219,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"up","","Set the position as above the previous widget.",219,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"left","","Set the position to the left of the previous widget.",219,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"right","","Set the position to the right of the previous widget.",219,{"inputs":[{"name":"positionable"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"down_from","","Set the position as below the widget with the given UiId.",219,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"up_from","","Set the position as above the widget with the given UiId.",219,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"left_from","","Set the position to the left of the widget with the given UiId.",219,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"right_from","","Set the position to the right of the widget with the given UiId.",219,{"inputs":[{"name":"positionable"},{"name":"uiid"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"horizontal_align","","Align the position horizontally (only effective for Up or Down `Direction`s).",219,{"inputs":[{"name":"positionable"},{"name":"horizontalalign"}],"output":{"name":"self"}}],[10,"vertical_align","","Align the position vertically (only effective for Left or Right `Direction`s).",219,{"inputs":[{"name":"positionable"},{"name":"verticalalign"}],"output":{"name":"self"}}],[10,"get_horizontal_align","","Return the horizontal alignment.",219,{"inputs":[{"name":"positionable"},{"name":"theme"}],"output":{"name":"horizontalalign"}}],[10,"get_vertical_align","","Return the vertical alignment.",219,{"inputs":[{"name":"positionable"},{"name":"theme"}],"output":{"name":"verticalalign"}}],[11,"get_alignment","","Return the alignment of both axis.",219,null],[11,"align_left","","Align the position to the left (only effective for Up or Down `Direction`s).",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_middle_x","","Align the position to the middle (only effective for Up or Down `Direction`s).",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_right","","Align the position to the right (only effective for Up or Down `Direction`s).",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_top","","Align the position to the top (only effective for Left or Right `Direction`s).",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_middle_y","","Align the position to the middle (only effective for Left or Right `Direction`s).",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"align_bottom","","Align the position to the bottom (only effective for Left or Right `Direction`s).",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"place","","Place the widget at some position on the Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"place"},{"name":"option"}],"output":{"name":"self"}}],[11,"middle_of","","Place the widget in the middle of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"top_left_of","","Place the widget in the top left corner of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"top_right_of","","Place the widget in the top right corner of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"bottom_left_of","","Place the widget in the bottom left corner of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"bottom_right_of","","Place the widget in the bottom right corner of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_top_of","","Place the widget in the middle of the top edge of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_bottom_of","","Place the widget in the middle of the bottom edge of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_left_of","","Place the widget in the middle of the left edge of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"mid_right_of","","Place the widget in the middle of the right edge of the given Canvas.",219,{"inputs":[{"name":"positionable"},{"name":"canvasid"}],"output":{"name":"self"}}],[11,"middle","","Place the widget in the middle of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"top_left","","Place the widget in the top left corner of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"top_right","","Place the widget in the top right corner of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"bottom_left","","Place the widget in the bottom left corner of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"bottom_right","","Place the widget in the bottom right corner of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_top","","Place the widget in the middle of the top edge of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_bottom","","Place the widget in the middle of the bottom edge of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_left","","Place the widget in the middle of the left edge of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[11,"mid_right","","Place the widget in the middle of the right edge of the current Canvas.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"self"}}],[10,"depth","","The depth at which the widget should be rendered.",219,{"inputs":[{"name":"positionable"},{"name":"depth"}],"output":{"name":"self"}}],[10,"get_depth","","Return the depth.",219,{"inputs":[{"name":"positionable"}],"output":{"name":"depth"}}],[8,"Sizeable","","Widgets that support different dimensions.",null,null],[10,"width","","Set the width for the widget.",220,{"inputs":[{"name":"sizeable"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"height","","Set the height for the widget.",220,{"inputs":[{"name":"sizeable"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"get_width","","Get the width of the widget.",220,{"inputs":[{"name":"sizeable"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"scalar"}}],[10,"get_height","","Get the height of the widget.",220,{"inputs":[{"name":"sizeable"},{"name":"theme"}],"output":{"name":"scalar"}}],[11,"dim","","Set the dimensions for the widget.",220,{"inputs":[{"name":"sizeable"},{"name":"dimensions"}],"output":{"name":"self"}}],[11,"dimensions","","Set the width and height for the widget.",220,{"inputs":[{"name":"sizeable"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"get_dimensions","","Return the dimensions for the widget.",220,{"inputs":[{"name":"sizeable"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"dimensions"}}],[8,"Widget","","A trait to be implemented by all Widget types.",null,null],[16,"State","","State to be stored within the `Ui`s widget cache. Take advantage of this type for any large\nallocations that you would like to avoid repeating between updates, or any calculations\nthat you'd like to avoid repeating between calls to `update` and `draw`. Conrod will never\nclone the state, it will only ever be moved.",221,null],[16,"Style","","Styling used by the widget to construct an Element. Styling is useful to have in its own\nabstraction in order to making Theme serializing easier. Conrod doesn't yet support\nserializing non-internal widget styling with the `Theme` type, but we hope to soon.",221,null],[11,"set","","After building the widget, you call this method to set its current state into the given\n`Ui`. More precisely, the following will occur when calling this method:\n- The widget's previous state and style will be retrieved.\n- The widget's current `Style` will be retrieved (from the `Widget::style` method).\n- The widget's state will be updated (using the `Widget::udpate` method).\n- If the widget's state or style has changed, `Widget::draw` will be called to create the\nnew Element for rendering.\n- The new State, Style and Element (if there is one) will be cached within the `Ui`.",221,{"inputs":[{"name":"widget"},{"name":"widgetid"},{"name":"ui"}],"output":null}],[11,"capture_mouse","","Optionally override with the case that the widget should capture the mouse.",221,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_mouse","","Optionally override with the case that the widget should capture the mouse.",221,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"capture_keyboard","","Optionally override with the case that the widget should capture the mouse.",221,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"uncapture_keyboard","","Optionally override with the case that the widget should capture the mouse.",221,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[10,"unique_kind","","Return the kind of the widget as a &'static str. Note that this must be unique from all\nother widgets' \"unique kinds\". This is used by conrod to help avoid UiId errors.",221,{"inputs":[{"name":"widget"}],"output":{"name":"str"}}],[10,"init_state","","Return the initial `State` of the Widget. The `Ui` will only call this once.",221,{"inputs":[{"name":"widget"}],"output":{"name":"state"}}],[10,"style","","Return the styling of the widget. The `Ui` will call this once prior to each `update`. It\ndoes this so that it can check for differences in `Style` in case a new `Element` needs to\nbe constructed.",221,{"inputs":[{"name":"widget"}],"output":{"name":"style"}}],[11,"canvas_id","","Return the canvas to which the Widget will be attached, if there is one.",221,{"inputs":[{"name":"widget"}],"output":{"name":"option"}}],[10,"update","","Your widget's previous state is given to you as a parameter and it is your job to\nconstruct and return an Update that will be used to update the widget's cached state.",221,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"point"},{"name":"dimensions"},{"name":"userinput"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"option"}}],[10,"draw","","Construct a renderable Element from the current styling and new state. This will *only* be\ncalled on the occasion that the widget's `Style` or `State` has changed. Keep this in mind\nwhen designing your widget's `Style` and `State` types.",221,{"inputs":[{"name":"widget"},{"name":"state"},{"name":"style"},{"name":"theme"},{"name":"glyphcache"}],"output":{"name":"element"}}],[11,"frame_rgba","","Set the color of the widget's frame with rgba values.",217,null],[11,"frame_rgb","","Set the color of the widget's frame with rgb values.",217,null],[11,"frame_hsla","","Set the color of the widget's frame with hsla values.",217,null],[11,"frame_hsl","","Set the color of the widget's frame with hsl values.",217,null],[11,"label_rgba","","Set the color of the widget's label from rgba values.",218,null],[11,"label_rgb","","Set the color of the widget's label from rgb values.",218,null],[11,"label_hsla","","Set the color of the widget's label from hsla values.",218,null],[11,"label_hsl","","Set the color of the widget's label from hsl values.",218,null],[11,"small_font","","Set a \"small\" font size for the widget's label.",218,null],[11,"medium_font","","Set a \"medium\" font size for the widget's label.",218,null],[11,"large_font","","Set a \"large\" font size for the widget's label.",218,null],[11,"point","","Set the position with some Point.",219,null],[11,"xy","","Set the position with XY co-ords.",219,null],[11,"relative","","Set the point relative to the previous widget.",219,null],[11,"relative_xy","","Set the xy relative to the previous widget.",219,null],[11,"relative_to","","Set the position relative to the widget with the given UiId.",219,null],[11,"relative_xy_to","","Set the position relative to the widget with the given UiId.",219,null],[11,"down","","Set the position as below the previous widget.",219,null],[11,"up","","Set the position as above the previous widget.",219,null],[11,"left","","Set the position to the left of the previous widget.",219,null],[11,"right","","Set the position to the right of the previous widget.",219,null],[11,"down_from","","Set the position as below the widget with the given UiId.",219,null],[11,"up_from","","Set the position as above the widget with the given UiId.",219,null],[11,"left_from","","Set the position to the left of the widget with the given UiId.",219,null],[11,"right_from","","Set the position to the right of the widget with the given UiId.",219,null],[11,"get_alignment","","Return the alignment of both axis.",219,null],[11,"align_left","","Align the position to the left (only effective for Up or Down `Direction`s).",219,null],[11,"align_middle_x","","Align the position to the middle (only effective for Up or Down `Direction`s).",219,null],[11,"align_right","","Align the position to the right (only effective for Up or Down `Direction`s).",219,null],[11,"align_top","","Align the position to the top (only effective for Left or Right `Direction`s).",219,null],[11,"align_middle_y","","Align the position to the middle (only effective for Left or Right `Direction`s).",219,null],[11,"align_bottom","","Align the position to the bottom (only effective for Left or Right `Direction`s).",219,null],[11,"place","","Place the widget at some position on the Canvas.",219,null],[11,"middle_of","","Place the widget in the middle of the given Canvas.",219,null],[11,"top_left_of","","Place the widget in the top left corner of the given Canvas.",219,null],[11,"top_right_of","","Place the widget in the top right corner of the given Canvas.",219,null],[11,"bottom_left_of","","Place the widget in the bottom left corner of the given Canvas.",219,null],[11,"bottom_right_of","","Place the widget in the bottom right corner of the given Canvas.",219,null],[11,"mid_top_of","","Place the widget in the middle of the top edge of the given Canvas.",219,null],[11,"mid_bottom_of","","Place the widget in the middle of the bottom edge of the given Canvas.",219,null],[11,"mid_left_of","","Place the widget in the middle of the left edge of the given Canvas.",219,null],[11,"mid_right_of","","Place the widget in the middle of the right edge of the given Canvas.",219,null],[11,"middle","","Place the widget in the middle of the current Canvas.",219,null],[11,"top_left","","Place the widget in the top left corner of the current Canvas.",219,null],[11,"top_right","","Place the widget in the top right corner of the current Canvas.",219,null],[11,"bottom_left","","Place the widget in the bottom left corner of the current Canvas.",219,null],[11,"bottom_right","","Place the widget in the bottom right corner of the current Canvas.",219,null],[11,"mid_top","","Place the widget in the middle of the top edge of the current Canvas.",219,null],[11,"mid_bottom","","Place the widget in the middle of the bottom edge of the current Canvas.",219,null],[11,"mid_left","","Place the widget in the middle of the left edge of the current Canvas.",219,null],[11,"mid_right","","Place the widget in the middle of the right edge of the current Canvas.",219,null],[11,"dim","","Set the dimensions for the widget.",220,null],[11,"dimensions","","Set the width and height for the widget.",220,null],[11,"get_dimensions","","Return the dimensions for the widget.",220,null],[11,"get_curve","","Return the bezier curve depth (-1. to 1.) for the next interpolation.",216,null],[11,"set_curve","","Set the bezier curve depth (-1. to 1.) for the next interpolation.",216,null],[11,"get_x","","Return the X value.",222,null],[11,"get_y","","Return the Y value.",222,null],[11,"set_x","","Return the X value.",222,null],[11,"set_y","","Return the Y value.",222,null],[11,"new","","Create a new Envelope Point.",222,null],[11,"set","","After building the widget, you call this method to set its current state into the given\n`Ui`. More precisely, the following will occur when calling this method:\n- The widget's previous state and style will be retrieved.\n- The widget's current `Style` will be retrieved (from the `Widget::style` method).\n- The widget's state will be updated (using the `Widget::udpate` method).\n- If the widget's state or style has changed, `Widget::draw` will be called to create the\nnew Element for rendering.\n- The new State, Style and Element (if there is one) will be cached within the `Ui`.",221,null],[11,"capture_mouse","","Optionally override with the case that the widget should capture the mouse.",221,null],[11,"uncapture_mouse","","Optionally override with the case that the widget should capture the mouse.",221,null],[11,"capture_keyboard","","Optionally override with the case that the widget should capture the mouse.",221,null],[11,"uncapture_keyboard","","Optionally override with the case that the widget should capture the mouse.",221,null],[11,"canvas_id","","Return the canvas to which the Widget will be attached, if there is one.",221,null]],"paths":[[4,"Color"],[3,"Hsla"],[3,"Rgba"],[4,"Gradient"],[3,"Properties"],[3,"Element"],[4,"Prim"],[4,"ImageStyle"],[4,"Three"],[4,"Pos"],[3,"Position"],[4,"Direction"],[3,"Renderer"],[3,"Form"],[4,"FillStyle"],[4,"LineCap"],[4,"LineJoin"],[3,"LineStyle"],[4,"BasicForm"],[4,"ShapeStyle"],[3,"PointPath"],[3,"Shape"],[3,"Text"],[3,"TextUnit"],[4,"Line"],[3,"Style"],[3,"Transform2D"],[8,"Colorable"],[8,"CharacterCache"],[3,"Canvas"],[3,"Mouse"],[3,"Align"],[3,"Theme"],[3,"Ui"],[3,"UserInput"],[4,"Framing"],[4,"MouseButtonState"],[4,"Corner"],[4,"Direction"],[4,"HorizontalAlign"],[4,"Place"],[4,"Position"],[4,"VerticalAlign"],[4,"UiId"],[3,"Background"],[3,"Floating"],[3,"Split"],[3,"GlyphCache"],[3,"RefCell"],[3,"Wrapping"],[3,"Big32x36"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"BorrowRef"],[3,"Ref"],[3,"BorrowRefMut"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"StrSearcher"],[4,"State"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"TwoWaySearcher"],[4,"OldSearcher"],[3,"OldMatchIndices"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"Button"],[3,"DropDownList"],[3,"EnvelopeEditor"],[3,"Label"],[3,"WidgetMatrix"],[3,"NumberDialer"],[3,"Slider"],[3,"TextBox"],[3,"Toggle"],[3,"XYPad"],[8,"EnvelopePoint"],[8,"Frameable"],[8,"Labelable"],[8,"Positionable"],[8,"Sizeable"],[8,"Widget"],[6,"Point"]]};
searchIndex['opengl_graphics'] = {"items":[[0,"","opengl_graphics","An OpenGL back-end for Rust-Graphics",null,null],[11,"get_major_minor","shader_version::opengl","Gets the minor version of OpenGL.",0,null],[11,"to_GLSL","","Gets GLSL version associated with OpenGL.",0,{"inputs":[{"name":"opengl"}],"output":{"name":"glsl"}}],[11,"cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"opengl"}],"output":{"name":"opengl"}}],[11,"cmp","shader_version::glsl","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"glsl"}],"output":{"name":"glsl"}}],[11,"to_OpenGL","","Gets OpenGL version associated with GLSL.",1,{"inputs":[{"name":"glsl"}],"output":{"name":"opengl"}}],[11,"pick_shader","","",1,{"inputs":[{"name":"glsl"},{"name":"shaders"}],"output":{"name":"option"}}],[11,"new","shader_version","Creates a new shader picker.",2,{"inputs":[{"name":"shaders"}],"output":{"name":"shaders"}}],[11,"set","","Sets source for a shader version.",2,{"inputs":[{"name":"shaders"},{"name":"v"},{"name":"s"}],"output":{"name":"shaders"}}],[11,"get","","Get the closest shader to a shader version.",2,{"inputs":[{"name":"shaders"},{"name":"v"}],"output":{"name":"option"}}],[4,"OpenGL","opengl_graphics","",null,null],[13,"_2_0","","",0,null],[13,"_2_1","","",0,null],[13,"_3_0","","",0,null],[13,"_3_1","","",0,null],[13,"_3_2","","",0,null],[13,"_3_3","","",0,null],[13,"_4_0","","",0,null],[13,"_4_1","","",0,null],[13,"_4_2","","",0,null],[13,"_4_3","","",0,null],[13,"_4_4","","",0,null],[13,"_4_5","","",0,null],[3,"GlGraphics","","Contains OpenGL data.",null,null],[3,"Texture","","Wraps OpenGL texture data.\nThe texture gets deleted when running out of scope.",null,null],[0,"shader_utils","","Helper functions for dealing with shaders.",null,null],[3,"DynamicAttribute","opengl_graphics::shader_utils","Describes a shader attribute.",null,null],[5,"compile_shader","","Compiles a shader.",null,{"inputs":[{"name":"glenum"},{"name":"str"}],"output":{"name":"result"}}],[5,"attribute_location","","Creates a vertex buffer for an attribute from a program.",null,{"inputs":[{"name":"gluint"},{"name":"str"}],"output":{"name":"result"}}],[11,"drop","","",3,{"inputs":[{"name":"dynamicattribute"}],"output":null}],[11,"xyz","","Create XYZ vertex attribute.",3,{"inputs":[{"name":"dynamicattribute"},{"name":"gluint"},{"name":"str"},{"name":"gluint"}],"output":{"name":"result"}}],[11,"xy","","Create XY vertex attribute.",3,{"inputs":[{"name":"dynamicattribute"},{"name":"gluint"},{"name":"str"},{"name":"gluint"}],"output":{"name":"result"}}],[11,"rgb","","Create RGB color attribute.",3,{"inputs":[{"name":"dynamicattribute"},{"name":"gluint"},{"name":"str"},{"name":"gluint"}],"output":{"name":"result"}}],[11,"rgba","","Create RGBA color attribute.",3,{"inputs":[{"name":"dynamicattribute"},{"name":"gluint"},{"name":"str"},{"name":"gluint"}],"output":{"name":"result"}}],[11,"uv","","Create texture coordinate attribute.",3,{"inputs":[{"name":"dynamicattribute"},{"name":"gluint"},{"name":"str"},{"name":"gluint"}],"output":{"name":"result"}}],[11,"set","","Sets attribute data.",3,null],[0,"glyph_cache","opengl_graphics","Glyph caching",null,null],[3,"GlyphCache","opengl_graphics::glyph_cache","A struct used for caching rendered font.",null,null],[12,"face","","The font face.",4,null],[6,"FontSize","","The type alias for the font size.",null,null],[6,"Character","","The type alias for font characters.",null,null],[11,"clone","","",4,{"inputs":[{"name":"glyphcache"}],"output":{"name":"glyphcache"}}],[11,"new","","Constructor for a GlyphCache.",4,{"inputs":[{"name":"glyphcache"},{"name":"path"}],"output":{"name":"result"}}],[11,"from_bytes","","Creates a GlyphCache for a font stored in memory.",4,null],[11,"preload_chars","","Load all characters in the `chars` iterator for `size`",4,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"},{"name":"i"}],"output":null}],[11,"preload_printable_ascii","","Load all the printable ASCII characters for `size`. Includes space.",4,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"}],"output":null}],[11,"opt_character","","Return `ch` for `size` if it's already cached. Don't load.\nSee the `preload_*` functions.",4,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"},{"name":"char"}],"output":{"name":"option"}}],[6,"Texture","","",null,null],[11,"character","","",4,{"inputs":[{"name":"glyphcache"},{"name":"fontsize"},{"name":"char"}],"output":{"name":"character"}}],[0,"error","opengl_graphics","Errors",null,null],[4,"Error","opengl_graphics::error","An enum to represent various possible run-time errors that may occur.",null,null],[13,"FreetypeError","","An error happened with the FreeType library.",5,null],[11,"eq","","",5,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",5,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","opengl_graphics","Creates a new OpenGL back-end.",6,{"inputs":[{"name":"glgraphics"},{"name":"opengl"}],"output":{"name":"self"}}],[11,"viewport","","Sets viewport with normalized coordinates and center as origin.",6,{"inputs":[{"name":"glgraphics"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"use_program","","Sets the current program only if the program is not in use.",6,{"inputs":[{"name":"glgraphics"},{"name":"gluint"}],"output":null}],[11,"clear_program","","Unset the current program.",6,{"inputs":[{"name":"glgraphics"}],"output":null}],[11,"draw","","Draws graphics.",6,{"inputs":[{"name":"glgraphics"},{"name":"viewport"},{"name":"f"}],"output":null}],[11,"has_texture_alpha","","Assume all textures has alpha channel for now.",6,{"inputs":[{"name":"glgraphics"},{"name":"texture"}],"output":{"name":"bool"}}],[11,"enable_alpha_blend","","Enabled alpha blending.",6,{"inputs":[{"name":"glgraphics"}],"output":null}],[11,"disable_alpha_blend","","Disables alpha blending.",6,{"inputs":[{"name":"glgraphics"}],"output":null}],[11,"clear_color","","",6,null],[11,"clear_stencil","","",6,{"inputs":[{"name":"glgraphics"},{"name":"u8"}],"output":null}],[11,"tri_list","","",6,null],[11,"tri_list_uv","","",6,null],[11,"new","","Creates a new texture.",7,{"inputs":[{"name":"texture"},{"name":"gluint"},{"name":"u32"},{"name":"u32"}],"output":{"name":"self"}}],[11,"get_id","","Gets the OpenGL id of the texture.",7,{"inputs":[{"name":"texture"}],"output":{"name":"gluint"}}],[11,"from_memory_alpha","","Loads image from memory, the format is 8-bit greyscale.",7,null],[11,"from_path","","Loads image by relative file name to the asset root.",7,{"inputs":[{"name":"texture"},{"name":"path"}],"output":{"name":"result"}}],[11,"from_image","","Creates a texture from image.",7,{"inputs":[{"name":"texture"},{"name":"rgbaimage"}],"output":{"name":"self"}}],[11,"update","","Updates image with a new one.",7,{"inputs":[{"name":"texture"},{"name":"rgbaimage"}],"output":null}],[11,"drop","","",7,{"inputs":[{"name":"texture"}],"output":null}],[11,"get_size","","",7,null]],"paths":[[4,"OpenGL"],[4,"GLSL"],[3,"Shaders"],[3,"DynamicAttribute"],[3,"GlyphCache"],[4,"Error"],[3,"GlGraphics"],[3,"Texture"]]};
searchIndex['gl'] = {"items":[[0,"","gl","# Usage",null,null],[3,"FnPtr","","",null,null],[5,"ActiveShaderProgram","","",null,null],[5,"ActiveTexture","","Fallbacks: ActiveTextureARB",null,null],[5,"AttachShader","","Fallbacks: AttachObjectARB",null,null],[5,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",null,null],[5,"BeginQuery","","Fallbacks: BeginQueryARB",null,null],[5,"BeginQueryIndexed","","",null,null],[5,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV",null,null],[5,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",null,null],[5,"BindBuffer","","Fallbacks: BindBufferARB",null,null],[5,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",null,null],[5,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",null,null],[5,"BindBuffersBase","","",null,null],[5,"BindBuffersRange","","",null,null],[5,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",null,null],[5,"BindFragDataLocationIndexed","","",null,null],[5,"BindFramebuffer","","",null,null],[5,"BindImageTexture","","",null,null],[5,"BindImageTextures","","",null,null],[5,"BindProgramPipeline","","",null,null],[5,"BindRenderbuffer","","",null,null],[5,"BindSampler","","",null,null],[5,"BindSamplers","","",null,null],[5,"BindTexture","","Fallbacks: BindTextureEXT",null,null],[5,"BindTextureUnit","","",null,null],[5,"BindTextures","","",null,null],[5,"BindTransformFeedback","","",null,null],[5,"BindVertexArray","","Fallbacks: BindVertexArrayOES",null,null],[5,"BindVertexBuffer","","",null,null],[5,"BindVertexBuffers","","",null,null],[5,"BlendColor","","Fallbacks: BlendColorEXT",null,null],[5,"BlendEquation","","Fallbacks: BlendEquationEXT",null,null],[5,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",null,null],[5,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT",null,null],[5,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT",null,null],[5,"BlendFunc","","",null,null],[5,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",null,null],[5,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT",null,null],[5,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT",null,null],[5,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",null,null],[5,"BlitNamedFramebuffer","","",null,null],[5,"BufferData","","Fallbacks: BufferDataARB",null,null],[5,"BufferStorage","","",null,null],[5,"BufferSubData","","Fallbacks: BufferSubDataARB",null,null],[5,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",null,{"inputs":[{"name":"glenum"}],"output":{"name":"glenum"}}],[5,"CheckNamedFramebufferStatus","","",null,{"inputs":[{"name":"gluint"},{"name":"glenum"}],"output":{"name":"glenum"}}],[5,"ClampColor","","Fallbacks: ClampColorARB",null,null],[5,"Clear","","",null,null],[5,"ClearBufferData","","",null,null],[5,"ClearBufferSubData","","",null,null],[5,"ClearBufferfi","","",null,null],[5,"ClearBufferfv","","",null,null],[5,"ClearBufferiv","","",null,null],[5,"ClearBufferuiv","","",null,null],[5,"ClearColor","","",null,null],[5,"ClearDepth","","",null,null],[5,"ClearDepthf","","Fallbacks: ClearDepthfOES",null,null],[5,"ClearNamedBufferData","","",null,null],[5,"ClearNamedBufferSubData","","",null,null],[5,"ClearNamedFramebufferfi","","",null,null],[5,"ClearNamedFramebufferfv","","",null,null],[5,"ClearNamedFramebufferiv","","",null,null],[5,"ClearNamedFramebufferuiv","","",null,null],[5,"ClearStencil","","",null,null],[5,"ClearTexImage","","",null,null],[5,"ClearTexSubImage","","",null,null],[5,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",null,{"inputs":[{"name":"glsync"},{"name":"glbitfield"},{"name":"gluint64"}],"output":{"name":"glenum"}}],[5,"ClipControl","","",null,null],[5,"ColorMask","","",null,null],[5,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT",null,null],[5,"ColorP3ui","","",null,null],[5,"ColorP3uiv","","",null,null],[5,"ColorP4ui","","",null,null],[5,"ColorP4uiv","","",null,null],[5,"CompileShader","","Fallbacks: CompileShaderARB",null,null],[5,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",null,null],[5,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",null,null],[5,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB, CompressedTexImage3DOES",null,null],[5,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",null,null],[5,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",null,null],[5,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB, CompressedTexSubImage3DOES",null,null],[5,"CompressedTextureSubImage1D","","",null,null],[5,"CompressedTextureSubImage2D","","",null,null],[5,"CompressedTextureSubImage3D","","",null,null],[5,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",null,null],[5,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT",null,null],[5,"CopyNamedBufferSubData","","",null,null],[5,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",null,null],[5,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",null,null],[5,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",null,null],[5,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",null,null],[5,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT, CopyTexSubImage3DOES",null,null],[5,"CopyTextureSubImage1D","","",null,null],[5,"CopyTextureSubImage2D","","",null,null],[5,"CopyTextureSubImage3D","","",null,null],[5,"CreateBuffers","","",null,null],[5,"CreateFramebuffers","","",null,null],[5,"CreateProgram","","Fallbacks: CreateProgramObjectARB",null,{"inputs":[],"output":{"name":"gluint"}}],[5,"CreateProgramPipelines","","",null,null],[5,"CreateQueries","","",null,null],[5,"CreateRenderbuffers","","",null,null],[5,"CreateSamplers","","",null,null],[5,"CreateShader","","Fallbacks: CreateShaderObjectARB",null,{"inputs":[{"name":"glenum"}],"output":{"name":"gluint"}}],[5,"CreateShaderProgramv","","",null,null],[5,"CreateTextures","","",null,null],[5,"CreateTransformFeedbacks","","",null,null],[5,"CreateVertexArrays","","",null,null],[5,"CullFace","","",null,null],[5,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",null,null],[5,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",null,null],[5,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",null,null],[5,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",null,null],[5,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",null,null],[5,"DeleteProgram","","",null,null],[5,"DeleteProgramPipelines","","",null,null],[5,"DeleteQueries","","Fallbacks: DeleteQueriesARB",null,null],[5,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",null,null],[5,"DeleteSamplers","","",null,null],[5,"DeleteShader","","",null,null],[5,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",null,null],[5,"DeleteTextures","","",null,null],[5,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",null,null],[5,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",null,null],[5,"DepthFunc","","",null,null],[5,"DepthMask","","",null,null],[5,"DepthRange","","",null,null],[5,"DepthRangeArrayv","","",null,null],[5,"DepthRangeIndexed","","",null,null],[5,"DepthRangef","","Fallbacks: DepthRangefOES",null,null],[5,"DetachShader","","Fallbacks: DetachObjectARB",null,null],[5,"Disable","","",null,null],[5,"DisableVertexArrayAttrib","","",null,null],[5,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",null,null],[5,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV",null,null],[5,"DispatchCompute","","",null,null],[5,"DispatchComputeIndirect","","",null,null],[5,"DrawArrays","","Fallbacks: DrawArraysEXT",null,null],[5,"DrawArraysIndirect","","",null,null],[5,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV",null,null],[5,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",null,null],[5,"DrawBuffer","","",null,null],[5,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",null,null],[5,"DrawElements","","",null,null],[5,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT",null,null],[5,"DrawElementsIndirect","","",null,null],[5,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV",null,null],[5,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",null,null],[5,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT",null,null],[5,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",null,null],[5,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",null,null],[5,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT",null,null],[5,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackNV",null,null],[5,"DrawTransformFeedbackInstanced","","",null,null],[5,"DrawTransformFeedbackStream","","",null,null],[5,"DrawTransformFeedbackStreamInstanced","","",null,null],[5,"Enable","","",null,null],[5,"EnableVertexArrayAttrib","","",null,null],[5,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",null,null],[5,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiNV, EnableiEXT",null,null],[5,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",null,null],[5,"EndQuery","","Fallbacks: EndQueryARB",null,null],[5,"EndQueryIndexed","","",null,null],[5,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",null,null],[5,"FenceSync","","Fallbacks: FenceSyncAPPLE",null,{"inputs":[{"name":"glenum"},{"name":"glbitfield"}],"output":{"name":"glsync"}}],[5,"Finish","","",null,null],[5,"Flush","","",null,null],[5,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT",null,null],[5,"FlushMappedNamedBufferRange","","",null,null],[5,"FramebufferParameteri","","",null,null],[5,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",null,null],[5,"FramebufferTexture","","Fallbacks: FramebufferTextureARB",null,null],[5,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",null,null],[5,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",null,null],[5,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT, FramebufferTexture3DOES",null,null],[5,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT",null,null],[5,"FrontFace","","",null,null],[5,"GenBuffers","","Fallbacks: GenBuffersARB",null,null],[5,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",null,null],[5,"GenProgramPipelines","","",null,null],[5,"GenQueries","","Fallbacks: GenQueriesARB",null,null],[5,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",null,null],[5,"GenSamplers","","",null,null],[5,"GenTextures","","",null,null],[5,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",null,null],[5,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",null,null],[5,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",null,null],[5,"GenerateTextureMipmap","","",null,null],[5,"GetActiveAtomicCounterBufferiv","","",null,null],[5,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",null,null],[5,"GetActiveSubroutineName","","",null,null],[5,"GetActiveSubroutineUniformName","","",null,null],[5,"GetActiveSubroutineUniformiv","","",null,null],[5,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",null,null],[5,"GetActiveUniformBlockName","","",null,null],[5,"GetActiveUniformBlockiv","","",null,null],[5,"GetActiveUniformName","","",null,null],[5,"GetActiveUniformsiv","","",null,null],[5,"GetAttachedShaders","","",null,null],[5,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",null,null],[5,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",null,null],[5,"GetBooleanv","","",null,null],[5,"GetBufferParameteri64v","","",null,null],[5,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",null,null],[5,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",null,null],[5,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",null,null],[5,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",null,null],[5,"GetCompressedTextureImage","","",null,null],[5,"GetCompressedTextureSubImage","","",null,null],[5,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",null,null],[5,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",null,null],[5,"GetDoublev","","",null,null],[5,"GetError","","",null,{"inputs":[],"output":{"name":"glenum"}}],[5,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vNV, GetFloati_vEXT",null,null],[5,"GetFloatv","","",null,null],[5,"GetFragDataIndex","","",null,null],[5,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",null,null],[5,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",null,null],[5,"GetFramebufferParameteriv","","",null,null],[5,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR",null,{"inputs":[],"output":{"name":"glenum"}}],[5,"GetInteger64i_v","","",null,null],[5,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",null,null],[5,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",null,null],[5,"GetIntegerv","","",null,null],[5,"GetInternalformati64v","","",null,null],[5,"GetInternalformativ","","",null,null],[5,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",null,null],[5,"GetNamedBufferParameteri64v","","",null,null],[5,"GetNamedBufferParameteriv","","",null,null],[5,"GetNamedBufferPointerv","","",null,null],[5,"GetNamedBufferSubData","","",null,null],[5,"GetNamedFramebufferAttachmentParameteriv","","",null,null],[5,"GetNamedFramebufferParameteriv","","",null,null],[5,"GetNamedRenderbufferParameteriv","","",null,null],[5,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",null,null],[5,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",null,null],[5,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",null,null],[5,"GetProgramInfoLog","","",null,null],[5,"GetProgramInterfaceiv","","",null,null],[5,"GetProgramPipelineInfoLog","","",null,null],[5,"GetProgramPipelineiv","","",null,null],[5,"GetProgramResourceIndex","","",null,null],[5,"GetProgramResourceLocation","","",null,null],[5,"GetProgramResourceLocationIndex","","",null,null],[5,"GetProgramResourceName","","",null,null],[5,"GetProgramResourceiv","","",null,null],[5,"GetProgramStageiv","","",null,null],[5,"GetProgramiv","","",null,null],[5,"GetQueryBufferObjecti64v","","",null,null],[5,"GetQueryBufferObjectiv","","",null,null],[5,"GetQueryBufferObjectui64v","","",null,null],[5,"GetQueryBufferObjectuiv","","",null,null],[5,"GetQueryIndexediv","","",null,null],[5,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",null,null],[5,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",null,null],[5,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",null,null],[5,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",null,null],[5,"GetQueryiv","","Fallbacks: GetQueryivARB",null,null],[5,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",null,null],[5,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT",null,null],[5,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT",null,null],[5,"GetSamplerParameterfv","","",null,null],[5,"GetSamplerParameteriv","","",null,null],[5,"GetShaderInfoLog","","",null,null],[5,"GetShaderPrecisionFormat","","",null,null],[5,"GetShaderSource","","Fallbacks: GetShaderSourceARB",null,null],[5,"GetShaderiv","","",null,null],[5,"GetString","","",null,null],[5,"GetStringi","","",null,null],[5,"GetSubroutineIndex","","",null,null],[5,"GetSubroutineUniformLocation","","",null,null],[5,"GetSynciv","","Fallbacks: GetSyncivAPPLE",null,null],[5,"GetTexImage","","",null,null],[5,"GetTexLevelParameterfv","","",null,null],[5,"GetTexLevelParameteriv","","",null,null],[5,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT",null,null],[5,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT",null,null],[5,"GetTexParameterfv","","",null,null],[5,"GetTexParameteriv","","",null,null],[5,"GetTextureImage","","",null,null],[5,"GetTextureLevelParameterfv","","",null,null],[5,"GetTextureLevelParameteriv","","",null,null],[5,"GetTextureParameterIiv","","",null,null],[5,"GetTextureParameterIuiv","","",null,null],[5,"GetTextureParameterfv","","",null,null],[5,"GetTextureParameteriv","","",null,null],[5,"GetTextureSubImage","","",null,null],[5,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",null,null],[5,"GetTransformFeedbacki64_v","","",null,null],[5,"GetTransformFeedbacki_v","","",null,null],[5,"GetTransformFeedbackiv","","",null,null],[5,"GetUniformBlockIndex","","",null,null],[5,"GetUniformIndices","","",null,null],[5,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",null,null],[5,"GetUniformSubroutineuiv","","",null,null],[5,"GetUniformdv","","",null,null],[5,"GetUniformfv","","Fallbacks: GetUniformfvARB",null,null],[5,"GetUniformiv","","Fallbacks: GetUniformivARB",null,null],[5,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",null,null],[5,"GetVertexArrayIndexed64iv","","",null,null],[5,"GetVertexArrayIndexediv","","",null,null],[5,"GetVertexArrayiv","","",null,null],[5,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",null,null],[5,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",null,null],[5,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",null,null],[5,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV",null,null],[5,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",null,null],[5,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",null,null],[5,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",null,null],[5,"GetnColorTable","","",null,null],[5,"GetnCompressedTexImage","","",null,null],[5,"GetnConvolutionFilter","","",null,null],[5,"GetnHistogram","","",null,null],[5,"GetnMapdv","","",null,null],[5,"GetnMapfv","","",null,null],[5,"GetnMapiv","","",null,null],[5,"GetnMinmax","","",null,null],[5,"GetnPixelMapfv","","",null,null],[5,"GetnPixelMapuiv","","",null,null],[5,"GetnPixelMapusv","","",null,null],[5,"GetnPolygonStipple","","",null,null],[5,"GetnSeparableFilter","","",null,null],[5,"GetnTexImage","","",null,null],[5,"GetnUniformdv","","",null,null],[5,"GetnUniformfv","","Fallbacks: GetnUniformfvKHR",null,null],[5,"GetnUniformiv","","Fallbacks: GetnUniformivKHR",null,null],[5,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",null,null],[5,"Hint","","",null,null],[5,"InvalidateBufferData","","",null,null],[5,"InvalidateBufferSubData","","",null,null],[5,"InvalidateFramebuffer","","",null,null],[5,"InvalidateNamedFramebufferData","","",null,null],[5,"InvalidateNamedFramebufferSubData","","",null,null],[5,"InvalidateSubFramebuffer","","",null,null],[5,"InvalidateTexImage","","",null,null],[5,"InvalidateTexSubImage","","",null,null],[5,"IsBuffer","","Fallbacks: IsBufferARB",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsEnabled","","",null,{"inputs":[{"name":"glenum"}],"output":{"name":"glboolean"}}],[5,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV",null,{"inputs":[{"name":"glenum"},{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsProgram","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsProgramPipeline","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsQuery","","Fallbacks: IsQueryARB",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsSampler","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsShader","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsSync","","Fallbacks: IsSyncAPPLE",null,{"inputs":[{"name":"glsync"}],"output":{"name":"glboolean"}}],[5,"IsTexture","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"LineWidth","","",null,null],[5,"LinkProgram","","Fallbacks: LinkProgramARB",null,null],[5,"LogicOp","","",null,null],[5,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",null,null],[5,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",null,null],[5,"MapNamedBuffer","","",null,null],[5,"MapNamedBufferRange","","",null,null],[5,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",null,null],[5,"MemoryBarrierByRegion","","",null,null],[5,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",null,null],[5,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",null,null],[5,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT",null,null],[5,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",null,null],[5,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT",null,null],[5,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectEXT, MultiDrawElementsIndirectAMD",null,null],[5,"MultiTexCoordP1ui","","",null,null],[5,"MultiTexCoordP1uiv","","",null,null],[5,"MultiTexCoordP2ui","","",null,null],[5,"MultiTexCoordP2uiv","","",null,null],[5,"MultiTexCoordP3ui","","",null,null],[5,"MultiTexCoordP3uiv","","",null,null],[5,"MultiTexCoordP4ui","","",null,null],[5,"MultiTexCoordP4uiv","","",null,null],[5,"NamedBufferData","","",null,null],[5,"NamedBufferStorage","","",null,null],[5,"NamedBufferSubData","","",null,null],[5,"NamedFramebufferDrawBuffer","","",null,null],[5,"NamedFramebufferDrawBuffers","","",null,null],[5,"NamedFramebufferParameteri","","",null,null],[5,"NamedFramebufferReadBuffer","","",null,null],[5,"NamedFramebufferRenderbuffer","","",null,null],[5,"NamedFramebufferTexture","","",null,null],[5,"NamedFramebufferTextureLayer","","",null,null],[5,"NamedRenderbufferStorage","","",null,null],[5,"NamedRenderbufferStorageMultisample","","",null,null],[5,"NormalP3ui","","",null,null],[5,"NormalP3uiv","","",null,null],[5,"ObjectLabel","","Fallbacks: ObjectLabelKHR",null,null],[5,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",null,null],[5,"PatchParameterfv","","",null,null],[5,"PatchParameteri","","Fallbacks: PatchParameteriEXT",null,null],[5,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",null,null],[5,"PixelStoref","","",null,null],[5,"PixelStorei","","",null,null],[5,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS",null,null],[5,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS",null,null],[5,"PointParameteri","","Fallbacks: PointParameteriNV",null,null],[5,"PointParameteriv","","Fallbacks: PointParameterivNV",null,null],[5,"PointSize","","",null,null],[5,"PolygonMode","","",null,null],[5,"PolygonOffset","","",null,null],[5,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",null,null],[5,"PrimitiveRestartIndex","","",null,null],[5,"ProgramBinary","","Fallbacks: ProgramBinaryOES",null,null],[5,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",null,null],[5,"ProgramUniform1d","","",null,null],[5,"ProgramUniform1dv","","",null,null],[5,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",null,null],[5,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",null,null],[5,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",null,null],[5,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",null,null],[5,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",null,null],[5,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",null,null],[5,"ProgramUniform2d","","",null,null],[5,"ProgramUniform2dv","","",null,null],[5,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",null,null],[5,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",null,null],[5,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",null,null],[5,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",null,null],[5,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",null,null],[5,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",null,null],[5,"ProgramUniform3d","","",null,null],[5,"ProgramUniform3dv","","",null,null],[5,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",null,null],[5,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",null,null],[5,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",null,null],[5,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",null,null],[5,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",null,null],[5,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",null,null],[5,"ProgramUniform4d","","",null,null],[5,"ProgramUniform4dv","","",null,null],[5,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",null,null],[5,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",null,null],[5,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",null,null],[5,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",null,null],[5,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",null,null],[5,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",null,null],[5,"ProgramUniformMatrix2dv","","",null,null],[5,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",null,null],[5,"ProgramUniformMatrix2x3dv","","",null,null],[5,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",null,null],[5,"ProgramUniformMatrix2x4dv","","",null,null],[5,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",null,null],[5,"ProgramUniformMatrix3dv","","",null,null],[5,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",null,null],[5,"ProgramUniformMatrix3x2dv","","",null,null],[5,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",null,null],[5,"ProgramUniformMatrix3x4dv","","",null,null],[5,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",null,null],[5,"ProgramUniformMatrix4dv","","",null,null],[5,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",null,null],[5,"ProgramUniformMatrix4x2dv","","",null,null],[5,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",null,null],[5,"ProgramUniformMatrix4x3dv","","",null,null],[5,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",null,null],[5,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",null,null],[5,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",null,null],[5,"QueryCounter","","Fallbacks: QueryCounterEXT",null,null],[5,"ReadBuffer","","",null,null],[5,"ReadPixels","","",null,null],[5,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",null,null],[5,"ReleaseShaderCompiler","","",null,null],[5,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",null,null],[5,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV",null,null],[5,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",null,null],[5,"SampleCoverage","","Fallbacks: SampleCoverageARB",null,null],[5,"SampleMaski","","",null,null],[5,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT",null,null],[5,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT",null,null],[5,"SamplerParameterf","","",null,null],[5,"SamplerParameterfv","","",null,null],[5,"SamplerParameteri","","",null,null],[5,"SamplerParameteriv","","",null,null],[5,"Scissor","","",null,null],[5,"ScissorArrayv","","Fallbacks: ScissorArrayvNV",null,null],[5,"ScissorIndexed","","Fallbacks: ScissorIndexedNV",null,null],[5,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV",null,null],[5,"SecondaryColorP3ui","","",null,null],[5,"SecondaryColorP3uiv","","",null,null],[5,"ShaderBinary","","",null,null],[5,"ShaderSource","","Fallbacks: ShaderSourceARB",null,null],[5,"ShaderStorageBlockBinding","","",null,null],[5,"StencilFunc","","",null,null],[5,"StencilFuncSeparate","","",null,null],[5,"StencilMask","","",null,null],[5,"StencilMaskSeparate","","",null,null],[5,"StencilOp","","",null,null],[5,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",null,null],[5,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT",null,null],[5,"TexBufferRange","","Fallbacks: TexBufferRangeEXT",null,null],[5,"TexCoordP1ui","","",null,null],[5,"TexCoordP1uiv","","",null,null],[5,"TexCoordP2ui","","",null,null],[5,"TexCoordP2uiv","","",null,null],[5,"TexCoordP3ui","","",null,null],[5,"TexCoordP3uiv","","",null,null],[5,"TexCoordP4ui","","",null,null],[5,"TexCoordP4uiv","","",null,null],[5,"TexImage1D","","",null,null],[5,"TexImage2D","","",null,null],[5,"TexImage2DMultisample","","",null,null],[5,"TexImage3D","","Fallbacks: TexImage3DEXT, TexImage3DOES",null,null],[5,"TexImage3DMultisample","","",null,null],[5,"TexParameterIiv","","Fallbacks: TexParameterIivEXT",null,null],[5,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT",null,null],[5,"TexParameterf","","",null,null],[5,"TexParameterfv","","",null,null],[5,"TexParameteri","","",null,null],[5,"TexParameteriv","","",null,null],[5,"TexStorage1D","","Fallbacks: TexStorage1DEXT",null,null],[5,"TexStorage2D","","Fallbacks: TexStorage2DEXT",null,null],[5,"TexStorage2DMultisample","","",null,null],[5,"TexStorage3D","","Fallbacks: TexStorage3DEXT",null,null],[5,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",null,null],[5,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",null,null],[5,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",null,null],[5,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT, TexSubImage3DOES",null,null],[5,"TextureBarrier","","",null,null],[5,"TextureBuffer","","",null,null],[5,"TextureBufferRange","","",null,null],[5,"TextureParameterIiv","","",null,null],[5,"TextureParameterIuiv","","",null,null],[5,"TextureParameterf","","",null,null],[5,"TextureParameterfv","","",null,null],[5,"TextureParameteri","","",null,null],[5,"TextureParameteriv","","",null,null],[5,"TextureStorage1D","","",null,null],[5,"TextureStorage2D","","",null,null],[5,"TextureStorage2DMultisample","","",null,null],[5,"TextureStorage3D","","",null,null],[5,"TextureStorage3DMultisample","","",null,null],[5,"TextureSubImage1D","","",null,null],[5,"TextureSubImage2D","","",null,null],[5,"TextureSubImage3D","","",null,null],[5,"TextureView","","Fallbacks: TextureViewEXT",null,null],[5,"TransformFeedbackBufferBase","","",null,null],[5,"TransformFeedbackBufferRange","","",null,null],[5,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",null,null],[5,"Uniform1d","","",null,null],[5,"Uniform1dv","","",null,null],[5,"Uniform1f","","Fallbacks: Uniform1fARB",null,null],[5,"Uniform1fv","","Fallbacks: Uniform1fvARB",null,null],[5,"Uniform1i","","Fallbacks: Uniform1iARB",null,null],[5,"Uniform1iv","","Fallbacks: Uniform1ivARB",null,null],[5,"Uniform1ui","","Fallbacks: Uniform1uiEXT",null,null],[5,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",null,null],[5,"Uniform2d","","",null,null],[5,"Uniform2dv","","",null,null],[5,"Uniform2f","","Fallbacks: Uniform2fARB",null,null],[5,"Uniform2fv","","Fallbacks: Uniform2fvARB",null,null],[5,"Uniform2i","","Fallbacks: Uniform2iARB",null,null],[5,"Uniform2iv","","Fallbacks: Uniform2ivARB",null,null],[5,"Uniform2ui","","Fallbacks: Uniform2uiEXT",null,null],[5,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",null,null],[5,"Uniform3d","","",null,null],[5,"Uniform3dv","","",null,null],[5,"Uniform3f","","Fallbacks: Uniform3fARB",null,null],[5,"Uniform3fv","","Fallbacks: Uniform3fvARB",null,null],[5,"Uniform3i","","Fallbacks: Uniform3iARB",null,null],[5,"Uniform3iv","","Fallbacks: Uniform3ivARB",null,null],[5,"Uniform3ui","","Fallbacks: Uniform3uiEXT",null,null],[5,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",null,null],[5,"Uniform4d","","",null,null],[5,"Uniform4dv","","",null,null],[5,"Uniform4f","","Fallbacks: Uniform4fARB",null,null],[5,"Uniform4fv","","Fallbacks: Uniform4fvARB",null,null],[5,"Uniform4i","","Fallbacks: Uniform4iARB",null,null],[5,"Uniform4iv","","Fallbacks: Uniform4ivARB",null,null],[5,"Uniform4ui","","Fallbacks: Uniform4uiEXT",null,null],[5,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",null,null],[5,"UniformBlockBinding","","",null,null],[5,"UniformMatrix2dv","","",null,null],[5,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",null,null],[5,"UniformMatrix2x3dv","","",null,null],[5,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",null,null],[5,"UniformMatrix2x4dv","","",null,null],[5,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",null,null],[5,"UniformMatrix3dv","","",null,null],[5,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",null,null],[5,"UniformMatrix3x2dv","","",null,null],[5,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",null,null],[5,"UniformMatrix3x4dv","","",null,null],[5,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",null,null],[5,"UniformMatrix4dv","","",null,null],[5,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",null,null],[5,"UniformMatrix4x2dv","","",null,null],[5,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",null,null],[5,"UniformMatrix4x3dv","","",null,null],[5,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",null,null],[5,"UniformSubroutinesuiv","","",null,null],[5,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",null,{"inputs":[{"name":"glenum"}],"output":{"name":"glboolean"}}],[5,"UnmapNamedBuffer","","",null,{"inputs":[{"name":"gluint"}],"output":{"name":"glboolean"}}],[5,"UseProgram","","Fallbacks: UseProgramObjectARB",null,null],[5,"UseProgramStages","","",null,null],[5,"ValidateProgram","","Fallbacks: ValidateProgramARB",null,null],[5,"ValidateProgramPipeline","","",null,null],[5,"VertexArrayAttribBinding","","",null,null],[5,"VertexArrayAttribFormat","","",null,null],[5,"VertexArrayAttribIFormat","","",null,null],[5,"VertexArrayAttribLFormat","","",null,null],[5,"VertexArrayBindingDivisor","","",null,null],[5,"VertexArrayElementBuffer","","",null,null],[5,"VertexArrayVertexBuffer","","",null,null],[5,"VertexArrayVertexBuffers","","",null,null],[5,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",null,null],[5,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",null,null],[5,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",null,null],[5,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",null,null],[5,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",null,null],[5,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",null,null],[5,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",null,null],[5,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",null,null],[5,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",null,null],[5,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",null,null],[5,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",null,null],[5,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",null,null],[5,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",null,null],[5,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",null,null],[5,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",null,null],[5,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",null,null],[5,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",null,null],[5,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",null,null],[5,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",null,null],[5,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",null,null],[5,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",null,null],[5,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",null,null],[5,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",null,null],[5,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",null,null],[5,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",null,null],[5,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",null,null],[5,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",null,null],[5,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",null,null],[5,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",null,null],[5,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",null,null],[5,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",null,null],[5,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",null,null],[5,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",null,null],[5,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",null,null],[5,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",null,null],[5,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",null,null],[5,"VertexAttribBinding","","",null,null],[5,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV",null,null],[5,"VertexAttribFormat","","",null,null],[5,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",null,null],[5,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",null,null],[5,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",null,null],[5,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",null,null],[5,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",null,null],[5,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",null,null],[5,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",null,null],[5,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",null,null],[5,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",null,null],[5,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",null,null],[5,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",null,null],[5,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",null,null],[5,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",null,null],[5,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",null,null],[5,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",null,null],[5,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",null,null],[5,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",null,null],[5,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",null,null],[5,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",null,null],[5,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",null,null],[5,"VertexAttribIFormat","","",null,null],[5,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",null,null],[5,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",null,null],[5,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",null,null],[5,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",null,null],[5,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",null,null],[5,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",null,null],[5,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",null,null],[5,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",null,null],[5,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",null,null],[5,"VertexAttribLFormat","","",null,null],[5,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",null,null],[5,"VertexAttribP1ui","","",null,null],[5,"VertexAttribP1uiv","","",null,null],[5,"VertexAttribP2ui","","",null,null],[5,"VertexAttribP2uiv","","",null,null],[5,"VertexAttribP3ui","","",null,null],[5,"VertexAttribP3uiv","","",null,null],[5,"VertexAttribP4ui","","",null,null],[5,"VertexAttribP4uiv","","",null,null],[5,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",null,null],[5,"VertexBindingDivisor","","",null,null],[5,"VertexP2ui","","",null,null],[5,"VertexP2uiv","","",null,null],[5,"VertexP3ui","","",null,null],[5,"VertexP3uiv","","",null,null],[5,"VertexP4ui","","",null,null],[5,"VertexP4uiv","","",null,null],[5,"Viewport","","",null,null],[5,"ViewportArrayv","","Fallbacks: ViewportArrayvNV",null,null],[5,"ViewportIndexedf","","Fallbacks: ViewportIndexedfNV",null,null],[5,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvNV",null,null],[5,"WaitSync","","Fallbacks: WaitSyncAPPLE",null,null],[5,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the\nuse of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`.\n~~~ignore\ngl::load_with(|s| glfw.get_proc_address(s));\n~~~",null,{"inputs":[{"name":"f"}],"output":null}],[5,"load","","Load each OpenGL symbol using a custom load function.",null,{"inputs":[{"name":"t"}],"output":null}],[0,"types","","",null,null],[3,"__GLsync","gl::types","",null,null],[3,"_cl_context","","",null,null],[3,"_cl_event","","",null,null],[6,"GLenum","","",null,null],[6,"GLboolean","","",null,null],[6,"GLbitfield","","",null,null],[6,"GLvoid","","",null,null],[6,"GLbyte","","",null,null],[6,"GLshort","","",null,null],[6,"GLint","","",null,null],[6,"GLclampx","","",null,null],[6,"GLubyte","","",null,null],[6,"GLushort","","",null,null],[6,"GLuint","","",null,null],[6,"GLsizei","","",null,null],[6,"GLfloat","","",null,null],[6,"GLclampf","","",null,null],[6,"GLdouble","","",null,null],[6,"GLclampd","","",null,null],[6,"GLeglImageOES","","",null,null],[6,"GLchar","","",null,null],[6,"GLcharARB","","",null,null],[6,"GLhandleARB","","",null,null],[6,"GLhalfARB","","",null,null],[6,"GLhalf","","",null,null],[6,"GLfixed","","",null,null],[6,"GLintptr","","",null,null],[6,"GLsizeiptr","","",null,null],[6,"GLint64","","",null,null],[6,"GLuint64","","",null,null],[6,"GLintptrARB","","",null,null],[6,"GLsizeiptrARB","","",null,null],[6,"GLint64EXT","","",null,null],[6,"GLuint64EXT","","",null,null],[6,"GLsync","","",null,null],[6,"GLDEBUGPROC","","",null,null],[6,"GLDEBUGPROCARB","","",null,null],[6,"GLDEBUGPROCKHR","","",null,null],[6,"GLDEBUGPROCAMD","","",null,null],[6,"GLhalfNV","","",null,null],[6,"GLvdpauSurfaceNV","","",null,null],[0,"ActiveShaderProgram","gl","",null,null],[5,"is_loaded","gl::ActiveShaderProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ActiveTexture","gl","",null,null],[5,"is_loaded","gl::ActiveTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"AttachShader","gl","",null,null],[5,"is_loaded","gl::AttachShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BeginConditionalRender","gl","",null,null],[5,"is_loaded","gl::BeginConditionalRender","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BeginQuery","gl","",null,null],[5,"is_loaded","gl::BeginQuery","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BeginQueryIndexed","gl","",null,null],[5,"is_loaded","gl::BeginQueryIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BeginTransformFeedback","gl","",null,null],[5,"is_loaded","gl::BeginTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindAttribLocation","gl","",null,null],[5,"is_loaded","gl::BindAttribLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBuffer","gl","",null,null],[5,"is_loaded","gl::BindBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBufferBase","gl","",null,null],[5,"is_loaded","gl::BindBufferBase","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBufferRange","gl","",null,null],[5,"is_loaded","gl::BindBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBuffersBase","gl","",null,null],[5,"is_loaded","gl::BindBuffersBase","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindBuffersRange","gl","",null,null],[5,"is_loaded","gl::BindBuffersRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindFragDataLocation","gl","",null,null],[5,"is_loaded","gl::BindFragDataLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindFragDataLocationIndexed","gl","",null,null],[5,"is_loaded","gl::BindFragDataLocationIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindFramebuffer","gl","",null,null],[5,"is_loaded","gl::BindFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindImageTexture","gl","",null,null],[5,"is_loaded","gl::BindImageTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindImageTextures","gl","",null,null],[5,"is_loaded","gl::BindImageTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindProgramPipeline","gl","",null,null],[5,"is_loaded","gl::BindProgramPipeline","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindRenderbuffer","gl","",null,null],[5,"is_loaded","gl::BindRenderbuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindSampler","gl","",null,null],[5,"is_loaded","gl::BindSampler","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindSamplers","gl","",null,null],[5,"is_loaded","gl::BindSamplers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindTexture","gl","",null,null],[5,"is_loaded","gl::BindTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindTextureUnit","gl","",null,null],[5,"is_loaded","gl::BindTextureUnit","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindTextures","gl","",null,null],[5,"is_loaded","gl::BindTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindTransformFeedback","gl","",null,null],[5,"is_loaded","gl::BindTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindVertexArray","gl","",null,null],[5,"is_loaded","gl::BindVertexArray","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindVertexBuffer","gl","",null,null],[5,"is_loaded","gl::BindVertexBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BindVertexBuffers","gl","",null,null],[5,"is_loaded","gl::BindVertexBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendColor","gl","",null,null],[5,"is_loaded","gl::BlendColor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendEquation","gl","",null,null],[5,"is_loaded","gl::BlendEquation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendEquationSeparate","gl","",null,null],[5,"is_loaded","gl::BlendEquationSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendEquationSeparatei","gl","",null,null],[5,"is_loaded","gl::BlendEquationSeparatei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendEquationi","gl","",null,null],[5,"is_loaded","gl::BlendEquationi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendFunc","gl","",null,null],[5,"is_loaded","gl::BlendFunc","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendFuncSeparate","gl","",null,null],[5,"is_loaded","gl::BlendFuncSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendFuncSeparatei","gl","",null,null],[5,"is_loaded","gl::BlendFuncSeparatei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlendFunci","gl","",null,null],[5,"is_loaded","gl::BlendFunci","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlitFramebuffer","gl","",null,null],[5,"is_loaded","gl::BlitFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BlitNamedFramebuffer","gl","",null,null],[5,"is_loaded","gl::BlitNamedFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BufferData","gl","",null,null],[5,"is_loaded","gl::BufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BufferStorage","gl","",null,null],[5,"is_loaded","gl::BufferStorage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"BufferSubData","gl","",null,null],[5,"is_loaded","gl::BufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CheckFramebufferStatus","gl","",null,null],[5,"is_loaded","gl::CheckFramebufferStatus","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CheckNamedFramebufferStatus","gl","",null,null],[5,"is_loaded","gl::CheckNamedFramebufferStatus","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClampColor","gl","",null,null],[5,"is_loaded","gl::ClampColor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Clear","gl","",null,null],[5,"is_loaded","gl::Clear","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferData","gl","",null,null],[5,"is_loaded","gl::ClearBufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferSubData","gl","",null,null],[5,"is_loaded","gl::ClearBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferfi","gl","",null,null],[5,"is_loaded","gl::ClearBufferfi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferfv","gl","",null,null],[5,"is_loaded","gl::ClearBufferfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferiv","gl","",null,null],[5,"is_loaded","gl::ClearBufferiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearBufferuiv","gl","",null,null],[5,"is_loaded","gl::ClearBufferuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearColor","gl","",null,null],[5,"is_loaded","gl::ClearColor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearDepth","gl","",null,null],[5,"is_loaded","gl::ClearDepth","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearDepthf","gl","",null,null],[5,"is_loaded","gl::ClearDepthf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedBufferData","gl","",null,null],[5,"is_loaded","gl::ClearNamedBufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::ClearNamedBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedFramebufferfi","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferfi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedFramebufferfv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedFramebufferiv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearNamedFramebufferuiv","gl","",null,null],[5,"is_loaded","gl::ClearNamedFramebufferuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearStencil","gl","",null,null],[5,"is_loaded","gl::ClearStencil","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearTexImage","gl","",null,null],[5,"is_loaded","gl::ClearTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClearTexSubImage","gl","",null,null],[5,"is_loaded","gl::ClearTexSubImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClientWaitSync","gl","",null,null],[5,"is_loaded","gl::ClientWaitSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ClipControl","gl","",null,null],[5,"is_loaded","gl::ClipControl","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorMask","gl","",null,null],[5,"is_loaded","gl::ColorMask","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorMaski","gl","",null,null],[5,"is_loaded","gl::ColorMaski","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorP3ui","gl","",null,null],[5,"is_loaded","gl::ColorP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorP3uiv","gl","",null,null],[5,"is_loaded","gl::ColorP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorP4ui","gl","",null,null],[5,"is_loaded","gl::ColorP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ColorP4uiv","gl","",null,null],[5,"is_loaded","gl::ColorP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompileShader","gl","",null,null],[5,"is_loaded","gl::CompileShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTexImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexSubImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexSubImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTexSubImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTexSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CompressedTextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::CompressedTextureSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyBufferSubData","gl","",null,null],[5,"is_loaded","gl::CopyBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyImageSubData","gl","",null,null],[5,"is_loaded","gl::CopyImageSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::CopyNamedBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTexImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTexImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexSubImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexSubImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTexSubImage3D","gl","",null,null],[5,"is_loaded","gl::CopyTexSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CopyTextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::CopyTextureSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateBuffers","gl","",null,null],[5,"is_loaded","gl::CreateBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateFramebuffers","gl","",null,null],[5,"is_loaded","gl::CreateFramebuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateProgram","gl","",null,null],[5,"is_loaded","gl::CreateProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateProgramPipelines","gl","",null,null],[5,"is_loaded","gl::CreateProgramPipelines","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateQueries","gl","",null,null],[5,"is_loaded","gl::CreateQueries","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateRenderbuffers","gl","",null,null],[5,"is_loaded","gl::CreateRenderbuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateSamplers","gl","",null,null],[5,"is_loaded","gl::CreateSamplers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateShader","gl","",null,null],[5,"is_loaded","gl::CreateShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateShaderProgramv","gl","",null,null],[5,"is_loaded","gl::CreateShaderProgramv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateTextures","gl","",null,null],[5,"is_loaded","gl::CreateTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::CreateTransformFeedbacks","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CreateVertexArrays","gl","",null,null],[5,"is_loaded","gl::CreateVertexArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"CullFace","gl","",null,null],[5,"is_loaded","gl::CullFace","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DebugMessageCallback","gl","",null,null],[5,"is_loaded","gl::DebugMessageCallback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DebugMessageControl","gl","",null,null],[5,"is_loaded","gl::DebugMessageControl","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DebugMessageInsert","gl","",null,null],[5,"is_loaded","gl::DebugMessageInsert","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteBuffers","gl","",null,null],[5,"is_loaded","gl::DeleteBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteFramebuffers","gl","",null,null],[5,"is_loaded","gl::DeleteFramebuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteProgram","gl","",null,null],[5,"is_loaded","gl::DeleteProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteProgramPipelines","gl","",null,null],[5,"is_loaded","gl::DeleteProgramPipelines","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteQueries","gl","",null,null],[5,"is_loaded","gl::DeleteQueries","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteRenderbuffers","gl","",null,null],[5,"is_loaded","gl::DeleteRenderbuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteSamplers","gl","",null,null],[5,"is_loaded","gl::DeleteSamplers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteShader","gl","",null,null],[5,"is_loaded","gl::DeleteShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteSync","gl","",null,null],[5,"is_loaded","gl::DeleteSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteTextures","gl","",null,null],[5,"is_loaded","gl::DeleteTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::DeleteTransformFeedbacks","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DeleteVertexArrays","gl","",null,null],[5,"is_loaded","gl::DeleteVertexArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthFunc","gl","",null,null],[5,"is_loaded","gl::DepthFunc","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthMask","gl","",null,null],[5,"is_loaded","gl::DepthMask","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthRange","gl","",null,null],[5,"is_loaded","gl::DepthRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthRangeArrayv","gl","",null,null],[5,"is_loaded","gl::DepthRangeArrayv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthRangeIndexed","gl","",null,null],[5,"is_loaded","gl::DepthRangeIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DepthRangef","gl","",null,null],[5,"is_loaded","gl::DepthRangef","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DetachShader","gl","",null,null],[5,"is_loaded","gl::DetachShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Disable","gl","",null,null],[5,"is_loaded","gl::Disable","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DisableVertexArrayAttrib","gl","",null,null],[5,"is_loaded","gl::DisableVertexArrayAttrib","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DisableVertexAttribArray","gl","",null,null],[5,"is_loaded","gl::DisableVertexAttribArray","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Disablei","gl","",null,null],[5,"is_loaded","gl::Disablei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DispatchCompute","gl","",null,null],[5,"is_loaded","gl::DispatchCompute","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DispatchComputeIndirect","gl","",null,null],[5,"is_loaded","gl::DispatchComputeIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawArrays","gl","",null,null],[5,"is_loaded","gl::DrawArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawArraysIndirect","gl","",null,null],[5,"is_loaded","gl::DrawArraysIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawArraysInstanced","gl","",null,null],[5,"is_loaded","gl::DrawArraysInstanced","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawArraysInstancedBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawArraysInstancedBaseInstance","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawBuffer","gl","",null,null],[5,"is_loaded","gl::DrawBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawBuffers","gl","",null,null],[5,"is_loaded","gl::DrawBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElements","gl","",null,null],[5,"is_loaded","gl::DrawElements","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawElementsBaseVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsIndirect","gl","",null,null],[5,"is_loaded","gl::DrawElementsIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsInstanced","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstanced","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsInstancedBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseInstance","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsInstancedBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawElementsInstancedBaseVertexBaseInstance","gl","",null,null],[5,"is_loaded","gl::DrawElementsInstancedBaseVertexBaseInstance","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawRangeElements","gl","",null,null],[5,"is_loaded","gl::DrawRangeElements","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawRangeElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::DrawRangeElementsBaseVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawTransformFeedback","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawTransformFeedbackInstanced","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackInstanced","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawTransformFeedbackStream","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackStream","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"DrawTransformFeedbackStreamInstanced","gl","",null,null],[5,"is_loaded","gl::DrawTransformFeedbackStreamInstanced","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Enable","gl","",null,null],[5,"is_loaded","gl::Enable","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EnableVertexArrayAttrib","gl","",null,null],[5,"is_loaded","gl::EnableVertexArrayAttrib","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EnableVertexAttribArray","gl","",null,null],[5,"is_loaded","gl::EnableVertexAttribArray","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Enablei","gl","",null,null],[5,"is_loaded","gl::Enablei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EndConditionalRender","gl","",null,null],[5,"is_loaded","gl::EndConditionalRender","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EndQuery","gl","",null,null],[5,"is_loaded","gl::EndQuery","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EndQueryIndexed","gl","",null,null],[5,"is_loaded","gl::EndQueryIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"EndTransformFeedback","gl","",null,null],[5,"is_loaded","gl::EndTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FenceSync","gl","",null,null],[5,"is_loaded","gl::FenceSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Finish","gl","",null,null],[5,"is_loaded","gl::Finish","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Flush","gl","",null,null],[5,"is_loaded","gl::Flush","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FlushMappedBufferRange","gl","",null,null],[5,"is_loaded","gl::FlushMappedBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FlushMappedNamedBufferRange","gl","",null,null],[5,"is_loaded","gl::FlushMappedNamedBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferParameteri","gl","",null,null],[5,"is_loaded","gl::FramebufferParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferRenderbuffer","gl","",null,null],[5,"is_loaded","gl::FramebufferRenderbuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTexture","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTexture1D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTexture2D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTexture3D","gl","",null,null],[5,"is_loaded","gl::FramebufferTexture3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FramebufferTextureLayer","gl","",null,null],[5,"is_loaded","gl::FramebufferTextureLayer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"FrontFace","gl","",null,null],[5,"is_loaded","gl::FrontFace","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenBuffers","gl","",null,null],[5,"is_loaded","gl::GenBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenFramebuffers","gl","",null,null],[5,"is_loaded","gl::GenFramebuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenProgramPipelines","gl","",null,null],[5,"is_loaded","gl::GenProgramPipelines","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenQueries","gl","",null,null],[5,"is_loaded","gl::GenQueries","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenRenderbuffers","gl","",null,null],[5,"is_loaded","gl::GenRenderbuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenSamplers","gl","",null,null],[5,"is_loaded","gl::GenSamplers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenTextures","gl","",null,null],[5,"is_loaded","gl::GenTextures","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenTransformFeedbacks","gl","",null,null],[5,"is_loaded","gl::GenTransformFeedbacks","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenVertexArrays","gl","",null,null],[5,"is_loaded","gl::GenVertexArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenerateMipmap","gl","",null,null],[5,"is_loaded","gl::GenerateMipmap","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GenerateTextureMipmap","gl","",null,null],[5,"is_loaded","gl::GenerateTextureMipmap","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveAtomicCounterBufferiv","gl","",null,null],[5,"is_loaded","gl::GetActiveAtomicCounterBufferiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveAttrib","gl","",null,null],[5,"is_loaded","gl::GetActiveAttrib","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveSubroutineName","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveSubroutineUniformName","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineUniformName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveSubroutineUniformiv","gl","",null,null],[5,"is_loaded","gl::GetActiveSubroutineUniformiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniform","gl","",null,null],[5,"is_loaded","gl::GetActiveUniform","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniformBlockName","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformBlockName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniformBlockiv","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformBlockiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniformName","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetActiveUniformsiv","gl","",null,null],[5,"is_loaded","gl::GetActiveUniformsiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetAttachedShaders","gl","",null,null],[5,"is_loaded","gl::GetAttachedShaders","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetAttribLocation","gl","",null,null],[5,"is_loaded","gl::GetAttribLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBooleani_v","gl","",null,null],[5,"is_loaded","gl::GetBooleani_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBooleanv","gl","",null,null],[5,"is_loaded","gl::GetBooleanv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBufferParameteri64v","gl","",null,null],[5,"is_loaded","gl::GetBufferParameteri64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetBufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBufferPointerv","gl","",null,null],[5,"is_loaded","gl::GetBufferPointerv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetBufferSubData","gl","",null,null],[5,"is_loaded","gl::GetBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetCompressedTexImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetCompressedTextureImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTextureImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetCompressedTextureSubImage","gl","",null,null],[5,"is_loaded","gl::GetCompressedTextureSubImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetDebugMessageLog","gl","",null,null],[5,"is_loaded","gl::GetDebugMessageLog","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetDoublei_v","gl","",null,null],[5,"is_loaded","gl::GetDoublei_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetDoublev","gl","",null,null],[5,"is_loaded","gl::GetDoublev","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetError","gl","",null,null],[5,"is_loaded","gl::GetError","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFloati_v","gl","",null,null],[5,"is_loaded","gl::GetFloati_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFloatv","gl","",null,null],[5,"is_loaded","gl::GetFloatv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFragDataIndex","gl","",null,null],[5,"is_loaded","gl::GetFragDataIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFragDataLocation","gl","",null,null],[5,"is_loaded","gl::GetFragDataLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFramebufferAttachmentParameteriv","gl","",null,null],[5,"is_loaded","gl::GetFramebufferAttachmentParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetFramebufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetFramebufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetGraphicsResetStatus","gl","",null,null],[5,"is_loaded","gl::GetGraphicsResetStatus","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetInteger64i_v","gl","",null,null],[5,"is_loaded","gl::GetInteger64i_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetInteger64v","gl","",null,null],[5,"is_loaded","gl::GetInteger64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetIntegeri_v","gl","",null,null],[5,"is_loaded","gl::GetIntegeri_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetIntegerv","gl","",null,null],[5,"is_loaded","gl::GetIntegerv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetInternalformati64v","gl","",null,null],[5,"is_loaded","gl::GetInternalformati64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetInternalformativ","gl","",null,null],[5,"is_loaded","gl::GetInternalformativ","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetMultisamplefv","gl","",null,null],[5,"is_loaded","gl::GetMultisamplefv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedBufferParameteri64v","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferParameteri64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedBufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedBufferPointerv","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferPointerv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::GetNamedBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedFramebufferAttachmentParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedFramebufferAttachmentParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedFramebufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedFramebufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetNamedRenderbufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetNamedRenderbufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetObjectLabel","gl","",null,null],[5,"is_loaded","gl::GetObjectLabel","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetObjectPtrLabel","gl","",null,null],[5,"is_loaded","gl::GetObjectPtrLabel","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramBinary","gl","",null,null],[5,"is_loaded","gl::GetProgramBinary","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramInfoLog","gl","",null,null],[5,"is_loaded","gl::GetProgramInfoLog","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramInterfaceiv","gl","",null,null],[5,"is_loaded","gl::GetProgramInterfaceiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramPipelineInfoLog","gl","",null,null],[5,"is_loaded","gl::GetProgramPipelineInfoLog","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramPipelineiv","gl","",null,null],[5,"is_loaded","gl::GetProgramPipelineiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceIndex","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceLocation","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceLocationIndex","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceLocationIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceName","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceName","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramResourceiv","gl","",null,null],[5,"is_loaded","gl::GetProgramResourceiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramStageiv","gl","",null,null],[5,"is_loaded","gl::GetProgramStageiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetProgramiv","gl","",null,null],[5,"is_loaded","gl::GetProgramiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryBufferObjecti64v","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjecti64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryBufferObjectiv","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryBufferObjectui64v","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectui64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryBufferObjectuiv","gl","",null,null],[5,"is_loaded","gl::GetQueryBufferObjectuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryIndexediv","gl","",null,null],[5,"is_loaded","gl::GetQueryIndexediv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryObjecti64v","gl","",null,null],[5,"is_loaded","gl::GetQueryObjecti64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryObjectiv","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryObjectui64v","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectui64v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryObjectuiv","gl","",null,null],[5,"is_loaded","gl::GetQueryObjectuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetQueryiv","gl","",null,null],[5,"is_loaded","gl::GetQueryiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetRenderbufferParameteriv","gl","",null,null],[5,"is_loaded","gl::GetRenderbufferParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSamplerParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSamplerParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSamplerParameterfv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSamplerParameteriv","gl","",null,null],[5,"is_loaded","gl::GetSamplerParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetShaderInfoLog","gl","",null,null],[5,"is_loaded","gl::GetShaderInfoLog","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetShaderPrecisionFormat","gl","",null,null],[5,"is_loaded","gl::GetShaderPrecisionFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetShaderSource","gl","",null,null],[5,"is_loaded","gl::GetShaderSource","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetShaderiv","gl","",null,null],[5,"is_loaded","gl::GetShaderiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetString","gl","",null,null],[5,"is_loaded","gl::GetString","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetStringi","gl","",null,null],[5,"is_loaded","gl::GetStringi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSubroutineIndex","gl","",null,null],[5,"is_loaded","gl::GetSubroutineIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSubroutineUniformLocation","gl","",null,null],[5,"is_loaded","gl::GetSubroutineUniformLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetSynciv","gl","",null,null],[5,"is_loaded","gl::GetSynciv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexImage","gl","",null,null],[5,"is_loaded","gl::GetTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexLevelParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTexLevelParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexLevelParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTexLevelParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTexParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTexParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTexParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureImage","gl","",null,null],[5,"is_loaded","gl::GetTextureImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureLevelParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTextureLevelParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureLevelParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTextureLevelParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureParameterIiv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureParameterIuiv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureParameterfv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureParameteriv","gl","",null,null],[5,"is_loaded","gl::GetTextureParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTextureSubImage","gl","",null,null],[5,"is_loaded","gl::GetTextureSubImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTransformFeedbackVarying","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbackVarying","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTransformFeedbacki64_v","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbacki64_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTransformFeedbacki_v","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbacki_v","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetTransformFeedbackiv","gl","",null,null],[5,"is_loaded","gl::GetTransformFeedbackiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformBlockIndex","gl","",null,null],[5,"is_loaded","gl::GetUniformBlockIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformIndices","gl","",null,null],[5,"is_loaded","gl::GetUniformIndices","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformLocation","gl","",null,null],[5,"is_loaded","gl::GetUniformLocation","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformSubroutineuiv","gl","",null,null],[5,"is_loaded","gl::GetUniformSubroutineuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformdv","gl","",null,null],[5,"is_loaded","gl::GetUniformdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformfv","gl","",null,null],[5,"is_loaded","gl::GetUniformfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformiv","gl","",null,null],[5,"is_loaded","gl::GetUniformiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetUniformuiv","gl","",null,null],[5,"is_loaded","gl::GetUniformuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexArrayIndexed64iv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayIndexed64iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexArrayIndexediv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayIndexediv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexArrayiv","gl","",null,null],[5,"is_loaded","gl::GetVertexArrayiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribIiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribIuiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribLdv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribLdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribPointerv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribPointerv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribdv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribfv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetVertexAttribiv","gl","",null,null],[5,"is_loaded","gl::GetVertexAttribiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnColorTable","gl","",null,null],[5,"is_loaded","gl::GetnColorTable","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnCompressedTexImage","gl","",null,null],[5,"is_loaded","gl::GetnCompressedTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnConvolutionFilter","gl","",null,null],[5,"is_loaded","gl::GetnConvolutionFilter","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnHistogram","gl","",null,null],[5,"is_loaded","gl::GetnHistogram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnMapdv","gl","",null,null],[5,"is_loaded","gl::GetnMapdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnMapfv","gl","",null,null],[5,"is_loaded","gl::GetnMapfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnMapiv","gl","",null,null],[5,"is_loaded","gl::GetnMapiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnMinmax","gl","",null,null],[5,"is_loaded","gl::GetnMinmax","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnPixelMapfv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnPixelMapuiv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnPixelMapusv","gl","",null,null],[5,"is_loaded","gl::GetnPixelMapusv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnPolygonStipple","gl","",null,null],[5,"is_loaded","gl::GetnPolygonStipple","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnSeparableFilter","gl","",null,null],[5,"is_loaded","gl::GetnSeparableFilter","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnTexImage","gl","",null,null],[5,"is_loaded","gl::GetnTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnUniformdv","gl","",null,null],[5,"is_loaded","gl::GetnUniformdv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnUniformfv","gl","",null,null],[5,"is_loaded","gl::GetnUniformfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnUniformiv","gl","",null,null],[5,"is_loaded","gl::GetnUniformiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"GetnUniformuiv","gl","",null,null],[5,"is_loaded","gl::GetnUniformuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Hint","gl","",null,null],[5,"is_loaded","gl::Hint","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateBufferData","gl","",null,null],[5,"is_loaded","gl::InvalidateBufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateBufferSubData","gl","",null,null],[5,"is_loaded","gl::InvalidateBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateFramebuffer","gl","",null,null],[5,"is_loaded","gl::InvalidateFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateNamedFramebufferData","gl","",null,null],[5,"is_loaded","gl::InvalidateNamedFramebufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateNamedFramebufferSubData","gl","",null,null],[5,"is_loaded","gl::InvalidateNamedFramebufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateSubFramebuffer","gl","",null,null],[5,"is_loaded","gl::InvalidateSubFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateTexImage","gl","",null,null],[5,"is_loaded","gl::InvalidateTexImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"InvalidateTexSubImage","gl","",null,null],[5,"is_loaded","gl::InvalidateTexSubImage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsBuffer","gl","",null,null],[5,"is_loaded","gl::IsBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsEnabled","gl","",null,null],[5,"is_loaded","gl::IsEnabled","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsEnabledi","gl","",null,null],[5,"is_loaded","gl::IsEnabledi","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsFramebuffer","gl","",null,null],[5,"is_loaded","gl::IsFramebuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsProgram","gl","",null,null],[5,"is_loaded","gl::IsProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsProgramPipeline","gl","",null,null],[5,"is_loaded","gl::IsProgramPipeline","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsQuery","gl","",null,null],[5,"is_loaded","gl::IsQuery","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsRenderbuffer","gl","",null,null],[5,"is_loaded","gl::IsRenderbuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsSampler","gl","",null,null],[5,"is_loaded","gl::IsSampler","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsShader","gl","",null,null],[5,"is_loaded","gl::IsShader","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsSync","gl","",null,null],[5,"is_loaded","gl::IsSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsTexture","gl","",null,null],[5,"is_loaded","gl::IsTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsTransformFeedback","gl","",null,null],[5,"is_loaded","gl::IsTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"IsVertexArray","gl","",null,null],[5,"is_loaded","gl::IsVertexArray","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"LineWidth","gl","",null,null],[5,"is_loaded","gl::LineWidth","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"LinkProgram","gl","",null,null],[5,"is_loaded","gl::LinkProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"LogicOp","gl","",null,null],[5,"is_loaded","gl::LogicOp","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MapBuffer","gl","",null,null],[5,"is_loaded","gl::MapBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MapBufferRange","gl","",null,null],[5,"is_loaded","gl::MapBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MapNamedBuffer","gl","",null,null],[5,"is_loaded","gl::MapNamedBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MapNamedBufferRange","gl","",null,null],[5,"is_loaded","gl::MapNamedBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MemoryBarrier","gl","",null,null],[5,"is_loaded","gl::MemoryBarrier","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MemoryBarrierByRegion","gl","",null,null],[5,"is_loaded","gl::MemoryBarrierByRegion","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MinSampleShading","gl","",null,null],[5,"is_loaded","gl::MinSampleShading","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawArrays","gl","",null,null],[5,"is_loaded","gl::MultiDrawArrays","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawArraysIndirect","gl","",null,null],[5,"is_loaded","gl::MultiDrawArraysIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawElements","gl","",null,null],[5,"is_loaded","gl::MultiDrawElements","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawElementsBaseVertex","gl","",null,null],[5,"is_loaded","gl::MultiDrawElementsBaseVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiDrawElementsIndirect","gl","",null,null],[5,"is_loaded","gl::MultiDrawElementsIndirect","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP1ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP1uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP2ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP2uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP3ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP3uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP4ui","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"MultiTexCoordP4uiv","gl","",null,null],[5,"is_loaded","gl::MultiTexCoordP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedBufferData","gl","",null,null],[5,"is_loaded","gl::NamedBufferData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedBufferStorage","gl","",null,null],[5,"is_loaded","gl::NamedBufferStorage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedBufferSubData","gl","",null,null],[5,"is_loaded","gl::NamedBufferSubData","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferDrawBuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferDrawBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferDrawBuffers","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferDrawBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferParameteri","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferReadBuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferReadBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferRenderbuffer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferRenderbuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferTexture","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferTexture","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedFramebufferTextureLayer","gl","",null,null],[5,"is_loaded","gl::NamedFramebufferTextureLayer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedRenderbufferStorage","gl","",null,null],[5,"is_loaded","gl::NamedRenderbufferStorage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NamedRenderbufferStorageMultisample","gl","",null,null],[5,"is_loaded","gl::NamedRenderbufferStorageMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NormalP3ui","gl","",null,null],[5,"is_loaded","gl::NormalP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"NormalP3uiv","gl","",null,null],[5,"is_loaded","gl::NormalP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ObjectLabel","gl","",null,null],[5,"is_loaded","gl::ObjectLabel","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ObjectPtrLabel","gl","",null,null],[5,"is_loaded","gl::ObjectPtrLabel","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PatchParameterfv","gl","",null,null],[5,"is_loaded","gl::PatchParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PatchParameteri","gl","",null,null],[5,"is_loaded","gl::PatchParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PauseTransformFeedback","gl","",null,null],[5,"is_loaded","gl::PauseTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PixelStoref","gl","",null,null],[5,"is_loaded","gl::PixelStoref","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PixelStorei","gl","",null,null],[5,"is_loaded","gl::PixelStorei","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointParameterf","gl","",null,null],[5,"is_loaded","gl::PointParameterf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointParameterfv","gl","",null,null],[5,"is_loaded","gl::PointParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointParameteri","gl","",null,null],[5,"is_loaded","gl::PointParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointParameteriv","gl","",null,null],[5,"is_loaded","gl::PointParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PointSize","gl","",null,null],[5,"is_loaded","gl::PointSize","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PolygonMode","gl","",null,null],[5,"is_loaded","gl::PolygonMode","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PolygonOffset","gl","",null,null],[5,"is_loaded","gl::PolygonOffset","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PopDebugGroup","gl","",null,null],[5,"is_loaded","gl::PopDebugGroup","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PrimitiveRestartIndex","gl","",null,null],[5,"is_loaded","gl::PrimitiveRestartIndex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramBinary","gl","",null,null],[5,"is_loaded","gl::ProgramBinary","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramParameteri","gl","",null,null],[5,"is_loaded","gl::ProgramParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform1uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform2uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform3uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4d","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4f","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4i","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4iv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4ui","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniform4uiv","gl","",null,null],[5,"is_loaded","gl::ProgramUniform4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2x3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2x3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2x4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix2x4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix2x4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3x2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3x2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3x4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix3x4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix3x4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4x2dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4x2fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4x3dv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProgramUniformMatrix4x3fv","gl","",null,null],[5,"is_loaded","gl::ProgramUniformMatrix4x3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ProvokingVertex","gl","",null,null],[5,"is_loaded","gl::ProvokingVertex","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"PushDebugGroup","gl","",null,null],[5,"is_loaded","gl::PushDebugGroup","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"QueryCounter","gl","",null,null],[5,"is_loaded","gl::QueryCounter","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ReadBuffer","gl","",null,null],[5,"is_loaded","gl::ReadBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ReadPixels","gl","",null,null],[5,"is_loaded","gl::ReadPixels","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ReadnPixels","gl","",null,null],[5,"is_loaded","gl::ReadnPixels","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ReleaseShaderCompiler","gl","",null,null],[5,"is_loaded","gl::ReleaseShaderCompiler","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"RenderbufferStorage","gl","",null,null],[5,"is_loaded","gl::RenderbufferStorage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"RenderbufferStorageMultisample","gl","",null,null],[5,"is_loaded","gl::RenderbufferStorageMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ResumeTransformFeedback","gl","",null,null],[5,"is_loaded","gl::ResumeTransformFeedback","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SampleCoverage","gl","",null,null],[5,"is_loaded","gl::SampleCoverage","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SampleMaski","gl","",null,null],[5,"is_loaded","gl::SampleMaski","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameterIiv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameterIuiv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameterf","gl","",null,null],[5,"is_loaded","gl::SamplerParameterf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameterfv","gl","",null,null],[5,"is_loaded","gl::SamplerParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameteri","gl","",null,null],[5,"is_loaded","gl::SamplerParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SamplerParameteriv","gl","",null,null],[5,"is_loaded","gl::SamplerParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Scissor","gl","",null,null],[5,"is_loaded","gl::Scissor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ScissorArrayv","gl","",null,null],[5,"is_loaded","gl::ScissorArrayv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ScissorIndexed","gl","",null,null],[5,"is_loaded","gl::ScissorIndexed","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ScissorIndexedv","gl","",null,null],[5,"is_loaded","gl::ScissorIndexedv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SecondaryColorP3ui","gl","",null,null],[5,"is_loaded","gl::SecondaryColorP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"SecondaryColorP3uiv","gl","",null,null],[5,"is_loaded","gl::SecondaryColorP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ShaderBinary","gl","",null,null],[5,"is_loaded","gl::ShaderBinary","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ShaderSource","gl","",null,null],[5,"is_loaded","gl::ShaderSource","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ShaderStorageBlockBinding","gl","",null,null],[5,"is_loaded","gl::ShaderStorageBlockBinding","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilFunc","gl","",null,null],[5,"is_loaded","gl::StencilFunc","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilFuncSeparate","gl","",null,null],[5,"is_loaded","gl::StencilFuncSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilMask","gl","",null,null],[5,"is_loaded","gl::StencilMask","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilMaskSeparate","gl","",null,null],[5,"is_loaded","gl::StencilMaskSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilOp","gl","",null,null],[5,"is_loaded","gl::StencilOp","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"StencilOpSeparate","gl","",null,null],[5,"is_loaded","gl::StencilOpSeparate","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexBuffer","gl","",null,null],[5,"is_loaded","gl::TexBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexBufferRange","gl","",null,null],[5,"is_loaded","gl::TexBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP1ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP1uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP2ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP2uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP3ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP3uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP4ui","gl","",null,null],[5,"is_loaded","gl::TexCoordP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexCoordP4uiv","gl","",null,null],[5,"is_loaded","gl::TexCoordP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage1D","gl","",null,null],[5,"is_loaded","gl::TexImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage2D","gl","",null,null],[5,"is_loaded","gl::TexImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TexImage2DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage3D","gl","",null,null],[5,"is_loaded","gl::TexImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexImage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TexImage3DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameterIiv","gl","",null,null],[5,"is_loaded","gl::TexParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameterIuiv","gl","",null,null],[5,"is_loaded","gl::TexParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameterf","gl","",null,null],[5,"is_loaded","gl::TexParameterf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameterfv","gl","",null,null],[5,"is_loaded","gl::TexParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameteri","gl","",null,null],[5,"is_loaded","gl::TexParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexParameteriv","gl","",null,null],[5,"is_loaded","gl::TexParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage1D","gl","",null,null],[5,"is_loaded","gl::TexStorage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage2D","gl","",null,null],[5,"is_loaded","gl::TexStorage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TexStorage2DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage3D","gl","",null,null],[5,"is_loaded","gl::TexStorage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexStorage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TexStorage3DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexSubImage1D","gl","",null,null],[5,"is_loaded","gl::TexSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexSubImage2D","gl","",null,null],[5,"is_loaded","gl::TexSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TexSubImage3D","gl","",null,null],[5,"is_loaded","gl::TexSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureBarrier","gl","",null,null],[5,"is_loaded","gl::TextureBarrier","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureBuffer","gl","",null,null],[5,"is_loaded","gl::TextureBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureBufferRange","gl","",null,null],[5,"is_loaded","gl::TextureBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameterIiv","gl","",null,null],[5,"is_loaded","gl::TextureParameterIiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameterIuiv","gl","",null,null],[5,"is_loaded","gl::TextureParameterIuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameterf","gl","",null,null],[5,"is_loaded","gl::TextureParameterf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameterfv","gl","",null,null],[5,"is_loaded","gl::TextureParameterfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameteri","gl","",null,null],[5,"is_loaded","gl::TextureParameteri","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureParameteriv","gl","",null,null],[5,"is_loaded","gl::TextureParameteriv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage1D","gl","",null,null],[5,"is_loaded","gl::TextureStorage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage2D","gl","",null,null],[5,"is_loaded","gl::TextureStorage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage2DMultisample","gl","",null,null],[5,"is_loaded","gl::TextureStorage2DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage3D","gl","",null,null],[5,"is_loaded","gl::TextureStorage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureStorage3DMultisample","gl","",null,null],[5,"is_loaded","gl::TextureStorage3DMultisample","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureSubImage1D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage1D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureSubImage2D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage2D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureSubImage3D","gl","",null,null],[5,"is_loaded","gl::TextureSubImage3D","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TextureView","gl","",null,null],[5,"is_loaded","gl::TextureView","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TransformFeedbackBufferBase","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackBufferBase","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TransformFeedbackBufferRange","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackBufferRange","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"TransformFeedbackVaryings","gl","",null,null],[5,"is_loaded","gl::TransformFeedbackVaryings","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1d","gl","",null,null],[5,"is_loaded","gl::Uniform1d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1dv","gl","",null,null],[5,"is_loaded","gl::Uniform1dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1f","gl","",null,null],[5,"is_loaded","gl::Uniform1f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1fv","gl","",null,null],[5,"is_loaded","gl::Uniform1fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1i","gl","",null,null],[5,"is_loaded","gl::Uniform1i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1iv","gl","",null,null],[5,"is_loaded","gl::Uniform1iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1ui","gl","",null,null],[5,"is_loaded","gl::Uniform1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform1uiv","gl","",null,null],[5,"is_loaded","gl::Uniform1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2d","gl","",null,null],[5,"is_loaded","gl::Uniform2d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2dv","gl","",null,null],[5,"is_loaded","gl::Uniform2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2f","gl","",null,null],[5,"is_loaded","gl::Uniform2f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2fv","gl","",null,null],[5,"is_loaded","gl::Uniform2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2i","gl","",null,null],[5,"is_loaded","gl::Uniform2i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2iv","gl","",null,null],[5,"is_loaded","gl::Uniform2iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2ui","gl","",null,null],[5,"is_loaded","gl::Uniform2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform2uiv","gl","",null,null],[5,"is_loaded","gl::Uniform2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3d","gl","",null,null],[5,"is_loaded","gl::Uniform3d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3dv","gl","",null,null],[5,"is_loaded","gl::Uniform3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3f","gl","",null,null],[5,"is_loaded","gl::Uniform3f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3fv","gl","",null,null],[5,"is_loaded","gl::Uniform3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3i","gl","",null,null],[5,"is_loaded","gl::Uniform3i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3iv","gl","",null,null],[5,"is_loaded","gl::Uniform3iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3ui","gl","",null,null],[5,"is_loaded","gl::Uniform3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform3uiv","gl","",null,null],[5,"is_loaded","gl::Uniform3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4d","gl","",null,null],[5,"is_loaded","gl::Uniform4d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4dv","gl","",null,null],[5,"is_loaded","gl::Uniform4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4f","gl","",null,null],[5,"is_loaded","gl::Uniform4f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4fv","gl","",null,null],[5,"is_loaded","gl::Uniform4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4i","gl","",null,null],[5,"is_loaded","gl::Uniform4i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4iv","gl","",null,null],[5,"is_loaded","gl::Uniform4iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4ui","gl","",null,null],[5,"is_loaded","gl::Uniform4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Uniform4uiv","gl","",null,null],[5,"is_loaded","gl::Uniform4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformBlockBinding","gl","",null,null],[5,"is_loaded","gl::UniformBlockBinding","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2x3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2x3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2x4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix2x4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix2x4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3x2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3x2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3x4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix3x4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix3x4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4x2dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4x2fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4x3dv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformMatrix4x3fv","gl","",null,null],[5,"is_loaded","gl::UniformMatrix4x3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UniformSubroutinesuiv","gl","",null,null],[5,"is_loaded","gl::UniformSubroutinesuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UnmapBuffer","gl","",null,null],[5,"is_loaded","gl::UnmapBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UnmapNamedBuffer","gl","",null,null],[5,"is_loaded","gl::UnmapNamedBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UseProgram","gl","",null,null],[5,"is_loaded","gl::UseProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"UseProgramStages","gl","",null,null],[5,"is_loaded","gl::UseProgramStages","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ValidateProgram","gl","",null,null],[5,"is_loaded","gl::ValidateProgram","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ValidateProgramPipeline","gl","",null,null],[5,"is_loaded","gl::ValidateProgramPipeline","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayAttribBinding","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribBinding","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayAttribFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayAttribIFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribIFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayAttribLFormat","gl","",null,null],[5,"is_loaded","gl::VertexArrayAttribLFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayBindingDivisor","gl","",null,null],[5,"is_loaded","gl::VertexArrayBindingDivisor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayElementBuffer","gl","",null,null],[5,"is_loaded","gl::VertexArrayElementBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayVertexBuffer","gl","",null,null],[5,"is_loaded","gl::VertexArrayVertexBuffer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexArrayVertexBuffers","gl","",null,null],[5,"is_loaded","gl::VertexArrayVertexBuffers","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1s","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib1sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib1sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2s","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib2sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib2sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3s","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib3sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib3sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nbv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nbv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Niv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Niv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nsv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nsv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nub","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nub","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nubv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nubv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nuiv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nuiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4Nusv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4Nusv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4bv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4bv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4d","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4dv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4f","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4f","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4fv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4fv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4iv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4s","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4s","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4sv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4ubv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4ubv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttrib4usv","gl","",null,null],[5,"is_loaded","gl::VertexAttrib4usv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribBinding","gl","",null,null],[5,"is_loaded","gl::VertexAttribBinding","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribDivisor","gl","",null,null],[5,"is_loaded","gl::VertexAttribDivisor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI1i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI1iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI1ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI1uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI2i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI2iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI2ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI2uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI3i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI3iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI3ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI3uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4bv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4bv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4i","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4i","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4iv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4iv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4sv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4sv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4ubv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4ubv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribI4usv","gl","",null,null],[5,"is_loaded","gl::VertexAttribI4usv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribIFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribIFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribIPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribIPointer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL1d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL1d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL1dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL1dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL2d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL2d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL2dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL2dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL3d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL3d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL3dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL3dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL4d","gl","",null,null],[5,"is_loaded","gl::VertexAttribL4d","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribL4dv","gl","",null,null],[5,"is_loaded","gl::VertexAttribL4dv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribLFormat","gl","",null,null],[5,"is_loaded","gl::VertexAttribLFormat","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribLPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribLPointer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP1ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP1ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP1uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP1uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP2ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP2uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP3ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP3uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP4ui","gl","",null,null],[5,"is_loaded","gl::VertexAttribP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribP4uiv","gl","",null,null],[5,"is_loaded","gl::VertexAttribP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexAttribPointer","gl","",null,null],[5,"is_loaded","gl::VertexAttribPointer","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexBindingDivisor","gl","",null,null],[5,"is_loaded","gl::VertexBindingDivisor","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP2ui","gl","",null,null],[5,"is_loaded","gl::VertexP2ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP2uiv","gl","",null,null],[5,"is_loaded","gl::VertexP2uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP3ui","gl","",null,null],[5,"is_loaded","gl::VertexP3ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP3uiv","gl","",null,null],[5,"is_loaded","gl::VertexP3uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP4ui","gl","",null,null],[5,"is_loaded","gl::VertexP4ui","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"VertexP4uiv","gl","",null,null],[5,"is_loaded","gl::VertexP4uiv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"Viewport","gl","",null,null],[5,"is_loaded","gl::Viewport","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ViewportArrayv","gl","",null,null],[5,"is_loaded","gl::ViewportArrayv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ViewportIndexedf","gl","",null,null],[5,"is_loaded","gl::ViewportIndexedf","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"ViewportIndexedfv","gl","",null,null],[5,"is_loaded","gl::ViewportIndexedfv","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[0,"WaitSync","gl","",null,null],[5,"is_loaded","gl::WaitSync","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"load_with","","",null,{"inputs":[{"name":"f"}],"output":null}],[17,"DEPTH_BUFFER_BIT","gl","",null,null],[17,"STENCIL_BUFFER_BIT","","",null,null],[17,"COLOR_BUFFER_BIT","","",null,null],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",null,null],[17,"CONTEXT_FLAG_DEBUG_BIT","","",null,null],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",null,null],[17,"CONTEXT_CORE_PROFILE_BIT","","",null,null],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"MAP_READ_BIT","","",null,null],[17,"MAP_WRITE_BIT","","",null,null],[17,"MAP_INVALIDATE_RANGE_BIT","","",null,null],[17,"MAP_INVALIDATE_BUFFER_BIT","","",null,null],[17,"MAP_FLUSH_EXPLICIT_BIT","","",null,null],[17,"MAP_UNSYNCHRONIZED_BIT","","",null,null],[17,"MAP_PERSISTENT_BIT","","",null,null],[17,"MAP_COHERENT_BIT","","",null,null],[17,"DYNAMIC_STORAGE_BIT","","",null,null],[17,"CLIENT_STORAGE_BIT","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",null,null],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",null,null],[17,"UNIFORM_BARRIER_BIT","","",null,null],[17,"TEXTURE_FETCH_BARRIER_BIT","","",null,null],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",null,null],[17,"COMMAND_BARRIER_BIT","","",null,null],[17,"PIXEL_BUFFER_BARRIER_BIT","","",null,null],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",null,null],[17,"BUFFER_UPDATE_BARRIER_BIT","","",null,null],[17,"FRAMEBUFFER_BARRIER_BIT","","",null,null],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",null,null],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",null,null],[17,"SHADER_STORAGE_BARRIER_BIT","","",null,null],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",null,null],[17,"QUERY_BUFFER_BARRIER_BIT","","",null,null],[17,"ALL_BARRIER_BITS","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"VERTEX_SHADER_BIT","","",null,null],[17,"FRAGMENT_SHADER_BIT","","",null,null],[17,"GEOMETRY_SHADER_BIT","","",null,null],[17,"TESS_CONTROL_SHADER_BIT","","",null,null],[17,"TESS_EVALUATION_SHADER_BIT","","",null,null],[17,"COMPUTE_SHADER_BIT","","",null,null],[17,"ALL_SHADER_BITS","","",null,null],[17,"FALSE","","",null,null],[17,"NO_ERROR","","",null,null],[17,"ZERO","","",null,null],[17,"NONE","","",null,null],[17,"TRUE","","",null,null],[17,"ONE","","",null,null],[17,"INVALID_INDEX","","",null,null],[17,"TIMEOUT_IGNORED","","",null,null],[17,"POINTS","","",null,null],[17,"LINES","","",null,null],[17,"LINE_LOOP","","",null,null],[17,"LINE_STRIP","","",null,null],[17,"TRIANGLES","","",null,null],[17,"TRIANGLE_STRIP","","",null,null],[17,"TRIANGLE_FAN","","",null,null],[17,"LINES_ADJACENCY","","",null,null],[17,"LINE_STRIP_ADJACENCY","","",null,null],[17,"TRIANGLES_ADJACENCY","","",null,null],[17,"TRIANGLE_STRIP_ADJACENCY","","",null,null],[17,"PATCHES","","",null,null],[17,"NEVER","","",null,null],[17,"LESS","","",null,null],[17,"EQUAL","","",null,null],[17,"LEQUAL","","",null,null],[17,"GREATER","","",null,null],[17,"NOTEQUAL","","",null,null],[17,"GEQUAL","","",null,null],[17,"ALWAYS","","",null,null],[17,"SRC_COLOR","","",null,null],[17,"ONE_MINUS_SRC_COLOR","","",null,null],[17,"SRC_ALPHA","","",null,null],[17,"ONE_MINUS_SRC_ALPHA","","",null,null],[17,"DST_ALPHA","","",null,null],[17,"ONE_MINUS_DST_ALPHA","","",null,null],[17,"DST_COLOR","","",null,null],[17,"ONE_MINUS_DST_COLOR","","",null,null],[17,"SRC_ALPHA_SATURATE","","",null,null],[17,"FRONT_LEFT","","",null,null],[17,"FRONT_RIGHT","","",null,null],[17,"BACK_LEFT","","",null,null],[17,"BACK_RIGHT","","",null,null],[17,"FRONT","","",null,null],[17,"BACK","","",null,null],[17,"LEFT","","",null,null],[17,"RIGHT","","",null,null],[17,"FRONT_AND_BACK","","",null,null],[17,"INVALID_ENUM","","",null,null],[17,"INVALID_VALUE","","",null,null],[17,"INVALID_OPERATION","","",null,null],[17,"OUT_OF_MEMORY","","",null,null],[17,"INVALID_FRAMEBUFFER_OPERATION","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"CW","","",null,null],[17,"CCW","","",null,null],[17,"POINT_SIZE","","",null,null],[17,"POINT_SIZE_RANGE","","",null,null],[17,"SMOOTH_POINT_SIZE_RANGE","","",null,null],[17,"POINT_SIZE_GRANULARITY","","",null,null],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",null,null],[17,"LINE_SMOOTH","","",null,null],[17,"LINE_WIDTH","","",null,null],[17,"LINE_WIDTH_RANGE","","",null,null],[17,"SMOOTH_LINE_WIDTH_RANGE","","",null,null],[17,"LINE_WIDTH_GRANULARITY","","",null,null],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",null,null],[17,"POLYGON_MODE","","",null,null],[17,"POLYGON_SMOOTH","","",null,null],[17,"CULL_FACE","","",null,null],[17,"CULL_FACE_MODE","","",null,null],[17,"FRONT_FACE","","",null,null],[17,"DEPTH_RANGE","","",null,null],[17,"DEPTH_TEST","","",null,null],[17,"DEPTH_WRITEMASK","","",null,null],[17,"DEPTH_CLEAR_VALUE","","",null,null],[17,"DEPTH_FUNC","","",null,null],[17,"STENCIL_TEST","","",null,null],[17,"STENCIL_CLEAR_VALUE","","",null,null],[17,"STENCIL_FUNC","","",null,null],[17,"STENCIL_VALUE_MASK","","",null,null],[17,"STENCIL_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_PASS_DEPTH_PASS","","",null,null],[17,"STENCIL_REF","","",null,null],[17,"STENCIL_WRITEMASK","","",null,null],[17,"VIEWPORT","","",null,null],[17,"DITHER","","",null,null],[17,"BLEND_DST","","",null,null],[17,"BLEND_SRC","","",null,null],[17,"BLEND","","",null,null],[17,"LOGIC_OP_MODE","","",null,null],[17,"COLOR_LOGIC_OP","","",null,null],[17,"DRAW_BUFFER","","",null,null],[17,"READ_BUFFER","","",null,null],[17,"SCISSOR_BOX","","",null,null],[17,"SCISSOR_TEST","","",null,null],[17,"COLOR_CLEAR_VALUE","","",null,null],[17,"COLOR_WRITEMASK","","",null,null],[17,"DOUBLEBUFFER","","",null,null],[17,"STEREO","","",null,null],[17,"LINE_SMOOTH_HINT","","",null,null],[17,"POLYGON_SMOOTH_HINT","","",null,null],[17,"UNPACK_SWAP_BYTES","","",null,null],[17,"UNPACK_LSB_FIRST","","",null,null],[17,"UNPACK_ROW_LENGTH","","",null,null],[17,"UNPACK_SKIP_ROWS","","",null,null],[17,"UNPACK_SKIP_PIXELS","","",null,null],[17,"UNPACK_ALIGNMENT","","",null,null],[17,"PACK_SWAP_BYTES","","",null,null],[17,"PACK_LSB_FIRST","","",null,null],[17,"PACK_ROW_LENGTH","","",null,null],[17,"PACK_SKIP_ROWS","","",null,null],[17,"PACK_SKIP_PIXELS","","",null,null],[17,"PACK_ALIGNMENT","","",null,null],[17,"MAX_CLIP_DISTANCES","","",null,null],[17,"MAX_TEXTURE_SIZE","","",null,null],[17,"MAX_VIEWPORT_DIMS","","",null,null],[17,"SUBPIXEL_BITS","","",null,null],[17,"TEXTURE_1D","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"TEXTURE_WIDTH","","",null,null],[17,"TEXTURE_HEIGHT","","",null,null],[17,"TEXTURE_INTERNAL_FORMAT","","",null,null],[17,"TEXTURE_BORDER_COLOR","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"DONT_CARE","","",null,null],[17,"FASTEST","","",null,null],[17,"NICEST","","",null,null],[17,"BYTE","","",null,null],[17,"UNSIGNED_BYTE","","",null,null],[17,"SHORT","","",null,null],[17,"UNSIGNED_SHORT","","",null,null],[17,"INT","","",null,null],[17,"UNSIGNED_INT","","",null,null],[17,"FLOAT","","",null,null],[17,"DOUBLE","","",null,null],[17,"HALF_FLOAT","","",null,null],[17,"FIXED","","",null,null],[17,"CLEAR","","",null,null],[17,"AND","","",null,null],[17,"AND_REVERSE","","",null,null],[17,"COPY","","",null,null],[17,"AND_INVERTED","","",null,null],[17,"NOOP","","",null,null],[17,"XOR","","",null,null],[17,"OR","","",null,null],[17,"NOR","","",null,null],[17,"EQUIV","","",null,null],[17,"INVERT","","",null,null],[17,"OR_REVERSE","","",null,null],[17,"COPY_INVERTED","","",null,null],[17,"OR_INVERTED","","",null,null],[17,"NAND","","",null,null],[17,"SET","","",null,null],[17,"TEXTURE","","",null,null],[17,"COLOR","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[17,"STENCIL_INDEX","","",null,null],[17,"DEPTH_COMPONENT","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"RGB","","",null,null],[17,"RGBA","","",null,null],[17,"POINT","","",null,null],[17,"LINE","","",null,null],[17,"FILL","","",null,null],[17,"KEEP","","",null,null],[17,"REPLACE","","",null,null],[17,"INCR","","",null,null],[17,"DECR","","",null,null],[17,"VENDOR","","",null,null],[17,"RENDERER","","",null,null],[17,"VERSION","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"NEAREST","","",null,null],[17,"LINEAR","","",null,null],[17,"NEAREST_MIPMAP_NEAREST","","",null,null],[17,"LINEAR_MIPMAP_NEAREST","","",null,null],[17,"NEAREST_MIPMAP_LINEAR","","",null,null],[17,"LINEAR_MIPMAP_LINEAR","","",null,null],[17,"TEXTURE_MAG_FILTER","","",null,null],[17,"TEXTURE_MIN_FILTER","","",null,null],[17,"TEXTURE_WRAP_S","","",null,null],[17,"TEXTURE_WRAP_T","","",null,null],[17,"REPEAT","","",null,null],[17,"POLYGON_OFFSET_UNITS","","",null,null],[17,"POLYGON_OFFSET_POINT","","",null,null],[17,"POLYGON_OFFSET_LINE","","",null,null],[17,"R3_G3_B2","","",null,null],[17,"CLIP_DISTANCE0","","",null,null],[17,"CLIP_DISTANCE1","","",null,null],[17,"CLIP_DISTANCE2","","",null,null],[17,"CLIP_DISTANCE3","","",null,null],[17,"CLIP_DISTANCE4","","",null,null],[17,"CLIP_DISTANCE5","","",null,null],[17,"CLIP_DISTANCE6","","",null,null],[17,"CLIP_DISTANCE7","","",null,null],[17,"CONSTANT_COLOR","","",null,null],[17,"ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"CONSTANT_ALPHA","","",null,null],[17,"ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"FUNC_ADD","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[17,"BLEND_EQUATION_RGB","","",null,null],[17,"FUNC_SUBTRACT","","",null,null],[17,"FUNC_REVERSE_SUBTRACT","","",null,null],[17,"UNSIGNED_BYTE_3_3_2","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4","","",null,null],[17,"UNSIGNED_SHORT_5_5_5_1","","",null,null],[17,"UNSIGNED_INT_8_8_8_8","","",null,null],[17,"UNSIGNED_INT_10_10_10_2","","",null,null],[17,"POLYGON_OFFSET_FILL","","",null,null],[17,"POLYGON_OFFSET_FACTOR","","",null,null],[17,"RGB4","","",null,null],[17,"RGB5","","",null,null],[17,"RGB8","","",null,null],[17,"RGB10","","",null,null],[17,"RGB12","","",null,null],[17,"RGB16","","",null,null],[17,"RGBA2","","",null,null],[17,"RGBA4","","",null,null],[17,"RGB5_A1","","",null,null],[17,"RGBA8","","",null,null],[17,"RGB10_A2","","",null,null],[17,"RGBA12","","",null,null],[17,"RGBA16","","",null,null],[17,"TEXTURE_RED_SIZE","","",null,null],[17,"TEXTURE_GREEN_SIZE","","",null,null],[17,"TEXTURE_BLUE_SIZE","","",null,null],[17,"TEXTURE_ALPHA_SIZE","","",null,null],[17,"PROXY_TEXTURE_1D","","",null,null],[17,"PROXY_TEXTURE_2D","","",null,null],[17,"TEXTURE_BINDING_1D","","",null,null],[17,"TEXTURE_BINDING_2D","","",null,null],[17,"TEXTURE_BINDING_3D","","",null,null],[17,"PACK_SKIP_IMAGES","","",null,null],[17,"PACK_IMAGE_HEIGHT","","",null,null],[17,"UNPACK_SKIP_IMAGES","","",null,null],[17,"UNPACK_IMAGE_HEIGHT","","",null,null],[17,"TEXTURE_3D","","",null,null],[17,"PROXY_TEXTURE_3D","","",null,null],[17,"TEXTURE_DEPTH","","",null,null],[17,"TEXTURE_WRAP_R","","",null,null],[17,"MAX_3D_TEXTURE_SIZE","","",null,null],[17,"MULTISAMPLE","","",null,null],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",null,null],[17,"SAMPLE_ALPHA_TO_ONE","","",null,null],[17,"SAMPLE_COVERAGE","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"SAMPLES","","",null,null],[17,"SAMPLE_COVERAGE_VALUE","","",null,null],[17,"SAMPLE_COVERAGE_INVERT","","",null,null],[17,"BLEND_DST_RGB","","",null,null],[17,"BLEND_SRC_RGB","","",null,null],[17,"BLEND_DST_ALPHA","","",null,null],[17,"BLEND_SRC_ALPHA","","",null,null],[17,"BGR","","",null,null],[17,"BGRA","","",null,null],[17,"MAX_ELEMENTS_VERTICES","","",null,null],[17,"MAX_ELEMENTS_INDICES","","",null,null],[17,"POINT_FADE_THRESHOLD_SIZE","","",null,null],[17,"CLAMP_TO_BORDER","","",null,null],[17,"CLAMP_TO_EDGE","","",null,null],[17,"TEXTURE_MIN_LOD","","",null,null],[17,"TEXTURE_MAX_LOD","","",null,null],[17,"TEXTURE_BASE_LEVEL","","",null,null],[17,"TEXTURE_MAX_LEVEL","","",null,null],[17,"DEPTH_COMPONENT16","","",null,null],[17,"DEPTH_COMPONENT24","","",null,null],[17,"DEPTH_COMPONENT32","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_DEFAULT","","",null,null],[17,"FRAMEBUFFER_UNDEFINED","","",null,null],[17,"DEPTH_STENCIL_ATTACHMENT","","",null,null],[17,"MAJOR_VERSION","","",null,null],[17,"MINOR_VERSION","","",null,null],[17,"NUM_EXTENSIONS","","",null,null],[17,"CONTEXT_FLAGS","","",null,null],[17,"BUFFER_IMMUTABLE_STORAGE","","",null,null],[17,"BUFFER_STORAGE_FLAGS","","",null,null],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",null,null],[17,"INDEX","","",null,null],[17,"COMPRESSED_RED","","",null,null],[17,"COMPRESSED_RG","","",null,null],[17,"RG","","",null,null],[17,"RG_INTEGER","","",null,null],[17,"R8","","",null,null],[17,"R16","","",null,null],[17,"RG8","","",null,null],[17,"RG16","","",null,null],[17,"R16F","","",null,null],[17,"R32F","","",null,null],[17,"RG16F","","",null,null],[17,"RG32F","","",null,null],[17,"R8I","","",null,null],[17,"R8UI","","",null,null],[17,"R16I","","",null,null],[17,"R16UI","","",null,null],[17,"R32I","","",null,null],[17,"R32UI","","",null,null],[17,"RG8I","","",null,null],[17,"RG8UI","","",null,null],[17,"RG16I","","",null,null],[17,"RG16UI","","",null,null],[17,"RG32I","","",null,null],[17,"RG32UI","","",null,null],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",null,null],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",null,null],[17,"DEBUG_CALLBACK_FUNCTION","","",null,null],[17,"DEBUG_CALLBACK_USER_PARAM","","",null,null],[17,"DEBUG_SOURCE_API","","",null,null],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",null,null],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",null,null],[17,"DEBUG_SOURCE_THIRD_PARTY","","",null,null],[17,"DEBUG_SOURCE_APPLICATION","","",null,null],[17,"DEBUG_SOURCE_OTHER","","",null,null],[17,"DEBUG_TYPE_ERROR","","",null,null],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",null,null],[17,"DEBUG_TYPE_PORTABILITY","","",null,null],[17,"DEBUG_TYPE_PERFORMANCE","","",null,null],[17,"DEBUG_TYPE_OTHER","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"GUILTY_CONTEXT_RESET","","",null,null],[17,"INNOCENT_CONTEXT_RESET","","",null,null],[17,"UNKNOWN_CONTEXT_RESET","","",null,null],[17,"RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",null,null],[17,"PROGRAM_SEPARABLE","","",null,null],[17,"ACTIVE_PROGRAM","","",null,null],[17,"PROGRAM_PIPELINE_BINDING","","",null,null],[17,"MAX_VIEWPORTS","","",null,null],[17,"VIEWPORT_SUBPIXEL_BITS","","",null,null],[17,"VIEWPORT_BOUNDS_RANGE","","",null,null],[17,"LAYER_PROVOKING_VERTEX","","",null,null],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",null,null],[17,"UNDEFINED_VERTEX","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",null,null],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",null,null],[17,"COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"DEBUG_TYPE_MARKER","","",null,null],[17,"DEBUG_TYPE_PUSH_GROUP","","",null,null],[17,"DEBUG_TYPE_POP_GROUP","","",null,null],[17,"DEBUG_SEVERITY_NOTIFICATION","","",null,null],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"DEBUG_GROUP_STACK_DEPTH","","",null,null],[17,"MAX_UNIFORM_LOCATIONS","","",null,null],[17,"INTERNALFORMAT_SUPPORTED","","",null,null],[17,"INTERNALFORMAT_PREFERRED","","",null,null],[17,"INTERNALFORMAT_RED_SIZE","","",null,null],[17,"INTERNALFORMAT_GREEN_SIZE","","",null,null],[17,"INTERNALFORMAT_BLUE_SIZE","","",null,null],[17,"INTERNALFORMAT_ALPHA_SIZE","","",null,null],[17,"INTERNALFORMAT_DEPTH_SIZE","","",null,null],[17,"INTERNALFORMAT_STENCIL_SIZE","","",null,null],[17,"INTERNALFORMAT_SHARED_SIZE","","",null,null],[17,"INTERNALFORMAT_RED_TYPE","","",null,null],[17,"INTERNALFORMAT_GREEN_TYPE","","",null,null],[17,"INTERNALFORMAT_BLUE_TYPE","","",null,null],[17,"INTERNALFORMAT_ALPHA_TYPE","","",null,null],[17,"INTERNALFORMAT_DEPTH_TYPE","","",null,null],[17,"INTERNALFORMAT_STENCIL_TYPE","","",null,null],[17,"MAX_WIDTH","","",null,null],[17,"MAX_HEIGHT","","",null,null],[17,"MAX_DEPTH","","",null,null],[17,"MAX_LAYERS","","",null,null],[17,"MAX_COMBINED_DIMENSIONS","","",null,null],[17,"COLOR_COMPONENTS","","",null,null],[17,"DEPTH_COMPONENTS","","",null,null],[17,"STENCIL_COMPONENTS","","",null,null],[17,"COLOR_RENDERABLE","","",null,null],[17,"DEPTH_RENDERABLE","","",null,null],[17,"STENCIL_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE","","",null,null],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",null,null],[17,"FRAMEBUFFER_BLEND","","",null,null],[17,"READ_PIXELS","","",null,null],[17,"READ_PIXELS_FORMAT","","",null,null],[17,"READ_PIXELS_TYPE","","",null,null],[17,"TEXTURE_IMAGE_FORMAT","","",null,null],[17,"TEXTURE_IMAGE_TYPE","","",null,null],[17,"GET_TEXTURE_IMAGE_FORMAT","","",null,null],[17,"GET_TEXTURE_IMAGE_TYPE","","",null,null],[17,"MIPMAP","","",null,null],[17,"MANUAL_GENERATE_MIPMAP","","",null,null],[17,"AUTO_GENERATE_MIPMAP","","",null,null],[17,"COLOR_ENCODING","","",null,null],[17,"SRGB_READ","","",null,null],[17,"SRGB_WRITE","","",null,null],[17,"FILTER","","",null,null],[17,"VERTEX_TEXTURE","","",null,null],[17,"TESS_CONTROL_TEXTURE","","",null,null],[17,"TESS_EVALUATION_TEXTURE","","",null,null],[17,"GEOMETRY_TEXTURE","","",null,null],[17,"FRAGMENT_TEXTURE","","",null,null],[17,"COMPUTE_TEXTURE","","",null,null],[17,"TEXTURE_SHADOW","","",null,null],[17,"TEXTURE_GATHER","","",null,null],[17,"TEXTURE_GATHER_SHADOW","","",null,null],[17,"SHADER_IMAGE_LOAD","","",null,null],[17,"SHADER_IMAGE_STORE","","",null,null],[17,"SHADER_IMAGE_ATOMIC","","",null,null],[17,"IMAGE_TEXEL_SIZE","","",null,null],[17,"IMAGE_COMPATIBILITY_CLASS","","",null,null],[17,"IMAGE_PIXEL_FORMAT","","",null,null],[17,"IMAGE_PIXEL_TYPE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",null,null],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"CLEAR_BUFFER","","",null,null],[17,"TEXTURE_VIEW","","",null,null],[17,"VIEW_COMPATIBILITY_CLASS","","",null,null],[17,"FULL_SUPPORT","","",null,null],[17,"CAVEAT_SUPPORT","","",null,null],[17,"IMAGE_CLASS_4_X_32","","",null,null],[17,"IMAGE_CLASS_2_X_32","","",null,null],[17,"IMAGE_CLASS_1_X_32","","",null,null],[17,"IMAGE_CLASS_4_X_16","","",null,null],[17,"IMAGE_CLASS_2_X_16","","",null,null],[17,"IMAGE_CLASS_1_X_16","","",null,null],[17,"IMAGE_CLASS_4_X_8","","",null,null],[17,"IMAGE_CLASS_2_X_8","","",null,null],[17,"IMAGE_CLASS_1_X_8","","",null,null],[17,"IMAGE_CLASS_11_11_10","","",null,null],[17,"IMAGE_CLASS_10_10_10_2","","",null,null],[17,"VIEW_CLASS_128_BITS","","",null,null],[17,"VIEW_CLASS_96_BITS","","",null,null],[17,"VIEW_CLASS_64_BITS","","",null,null],[17,"VIEW_CLASS_48_BITS","","",null,null],[17,"VIEW_CLASS_32_BITS","","",null,null],[17,"VIEW_CLASS_24_BITS","","",null,null],[17,"VIEW_CLASS_16_BITS","","",null,null],[17,"VIEW_CLASS_8_BITS","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",null,null],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",null,null],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",null,null],[17,"VIEW_CLASS_RGTC1_RED","","",null,null],[17,"VIEW_CLASS_RGTC2_RG","","",null,null],[17,"VIEW_CLASS_BPTC_UNORM","","",null,null],[17,"VIEW_CLASS_BPTC_FLOAT","","",null,null],[17,"VERTEX_ATTRIB_BINDING","","",null,null],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"VERTEX_BINDING_DIVISOR","","",null,null],[17,"VERTEX_BINDING_OFFSET","","",null,null],[17,"VERTEX_BINDING_STRIDE","","",null,null],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",null,null],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",null,null],[17,"TEXTURE_VIEW_MIN_LEVEL","","",null,null],[17,"TEXTURE_VIEW_NUM_LEVELS","","",null,null],[17,"TEXTURE_VIEW_MIN_LAYER","","",null,null],[17,"TEXTURE_VIEW_NUM_LAYERS","","",null,null],[17,"TEXTURE_IMMUTABLE_LEVELS","","",null,null],[17,"BUFFER","","",null,null],[17,"SHADER","","",null,null],[17,"PROGRAM","","",null,null],[17,"QUERY","","",null,null],[17,"PROGRAM_PIPELINE","","",null,null],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",null,null],[17,"SAMPLER","","",null,null],[17,"DISPLAY_LIST","","",null,null],[17,"MAX_LABEL_LENGTH","","",null,null],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",null,null],[17,"QUERY_TARGET","","",null,null],[17,"TEXTURE_BINDING","","",null,null],[17,"MAX_CULL_DISTANCES","","",null,null],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR","","",null,null],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",null,null],[17,"UNSIGNED_BYTE_2_3_3_REV","","",null,null],[17,"UNSIGNED_SHORT_5_6_5","","",null,null],[17,"UNSIGNED_SHORT_5_6_5_REV","","",null,null],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",null,null],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",null,null],[17,"UNSIGNED_INT_8_8_8_8_REV","","",null,null],[17,"UNSIGNED_INT_2_10_10_10_REV","","",null,null],[17,"MIRRORED_REPEAT","","",null,null],[17,"ALIASED_LINE_WIDTH_RANGE","","",null,null],[17,"TEXTURE0","","",null,null],[17,"TEXTURE1","","",null,null],[17,"TEXTURE2","","",null,null],[17,"TEXTURE3","","",null,null],[17,"TEXTURE4","","",null,null],[17,"TEXTURE5","","",null,null],[17,"TEXTURE6","","",null,null],[17,"TEXTURE7","","",null,null],[17,"TEXTURE8","","",null,null],[17,"TEXTURE9","","",null,null],[17,"TEXTURE10","","",null,null],[17,"TEXTURE11","","",null,null],[17,"TEXTURE12","","",null,null],[17,"TEXTURE13","","",null,null],[17,"TEXTURE14","","",null,null],[17,"TEXTURE15","","",null,null],[17,"TEXTURE16","","",null,null],[17,"TEXTURE17","","",null,null],[17,"TEXTURE18","","",null,null],[17,"TEXTURE19","","",null,null],[17,"TEXTURE20","","",null,null],[17,"TEXTURE21","","",null,null],[17,"TEXTURE22","","",null,null],[17,"TEXTURE23","","",null,null],[17,"TEXTURE24","","",null,null],[17,"TEXTURE25","","",null,null],[17,"TEXTURE26","","",null,null],[17,"TEXTURE27","","",null,null],[17,"TEXTURE28","","",null,null],[17,"TEXTURE29","","",null,null],[17,"TEXTURE30","","",null,null],[17,"TEXTURE31","","",null,null],[17,"ACTIVE_TEXTURE","","",null,null],[17,"MAX_RENDERBUFFER_SIZE","","",null,null],[17,"COMPRESSED_RGB","","",null,null],[17,"COMPRESSED_RGBA","","",null,null],[17,"TEXTURE_COMPRESSION_HINT","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"TEXTURE_RECTANGLE","","",null,null],[17,"TEXTURE_BINDING_RECTANGLE","","",null,null],[17,"PROXY_TEXTURE_RECTANGLE","","",null,null],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",null,null],[17,"DEPTH_STENCIL","","",null,null],[17,"UNSIGNED_INT_24_8","","",null,null],[17,"MAX_TEXTURE_LOD_BIAS","","",null,null],[17,"TEXTURE_LOD_BIAS","","",null,null],[17,"INCR_WRAP","","",null,null],[17,"DECR_WRAP","","",null,null],[17,"TEXTURE_CUBE_MAP","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP","","",null,null],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",null,null],[17,"SRC1_ALPHA","","",null,null],[17,"VERTEX_ARRAY_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",null,null],[17,"CURRENT_VERTEX_ATTRIB","","",null,null],[17,"VERTEX_PROGRAM_POINT_SIZE","","",null,null],[17,"PROGRAM_POINT_SIZE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",null,null],[17,"DEPTH_CLAMP","","",null,null],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",null,null],[17,"TEXTURE_COMPRESSED","","",null,null],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"COMPRESSED_TEXTURE_FORMATS","","",null,null],[17,"PROGRAM_BINARY_LENGTH","","",null,null],[17,"MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"BUFFER_USAGE","","",null,null],[17,"NUM_PROGRAM_BINARY_FORMATS","","",null,null],[17,"PROGRAM_BINARY_FORMATS","","",null,null],[17,"STENCIL_BACK_FUNC","","",null,null],[17,"STENCIL_BACK_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",null,null],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",null,null],[17,"RGBA32F","","",null,null],[17,"RGB32F","","",null,null],[17,"RGBA16F","","",null,null],[17,"RGB16F","","",null,null],[17,"MAX_DRAW_BUFFERS","","",null,null],[17,"DRAW_BUFFER0","","",null,null],[17,"DRAW_BUFFER1","","",null,null],[17,"DRAW_BUFFER2","","",null,null],[17,"DRAW_BUFFER3","","",null,null],[17,"DRAW_BUFFER4","","",null,null],[17,"DRAW_BUFFER5","","",null,null],[17,"DRAW_BUFFER6","","",null,null],[17,"DRAW_BUFFER7","","",null,null],[17,"DRAW_BUFFER8","","",null,null],[17,"DRAW_BUFFER9","","",null,null],[17,"DRAW_BUFFER10","","",null,null],[17,"DRAW_BUFFER11","","",null,null],[17,"DRAW_BUFFER12","","",null,null],[17,"DRAW_BUFFER13","","",null,null],[17,"DRAW_BUFFER14","","",null,null],[17,"DRAW_BUFFER15","","",null,null],[17,"BLEND_EQUATION_ALPHA","","",null,null],[17,"TEXTURE_DEPTH_SIZE","","",null,null],[17,"TEXTURE_COMPARE_MODE","","",null,null],[17,"TEXTURE_COMPARE_FUNC","","",null,null],[17,"COMPARE_REF_TO_TEXTURE","","",null,null],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",null,null],[17,"QUERY_COUNTER_BITS","","",null,null],[17,"CURRENT_QUERY","","",null,null],[17,"QUERY_RESULT","","",null,null],[17,"QUERY_RESULT_AVAILABLE","","",null,null],[17,"MAX_VERTEX_ATTRIBS","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",null,null],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",null,null],[17,"MAX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"ARRAY_BUFFER","","",null,null],[17,"ELEMENT_ARRAY_BUFFER","","",null,null],[17,"ARRAY_BUFFER_BINDING","","",null,null],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",null,null],[17,"READ_ONLY","","",null,null],[17,"WRITE_ONLY","","",null,null],[17,"READ_WRITE","","",null,null],[17,"BUFFER_ACCESS","","",null,null],[17,"BUFFER_MAPPED","","",null,null],[17,"BUFFER_MAP_POINTER","","",null,null],[17,"TIME_ELAPSED","","",null,null],[17,"STREAM_DRAW","","",null,null],[17,"STREAM_READ","","",null,null],[17,"STREAM_COPY","","",null,null],[17,"STATIC_DRAW","","",null,null],[17,"STATIC_READ","","",null,null],[17,"STATIC_COPY","","",null,null],[17,"DYNAMIC_DRAW","","",null,null],[17,"DYNAMIC_READ","","",null,null],[17,"DYNAMIC_COPY","","",null,null],[17,"PIXEL_PACK_BUFFER","","",null,null],[17,"PIXEL_UNPACK_BUFFER","","",null,null],[17,"PIXEL_PACK_BUFFER_BINDING","","",null,null],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",null,null],[17,"DEPTH24_STENCIL8","","",null,null],[17,"TEXTURE_STENCIL_SIZE","","",null,null],[17,"SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_COLOR","","",null,null],[17,"ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",null,null],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",null,null],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",null,null],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",null,null],[17,"SAMPLES_PASSED","","",null,null],[17,"GEOMETRY_VERTICES_OUT","","",null,null],[17,"GEOMETRY_INPUT_TYPE","","",null,null],[17,"GEOMETRY_OUTPUT_TYPE","","",null,null],[17,"SAMPLER_BINDING","","",null,null],[17,"CLAMP_READ_COLOR","","",null,null],[17,"FIXED_ONLY","","",null,null],[17,"UNIFORM_BUFFER","","",null,null],[17,"UNIFORM_BUFFER_BINDING","","",null,null],[17,"UNIFORM_BUFFER_START","","",null,null],[17,"UNIFORM_BUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",null,null],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",null,null],[17,"MAX_UNIFORM_BLOCK_SIZE","","",null,null],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",null,null],[17,"ACTIVE_UNIFORM_BLOCKS","","",null,null],[17,"UNIFORM_TYPE","","",null,null],[17,"UNIFORM_SIZE","","",null,null],[17,"UNIFORM_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_INDEX","","",null,null],[17,"UNIFORM_OFFSET","","",null,null],[17,"UNIFORM_ARRAY_STRIDE","","",null,null],[17,"UNIFORM_MATRIX_STRIDE","","",null,null],[17,"UNIFORM_IS_ROW_MAJOR","","",null,null],[17,"UNIFORM_BLOCK_BINDING","","",null,null],[17,"UNIFORM_BLOCK_DATA_SIZE","","",null,null],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",null,null],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"FRAGMENT_SHADER","","",null,null],[17,"VERTEX_SHADER","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_VARYING_FLOATS","","",null,null],[17,"MAX_VARYING_COMPONENTS","","",null,null],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",null,null],[17,"SHADER_TYPE","","",null,null],[17,"FLOAT_VEC2","","",null,null],[17,"FLOAT_VEC3","","",null,null],[17,"FLOAT_VEC4","","",null,null],[17,"INT_VEC2","","",null,null],[17,"INT_VEC3","","",null,null],[17,"INT_VEC4","","",null,null],[17,"BOOL","","",null,null],[17,"BOOL_VEC2","","",null,null],[17,"BOOL_VEC3","","",null,null],[17,"BOOL_VEC4","","",null,null],[17,"FLOAT_MAT2","","",null,null],[17,"FLOAT_MAT3","","",null,null],[17,"FLOAT_MAT4","","",null,null],[17,"SAMPLER_1D","","",null,null],[17,"SAMPLER_2D","","",null,null],[17,"SAMPLER_3D","","",null,null],[17,"SAMPLER_CUBE","","",null,null],[17,"SAMPLER_1D_SHADOW","","",null,null],[17,"SAMPLER_2D_SHADOW","","",null,null],[17,"SAMPLER_2D_RECT","","",null,null],[17,"SAMPLER_2D_RECT_SHADOW","","",null,null],[17,"FLOAT_MAT2x3","","",null,null],[17,"FLOAT_MAT2x4","","",null,null],[17,"FLOAT_MAT3x2","","",null,null],[17,"FLOAT_MAT3x4","","",null,null],[17,"FLOAT_MAT4x2","","",null,null],[17,"FLOAT_MAT4x3","","",null,null],[17,"DELETE_STATUS","","",null,null],[17,"COMPILE_STATUS","","",null,null],[17,"LINK_STATUS","","",null,null],[17,"VALIDATE_STATUS","","",null,null],[17,"INFO_LOG_LENGTH","","",null,null],[17,"ATTACHED_SHADERS","","",null,null],[17,"ACTIVE_UNIFORMS","","",null,null],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",null,null],[17,"SHADER_SOURCE_LENGTH","","",null,null],[17,"ACTIVE_ATTRIBUTES","","",null,null],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",null,null],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",null,null],[17,"SHADING_LANGUAGE_VERSION","","",null,null],[17,"CURRENT_PROGRAM","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",null,null],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",null,null],[17,"TEXTURE_RED_TYPE","","",null,null],[17,"TEXTURE_GREEN_TYPE","","",null,null],[17,"TEXTURE_BLUE_TYPE","","",null,null],[17,"TEXTURE_ALPHA_TYPE","","",null,null],[17,"TEXTURE_DEPTH_TYPE","","",null,null],[17,"UNSIGNED_NORMALIZED","","",null,null],[17,"TEXTURE_1D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_1D_ARRAY","","",null,null],[17,"TEXTURE_2D_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_1D_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_ARRAY","","",null,null],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",null,null],[17,"TEXTURE_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_BINDING","","",null,null],[17,"MAX_TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_BINDING_BUFFER","","",null,null],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",null,null],[17,"ANY_SAMPLES_PASSED","","",null,null],[17,"SAMPLE_SHADING","","",null,null],[17,"MIN_SAMPLE_SHADING_VALUE","","",null,null],[17,"R11F_G11F_B10F","","",null,null],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",null,null],[17,"RGB9_E5","","",null,null],[17,"UNSIGNED_INT_5_9_9_9_REV","","",null,null],[17,"TEXTURE_SHARED_SIZE","","",null,null],[17,"SRGB","","",null,null],[17,"SRGB8","","",null,null],[17,"SRGB_ALPHA","","",null,null],[17,"SRGB8_ALPHA8","","",null,null],[17,"COMPRESSED_SRGB","","",null,null],[17,"COMPRESSED_SRGB_ALPHA","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",null,null],[17,"PRIMITIVES_GENERATED","","",null,null],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",null,null],[17,"RASTERIZER_DISCARD","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",null,null],[17,"INTERLEAVED_ATTRIBS","","",null,null],[17,"SEPARATE_ATTRIBS","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",null,null],[17,"POINT_SPRITE_COORD_ORIGIN","","",null,null],[17,"LOWER_LEFT","","",null,null],[17,"UPPER_LEFT","","",null,null],[17,"STENCIL_BACK_REF","","",null,null],[17,"STENCIL_BACK_VALUE_MASK","","",null,null],[17,"STENCIL_BACK_WRITEMASK","","",null,null],[17,"DRAW_FRAMEBUFFER_BINDING","","",null,null],[17,"FRAMEBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_BINDING","","",null,null],[17,"READ_FRAMEBUFFER","","",null,null],[17,"DRAW_FRAMEBUFFER","","",null,null],[17,"READ_FRAMEBUFFER_BINDING","","",null,null],[17,"RENDERBUFFER_SAMPLES","","",null,null],[17,"DEPTH_COMPONENT32F","","",null,null],[17,"DEPTH32F_STENCIL8","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",null,null],[17,"FRAMEBUFFER_COMPLETE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",null,null],[17,"FRAMEBUFFER_UNSUPPORTED","","",null,null],[17,"MAX_COLOR_ATTACHMENTS","","",null,null],[17,"COLOR_ATTACHMENT0","","",null,null],[17,"COLOR_ATTACHMENT1","","",null,null],[17,"COLOR_ATTACHMENT2","","",null,null],[17,"COLOR_ATTACHMENT3","","",null,null],[17,"COLOR_ATTACHMENT4","","",null,null],[17,"COLOR_ATTACHMENT5","","",null,null],[17,"COLOR_ATTACHMENT6","","",null,null],[17,"COLOR_ATTACHMENT7","","",null,null],[17,"COLOR_ATTACHMENT8","","",null,null],[17,"COLOR_ATTACHMENT9","","",null,null],[17,"COLOR_ATTACHMENT10","","",null,null],[17,"COLOR_ATTACHMENT11","","",null,null],[17,"COLOR_ATTACHMENT12","","",null,null],[17,"COLOR_ATTACHMENT13","","",null,null],[17,"COLOR_ATTACHMENT14","","",null,null],[17,"COLOR_ATTACHMENT15","","",null,null],[17,"DEPTH_ATTACHMENT","","",null,null],[17,"STENCIL_ATTACHMENT","","",null,null],[17,"FRAMEBUFFER","","",null,null],[17,"RENDERBUFFER","","",null,null],[17,"RENDERBUFFER_WIDTH","","",null,null],[17,"RENDERBUFFER_HEIGHT","","",null,null],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",null,null],[17,"STENCIL_INDEX1","","",null,null],[17,"STENCIL_INDEX4","","",null,null],[17,"STENCIL_INDEX8","","",null,null],[17,"STENCIL_INDEX16","","",null,null],[17,"RENDERBUFFER_RED_SIZE","","",null,null],[17,"RENDERBUFFER_GREEN_SIZE","","",null,null],[17,"RENDERBUFFER_BLUE_SIZE","","",null,null],[17,"RENDERBUFFER_ALPHA_SIZE","","",null,null],[17,"RENDERBUFFER_DEPTH_SIZE","","",null,null],[17,"RENDERBUFFER_STENCIL_SIZE","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",null,null],[17,"MAX_SAMPLES","","",null,null],[17,"RGB565","","",null,null],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",null,null],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",null,null],[17,"MAX_ELEMENT_INDEX","","",null,null],[17,"RGBA32UI","","",null,null],[17,"RGB32UI","","",null,null],[17,"RGBA16UI","","",null,null],[17,"RGB16UI","","",null,null],[17,"RGBA8UI","","",null,null],[17,"RGB8UI","","",null,null],[17,"RGBA32I","","",null,null],[17,"RGB32I","","",null,null],[17,"RGBA16I","","",null,null],[17,"RGB16I","","",null,null],[17,"RGBA8I","","",null,null],[17,"RGB8I","","",null,null],[17,"RED_INTEGER","","",null,null],[17,"GREEN_INTEGER","","",null,null],[17,"BLUE_INTEGER","","",null,null],[17,"RGB_INTEGER","","",null,null],[17,"RGBA_INTEGER","","",null,null],[17,"BGR_INTEGER","","",null,null],[17,"BGRA_INTEGER","","",null,null],[17,"INT_2_10_10_10_REV","","",null,null],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",null,null],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",null,null],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",null,null],[17,"FRAMEBUFFER_SRGB","","",null,null],[17,"COMPRESSED_RED_RGTC1","","",null,null],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",null,null],[17,"COMPRESSED_RG_RGTC2","","",null,null],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",null,null],[17,"SAMPLER_1D_ARRAY","","",null,null],[17,"SAMPLER_2D_ARRAY","","",null,null],[17,"SAMPLER_BUFFER","","",null,null],[17,"SAMPLER_1D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_2D_ARRAY_SHADOW","","",null,null],[17,"SAMPLER_CUBE_SHADOW","","",null,null],[17,"UNSIGNED_INT_VEC2","","",null,null],[17,"UNSIGNED_INT_VEC3","","",null,null],[17,"UNSIGNED_INT_VEC4","","",null,null],[17,"INT_SAMPLER_1D","","",null,null],[17,"INT_SAMPLER_2D","","",null,null],[17,"INT_SAMPLER_3D","","",null,null],[17,"INT_SAMPLER_CUBE","","",null,null],[17,"INT_SAMPLER_2D_RECT","","",null,null],[17,"INT_SAMPLER_1D_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_ARRAY","","",null,null],[17,"INT_SAMPLER_BUFFER","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_3D","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",null,null],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",null,null],[17,"GEOMETRY_SHADER","","",null,null],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",null,null],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"ACTIVE_SUBROUTINES","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",null,null],[17,"MAX_SUBROUTINES","","",null,null],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"LOW_FLOAT","","",null,null],[17,"MEDIUM_FLOAT","","",null,null],[17,"HIGH_FLOAT","","",null,null],[17,"LOW_INT","","",null,null],[17,"MEDIUM_INT","","",null,null],[17,"HIGH_INT","","",null,null],[17,"SHADER_BINARY_FORMATS","","",null,null],[17,"NUM_SHADER_BINARY_FORMATS","","",null,null],[17,"SHADER_COMPILER","","",null,null],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",null,null],[17,"MAX_VARYING_VECTORS","","",null,null],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",null,null],[17,"QUERY_WAIT","","",null,null],[17,"QUERY_NO_WAIT","","",null,null],[17,"QUERY_BY_REGION_WAIT","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT","","",null,null],[17,"QUERY_WAIT_INVERTED","","",null,null],[17,"QUERY_NO_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",null,null],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",null,null],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"TRANSFORM_FEEDBACK","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_PAUSED","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",null,null],[17,"TRANSFORM_FEEDBACK_BINDING","","",null,null],[17,"TIMESTAMP","","",null,null],[17,"TEXTURE_SWIZZLE_R","","",null,null],[17,"TEXTURE_SWIZZLE_G","","",null,null],[17,"TEXTURE_SWIZZLE_B","","",null,null],[17,"TEXTURE_SWIZZLE_A","","",null,null],[17,"TEXTURE_SWIZZLE_RGBA","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",null,null],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",null,null],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",null,null],[17,"NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"COMPATIBLE_SUBROUTINES","","",null,null],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",null,null],[17,"FIRST_VERTEX_CONVENTION","","",null,null],[17,"LAST_VERTEX_CONVENTION","","",null,null],[17,"PROVOKING_VERTEX","","",null,null],[17,"SAMPLE_POSITION","","",null,null],[17,"SAMPLE_MASK","","",null,null],[17,"SAMPLE_MASK_VALUE","","",null,null],[17,"MAX_SAMPLE_MASK_WORDS","","",null,null],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",null,null],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",null,null],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",null,null],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",null,null],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",null,null],[17,"MAX_VERTEX_STREAMS","","",null,null],[17,"PATCH_VERTICES","","",null,null],[17,"PATCH_DEFAULT_INNER_LEVEL","","",null,null],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",null,null],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",null,null],[17,"TESS_GEN_MODE","","",null,null],[17,"TESS_GEN_SPACING","","",null,null],[17,"TESS_GEN_VERTEX_ORDER","","",null,null],[17,"TESS_GEN_POINT_MODE","","",null,null],[17,"ISOLINES","","",null,null],[17,"FRACTIONAL_ODD","","",null,null],[17,"FRACTIONAL_EVEN","","",null,null],[17,"MAX_PATCH_VERTICES","","",null,null],[17,"MAX_TESS_GEN_LEVEL","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_PATCH_COMPONENTS","","",null,null],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",null,null],[17,"TESS_EVALUATION_SHADER","","",null,null],[17,"TESS_CONTROL_SHADER","","",null,null],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",null,null],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",null,null],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",null,null],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",null,null],[17,"COPY_READ_BUFFER","","",null,null],[17,"COPY_READ_BUFFER_BINDING","","",null,null],[17,"COPY_WRITE_BUFFER","","",null,null],[17,"COPY_WRITE_BUFFER_BINDING","","",null,null],[17,"MAX_IMAGE_UNITS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",null,null],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",null,null],[17,"IMAGE_BINDING_NAME","","",null,null],[17,"IMAGE_BINDING_LEVEL","","",null,null],[17,"IMAGE_BINDING_LAYERED","","",null,null],[17,"IMAGE_BINDING_LAYER","","",null,null],[17,"IMAGE_BINDING_ACCESS","","",null,null],[17,"DRAW_INDIRECT_BUFFER","","",null,null],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",null,null],[17,"DOUBLE_MAT2","","",null,null],[17,"DOUBLE_MAT3","","",null,null],[17,"DOUBLE_MAT4","","",null,null],[17,"DOUBLE_MAT2x3","","",null,null],[17,"DOUBLE_MAT2x4","","",null,null],[17,"DOUBLE_MAT3x2","","",null,null],[17,"DOUBLE_MAT3x4","","",null,null],[17,"DOUBLE_MAT4x2","","",null,null],[17,"DOUBLE_MAT4x3","","",null,null],[17,"VERTEX_BINDING_BUFFER","","",null,null],[17,"R8_SNORM","","",null,null],[17,"RG8_SNORM","","",null,null],[17,"RGB8_SNORM","","",null,null],[17,"RGBA8_SNORM","","",null,null],[17,"R16_SNORM","","",null,null],[17,"RG16_SNORM","","",null,null],[17,"RGB16_SNORM","","",null,null],[17,"RGBA16_SNORM","","",null,null],[17,"SIGNED_NORMALIZED","","",null,null],[17,"PRIMITIVE_RESTART","","",null,null],[17,"PRIMITIVE_RESTART_INDEX","","",null,null],[17,"DOUBLE_VEC2","","",null,null],[17,"DOUBLE_VEC3","","",null,null],[17,"DOUBLE_VEC4","","",null,null],[17,"TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",null,null],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",null,null],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_1D","","",null,null],[17,"IMAGE_2D","","",null,null],[17,"IMAGE_3D","","",null,null],[17,"IMAGE_2D_RECT","","",null,null],[17,"IMAGE_CUBE","","",null,null],[17,"IMAGE_BUFFER","","",null,null],[17,"IMAGE_1D_ARRAY","","",null,null],[17,"IMAGE_2D_ARRAY","","",null,null],[17,"IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"IMAGE_2D_MULTISAMPLE","","",null,null],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_IMAGE_1D","","",null,null],[17,"INT_IMAGE_2D","","",null,null],[17,"INT_IMAGE_3D","","",null,null],[17,"INT_IMAGE_2D_RECT","","",null,null],[17,"INT_IMAGE_CUBE","","",null,null],[17,"INT_IMAGE_BUFFER","","",null,null],[17,"INT_IMAGE_1D_ARRAY","","",null,null],[17,"INT_IMAGE_2D_ARRAY","","",null,null],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D","","",null,null],[17,"UNSIGNED_INT_IMAGE_3D","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE","","",null,null],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",null,null],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_IMAGE_SAMPLES","","",null,null],[17,"IMAGE_BINDING_FORMAT","","",null,null],[17,"RGB10_A2UI","","",null,null],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",null,null],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",null,null],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",null,null],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",null,null],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",null,null],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",null,null],[17,"SHADER_STORAGE_BUFFER","","",null,null],[17,"SHADER_STORAGE_BUFFER_BINDING","","",null,null],[17,"SHADER_STORAGE_BUFFER_START","","",null,null],[17,"SHADER_STORAGE_BUFFER_SIZE","","",null,null],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",null,null],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",null,null],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",null,null],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",null,null],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER","","",null,null],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",null,null],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"TEXTURE_SAMPLES","","",null,null],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",null,null],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",null,null],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",null,null],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",null,null],[17,"MAX_INTEGER_SAMPLES","","",null,null],[17,"MAX_SERVER_WAIT_TIMEOUT","","",null,null],[17,"OBJECT_TYPE","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"SYNC_FLAGS","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"SIGNALED","","",null,null],[17,"ALREADY_SIGNALED","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"BUFFER_ACCESS_FLAGS","","",null,null],[17,"BUFFER_MAP_LENGTH","","",null,null],[17,"BUFFER_MAP_OFFSET","","",null,null],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",null,null],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",null,null],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",null,null],[17,"CONTEXT_PROFILE_MASK","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",null,null],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",null,null],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",null,null],[17,"TEXTURE_IMMUTABLE_FORMAT","","",null,null],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",null,null],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_LOGGED_MESSAGES","","",null,null],[17,"DEBUG_SEVERITY_HIGH","","",null,null],[17,"DEBUG_SEVERITY_MEDIUM","","",null,null],[17,"DEBUG_SEVERITY_LOW","","",null,null],[17,"QUERY_BUFFER","","",null,null],[17,"QUERY_BUFFER_BINDING","","",null,null],[17,"QUERY_RESULT_NO_WAIT","","",null,null],[17,"TEXTURE_BUFFER_OFFSET","","",null,null],[17,"TEXTURE_BUFFER_SIZE","","",null,null],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",null,null],[17,"COMPUTE_SHADER","","",null,null],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",null,null],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",null,null],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",null,null],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",null,null],[17,"COMPRESSED_R11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_R11_EAC","","",null,null],[17,"COMPRESSED_RG11_EAC","","",null,null],[17,"COMPRESSED_SIGNED_RG11_EAC","","",null,null],[17,"COMPRESSED_RGB8_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_ETC2","","",null,null],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",null,null],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",null,null],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",null,null],[17,"ATOMIC_COUNTER_BUFFER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_START","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",null,null],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",null,null],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",null,null],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",null,null],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",null,null],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","","",null,null],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",null,null],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",null,null],[17,"DEBUG_OUTPUT","","",null,null],[17,"UNIFORM","","",null,null],[17,"UNIFORM_BLOCK","","",null,null],[17,"PROGRAM_INPUT","","",null,null],[17,"PROGRAM_OUTPUT","","",null,null],[17,"BUFFER_VARIABLE","","",null,null],[17,"SHADER_STORAGE_BLOCK","","",null,null],[17,"IS_PER_PATCH","","",null,null],[17,"VERTEX_SUBROUTINE","","",null,null],[17,"TESS_CONTROL_SUBROUTINE","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE","","",null,null],[17,"GEOMETRY_SUBROUTINE","","",null,null],[17,"FRAGMENT_SUBROUTINE","","",null,null],[17,"COMPUTE_SUBROUTINE","","",null,null],[17,"VERTEX_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",null,null],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",null,null],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",null,null],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",null,null],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",null,null],[17,"TRANSFORM_FEEDBACK_VARYING","","",null,null],[17,"ACTIVE_RESOURCES","","",null,null],[17,"MAX_NAME_LENGTH","","",null,null],[17,"MAX_NUM_ACTIVE_VARIABLES","","",null,null],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",null,null],[17,"NAME_LENGTH","","",null,null],[17,"TYPE","","",null,null],[17,"ARRAY_SIZE","","",null,null],[17,"OFFSET","","",null,null],[17,"BLOCK_INDEX","","",null,null],[17,"ARRAY_STRIDE","","",null,null],[17,"MATRIX_STRIDE","","",null,null],[17,"IS_ROW_MAJOR","","",null,null],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",null,null],[17,"BUFFER_BINDING","","",null,null],[17,"BUFFER_DATA_SIZE","","",null,null],[17,"NUM_ACTIVE_VARIABLES","","",null,null],[17,"ACTIVE_VARIABLES","","",null,null],[17,"REFERENCED_BY_VERTEX_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",null,null],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",null,null],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",null,null],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",null,null],[17,"REFERENCED_BY_COMPUTE_SHADER","","",null,null],[17,"TOP_LEVEL_ARRAY_SIZE","","",null,null],[17,"TOP_LEVEL_ARRAY_STRIDE","","",null,null],[17,"LOCATION","","",null,null],[17,"LOCATION_INDEX","","",null,null],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",null,null],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",null,null],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",null,null],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",null,null],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",null,null],[17,"MAX_FRAMEBUFFER_WIDTH","","",null,null],[17,"MAX_FRAMEBUFFER_HEIGHT","","",null,null],[17,"MAX_FRAMEBUFFER_LAYERS","","",null,null],[17,"MAX_FRAMEBUFFER_SAMPLES","","",null,null],[17,"LOCATION_COMPONENT","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",null,null],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",null,null],[17,"CLIP_ORIGIN","","",null,null],[17,"CLIP_DEPTH_MODE","","",null,null],[17,"NEGATIVE_ONE_TO_ONE","","",null,null],[17,"ZERO_TO_ONE","","",null,null],[17,"CLEAR_TEXTURE","","",null,null],[17,"NUM_SAMPLE_COUNTS","","",null,null],[11,"new","","Creates a `FnPtr` from a load attempt.",0,null]],"paths":[[3,"FnPtr"]]};
searchIndex['piston'] = {"items":[[0,"","piston","A user friendly game engine written in Rust.",null,null],[0,"input","","",null,null],[0,"keyboard","piston::input","Back-end agnostic keyboard keys.",null,null],[11,"empty","input::keyboard","Returns an empty set of flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",0,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,null],[11,"remove","","Removes the specified flags in-place.",0,null],[11,"toggle","","Toggles the specified flags in-place.",0,null],[11,"handle_input","","Change modifier key state depending on input.",0,null],[11,"hash","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"eq","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"modifierkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"modifierkey"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"modifierkey"},{"name":"__d"}],"output":{"name":"result"}}],[6,"Output","piston::input::keyboard","",null,null],[11,"bitor","input::keyboard","Returns the union of the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[6,"Output","piston::input::keyboard","",null,null],[11,"bitxor","input::keyboard","Returns the left flags, but with all the right flags toggled.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[6,"Output","piston::input::keyboard","",null,null],[11,"bitand","input::keyboard","Returns the intersection between the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[6,"Output","piston::input::keyboard","",null,null],[11,"sub","input::keyboard","Returns the set difference of the two sets of flags.",0,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[6,"Output","piston::input::keyboard","",null,null],[11,"not","input::keyboard","Returns the complement of this set of flags.",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"default","","",0,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",1,{"inputs":[{"name":"key"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"key"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"eq","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"ordering"}}],[11,"code","","Returns an id of the key",1,{"inputs":[{"name":"key"}],"output":{"name":"i32"}}],[11,"to_i64","","",1,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"to_u64","","",1,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"to_isize","","",1,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"from_u64","","",1,{"inputs":[{"name":"key"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",1,{"inputs":[{"name":"key"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_isize","","",1,{"inputs":[{"name":"key"},{"name":"isize"}],"output":{"name":"option"}}],[11,"fmt","input::mouse","",2,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"partial_cmp","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"ordering"}}],[11,"eq","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"encode","","",2,{"inputs":[{"name":"mousebutton"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"mousebutton"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"from_u64","","",2,{"inputs":[{"name":"mousebutton"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",2,{"inputs":[{"name":"mousebutton"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_isize","","",2,{"inputs":[{"name":"mousebutton"},{"name":"isize"}],"output":{"name":"option"}}],[11,"to_u64","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"to_i64","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"to_isize","","",2,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"fmt","input","",3,{"inputs":[{"name":"button"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"encode","","",3,{"inputs":[{"name":"button"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"button"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"fmt","","",4,{"inputs":[{"name":"motion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"encode","","",4,{"inputs":[{"name":"motion"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"motion"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"motion"}],"output":{"name":"motion"}}],[11,"fmt","","",5,{"inputs":[{"name":"input"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"encode","","",5,{"inputs":[{"name":"input"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"input"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"input"}],"output":{"name":"input"}}],[3,"ModifierKey","piston::input::keyboard","",null,null],[17,"NO_MODIFIER","","",null,null],[17,"CTRL","","",null,null],[17,"SHIFT","","",null,null],[17,"ALT","","",null,null],[17,"GUI","","",null,null],[17,"CTRL_SHIFT","","",null,null],[17,"CTRL_ALT","","",null,null],[17,"CTRL_GUI","","",null,null],[17,"CTRL_SHIFT_ALT","","",null,null],[17,"CTRL_SHIFT_GUI","","",null,null],[17,"CTRL_SHIFT_ALT_GUI","","",null,null],[17,"SHIFT_ALT","","",null,null],[17,"SHIFT_GUI","","",null,null],[17,"SHIFT_ALT_GUI","","",null,null],[17,"ALT_GUI","","",null,null],[4,"Key","","Represent a keyboard key.",null,null],[13,"Unknown","","",1,null],[13,"Backspace","","",1,null],[13,"Tab","","",1,null],[13,"Return","","",1,null],[13,"Escape","","",1,null],[13,"Space","","",1,null],[13,"Exclaim","","",1,null],[13,"Quotedbl","","",1,null],[13,"Hash","","",1,null],[13,"Dollar","","",1,null],[13,"Percent","","",1,null],[13,"Ampersand","","",1,null],[13,"Quote","","",1,null],[13,"LeftParen","","",1,null],[13,"RightParen","","",1,null],[13,"Asterisk","","",1,null],[13,"Plus","","",1,null],[13,"Comma","","",1,null],[13,"Minus","","",1,null],[13,"Period","","",1,null],[13,"Slash","","",1,null],[13,"D0","","",1,null],[13,"D1","","",1,null],[13,"D2","","",1,null],[13,"D3","","",1,null],[13,"D4","","",1,null],[13,"D5","","",1,null],[13,"D6","","",1,null],[13,"D7","","",1,null],[13,"D8","","",1,null],[13,"D9","","",1,null],[13,"Colon","","",1,null],[13,"Semicolon","","",1,null],[13,"Less","","",1,null],[13,"Equals","","",1,null],[13,"Greater","","",1,null],[13,"Question","","",1,null],[13,"At","","",1,null],[13,"LeftBracket","","",1,null],[13,"Backslash","","",1,null],[13,"RightBracket","","",1,null],[13,"Caret","","",1,null],[13,"Underscore","","",1,null],[13,"Backquote","","",1,null],[13,"A","","",1,null],[13,"B","","",1,null],[13,"C","","",1,null],[13,"D","","",1,null],[13,"E","","",1,null],[13,"F","","",1,null],[13,"G","","",1,null],[13,"H","","",1,null],[13,"I","","",1,null],[13,"J","","",1,null],[13,"K","","",1,null],[13,"L","","",1,null],[13,"M","","",1,null],[13,"N","","",1,null],[13,"O","","",1,null],[13,"P","","",1,null],[13,"Q","","",1,null],[13,"R","","",1,null],[13,"S","","",1,null],[13,"T","","",1,null],[13,"U","","",1,null],[13,"V","","",1,null],[13,"W","","",1,null],[13,"X","","",1,null],[13,"Y","","",1,null],[13,"Z","","",1,null],[13,"Delete","","",1,null],[13,"CapsLock","","",1,null],[13,"F1","","",1,null],[13,"F2","","",1,null],[13,"F3","","",1,null],[13,"F4","","",1,null],[13,"F5","","",1,null],[13,"F6","","",1,null],[13,"F7","","",1,null],[13,"F8","","",1,null],[13,"F9","","",1,null],[13,"F10","","",1,null],[13,"F11","","",1,null],[13,"F12","","",1,null],[13,"PrintScreen","","",1,null],[13,"ScrollLock","","",1,null],[13,"Pause","","",1,null],[13,"Insert","","",1,null],[13,"Home","","",1,null],[13,"PageUp","","",1,null],[13,"End","","",1,null],[13,"PageDown","","",1,null],[13,"Right","","",1,null],[13,"Left","","",1,null],[13,"Down","","",1,null],[13,"Up","","",1,null],[13,"NumLockClear","","",1,null],[13,"NumPadDivide","","",1,null],[13,"NumPadMultiply","","",1,null],[13,"NumPadMinus","","",1,null],[13,"NumPadPlus","","",1,null],[13,"NumPadEnter","","",1,null],[13,"NumPad1","","",1,null],[13,"NumPad2","","",1,null],[13,"NumPad3","","",1,null],[13,"NumPad4","","",1,null],[13,"NumPad5","","",1,null],[13,"NumPad6","","",1,null],[13,"NumPad7","","",1,null],[13,"NumPad8","","",1,null],[13,"NumPad9","","",1,null],[13,"NumPad0","","",1,null],[13,"NumPadPeriod","","",1,null],[13,"Application","","",1,null],[13,"Power","","",1,null],[13,"NumPadEquals","","",1,null],[13,"F13","","",1,null],[13,"F14","","",1,null],[13,"F15","","",1,null],[13,"F16","","",1,null],[13,"F17","","",1,null],[13,"F18","","",1,null],[13,"F19","","",1,null],[13,"F20","","",1,null],[13,"F21","","",1,null],[13,"F22","","",1,null],[13,"F23","","",1,null],[13,"F24","","",1,null],[13,"Execute","","",1,null],[13,"Help","","",1,null],[13,"Menu","","",1,null],[13,"Select","","",1,null],[13,"Stop","","",1,null],[13,"Again","","",1,null],[13,"Undo","","",1,null],[13,"Cut","","",1,null],[13,"Copy","","",1,null],[13,"Paste","","",1,null],[13,"Find","","",1,null],[13,"Mute","","",1,null],[13,"VolumeUp","","",1,null],[13,"VolumeDown","","",1,null],[13,"NumPadComma","","",1,null],[13,"NumPadEqualsAS400","","",1,null],[13,"AltErase","","",1,null],[13,"Sysreq","","",1,null],[13,"Cancel","","",1,null],[13,"Clear","","",1,null],[13,"Prior","","",1,null],[13,"Return2","","",1,null],[13,"Separator","","",1,null],[13,"Out","","",1,null],[13,"Oper","","",1,null],[13,"ClearAgain","","",1,null],[13,"CrSel","","",1,null],[13,"ExSel","","",1,null],[13,"NumPad00","","",1,null],[13,"NumPad000","","",1,null],[13,"ThousandsSeparator","","",1,null],[13,"DecimalSeparator","","",1,null],[13,"CurrencyUnit","","",1,null],[13,"CurrencySubUnit","","",1,null],[13,"NumPadLeftParen","","",1,null],[13,"NumPadRightParen","","",1,null],[13,"NumPadLeftBrace","","",1,null],[13,"NumPadRightBrace","","",1,null],[13,"NumPadTab","","",1,null],[13,"NumPadBackspace","","",1,null],[13,"NumPadA","","",1,null],[13,"NumPadB","","",1,null],[13,"NumPadC","","",1,null],[13,"NumPadD","","",1,null],[13,"NumPadE","","",1,null],[13,"NumPadF","","",1,null],[13,"NumPadXor","","",1,null],[13,"NumPadPower","","",1,null],[13,"NumPadPercent","","",1,null],[13,"NumPadLess","","",1,null],[13,"NumPadGreater","","",1,null],[13,"NumPadAmpersand","","",1,null],[13,"NumPadDblAmpersand","","",1,null],[13,"NumPadVerticalBar","","",1,null],[13,"NumPadDblVerticalBar","","",1,null],[13,"NumPadColon","","",1,null],[13,"NumPadHash","","",1,null],[13,"NumPadSpace","","",1,null],[13,"NumPadAt","","",1,null],[13,"NumPadExclam","","",1,null],[13,"NumPadMemStore","","",1,null],[13,"NumPadMemRecall","","",1,null],[13,"NumPadMemClear","","",1,null],[13,"NumPadMemAdd","","",1,null],[13,"NumPadMemSubtract","","",1,null],[13,"NumPadMemMultiply","","",1,null],[13,"NumPadMemDivide","","",1,null],[13,"NumPadPlusMinus","","",1,null],[13,"NumPadClear","","",1,null],[13,"NumPadClearEntry","","",1,null],[13,"NumPadBinary","","",1,null],[13,"NumPadOctal","","",1,null],[13,"NumPadDecimal","","",1,null],[13,"NumPadHexadecimal","","",1,null],[13,"LCtrl","","",1,null],[13,"LShift","","",1,null],[13,"LAlt","","",1,null],[13,"LGui","","",1,null],[13,"RCtrl","","",1,null],[13,"RShift","","",1,null],[13,"RAlt","","",1,null],[13,"RGui","","",1,null],[13,"Mode","","",1,null],[13,"AudioNext","","",1,null],[13,"AudioPrev","","",1,null],[13,"AudioStop","","",1,null],[13,"AudioPlay","","",1,null],[13,"AudioMute","","",1,null],[13,"MediaSelect","","",1,null],[13,"Www","","",1,null],[13,"Mail","","",1,null],[13,"Calculator","","",1,null],[13,"Computer","","",1,null],[13,"AcSearch","","",1,null],[13,"AcHome","","",1,null],[13,"AcBack","","",1,null],[13,"AcForward","","",1,null],[13,"AcStop","","",1,null],[13,"AcRefresh","","",1,null],[13,"AcBookmarks","","",1,null],[13,"BrightnessDown","","",1,null],[13,"BrightnessUp","","",1,null],[13,"DisplaySwitch","","",1,null],[13,"KbdIllumToggle","","",1,null],[13,"KbdIllumDown","","",1,null],[13,"KbdIllumUp","","",1,null],[13,"Eject","","",1,null],[13,"Sleep","","",1,null],[0,"mouse","piston::input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","piston::input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",2,null],[13,"Left","","Left mouse button.",2,null],[13,"Right","","Right mouse button.",2,null],[13,"Middle","","Middle mouse button.",2,null],[13,"X1","","Extra mouse button number 1.",2,null],[13,"X2","","Extra mouse button number 2.",2,null],[13,"Button6","","Mouse button number 6.",2,null],[13,"Button7","","Mouse button number 7.",2,null],[13,"Button8","","Mouse button number 8.",2,null],[4,"Button","piston::input","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",3,null],[13,"Mouse","","A mouse button.",3,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",4,null],[13,"MouseRelative","","x and y in relative coordinates.",4,null],[13,"MouseScroll","","x and y in scroll ticks.",4,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",5,null],[13,"Release","","Released a button.",5,null],[13,"Move","","Moved mouse cursor.",5,null],[13,"Text","","Text (usually from keyboard).",5,null],[13,"Resize","","Window got resized.",5,null],[13,"Focus","","Window gained or lost focus.",5,null],[4,"Key","","Represent a keyboard key.",null,null],[13,"Unknown","","",1,null],[13,"Backspace","","",1,null],[13,"Tab","","",1,null],[13,"Return","","",1,null],[13,"Escape","","",1,null],[13,"Space","","",1,null],[13,"Exclaim","","",1,null],[13,"Quotedbl","","",1,null],[13,"Hash","","",1,null],[13,"Dollar","","",1,null],[13,"Percent","","",1,null],[13,"Ampersand","","",1,null],[13,"Quote","","",1,null],[13,"LeftParen","","",1,null],[13,"RightParen","","",1,null],[13,"Asterisk","","",1,null],[13,"Plus","","",1,null],[13,"Comma","","",1,null],[13,"Minus","","",1,null],[13,"Period","","",1,null],[13,"Slash","","",1,null],[13,"D0","","",1,null],[13,"D1","","",1,null],[13,"D2","","",1,null],[13,"D3","","",1,null],[13,"D4","","",1,null],[13,"D5","","",1,null],[13,"D6","","",1,null],[13,"D7","","",1,null],[13,"D8","","",1,null],[13,"D9","","",1,null],[13,"Colon","","",1,null],[13,"Semicolon","","",1,null],[13,"Less","","",1,null],[13,"Equals","","",1,null],[13,"Greater","","",1,null],[13,"Question","","",1,null],[13,"At","","",1,null],[13,"LeftBracket","","",1,null],[13,"Backslash","","",1,null],[13,"RightBracket","","",1,null],[13,"Caret","","",1,null],[13,"Underscore","","",1,null],[13,"Backquote","","",1,null],[13,"A","","",1,null],[13,"B","","",1,null],[13,"C","","",1,null],[13,"D","","",1,null],[13,"E","","",1,null],[13,"F","","",1,null],[13,"G","","",1,null],[13,"H","","",1,null],[13,"I","","",1,null],[13,"J","","",1,null],[13,"K","","",1,null],[13,"L","","",1,null],[13,"M","","",1,null],[13,"N","","",1,null],[13,"O","","",1,null],[13,"P","","",1,null],[13,"Q","","",1,null],[13,"R","","",1,null],[13,"S","","",1,null],[13,"T","","",1,null],[13,"U","","",1,null],[13,"V","","",1,null],[13,"W","","",1,null],[13,"X","","",1,null],[13,"Y","","",1,null],[13,"Z","","",1,null],[13,"Delete","","",1,null],[13,"CapsLock","","",1,null],[13,"F1","","",1,null],[13,"F2","","",1,null],[13,"F3","","",1,null],[13,"F4","","",1,null],[13,"F5","","",1,null],[13,"F6","","",1,null],[13,"F7","","",1,null],[13,"F8","","",1,null],[13,"F9","","",1,null],[13,"F10","","",1,null],[13,"F11","","",1,null],[13,"F12","","",1,null],[13,"PrintScreen","","",1,null],[13,"ScrollLock","","",1,null],[13,"Pause","","",1,null],[13,"Insert","","",1,null],[13,"Home","","",1,null],[13,"PageUp","","",1,null],[13,"End","","",1,null],[13,"PageDown","","",1,null],[13,"Right","","",1,null],[13,"Left","","",1,null],[13,"Down","","",1,null],[13,"Up","","",1,null],[13,"NumLockClear","","",1,null],[13,"NumPadDivide","","",1,null],[13,"NumPadMultiply","","",1,null],[13,"NumPadMinus","","",1,null],[13,"NumPadPlus","","",1,null],[13,"NumPadEnter","","",1,null],[13,"NumPad1","","",1,null],[13,"NumPad2","","",1,null],[13,"NumPad3","","",1,null],[13,"NumPad4","","",1,null],[13,"NumPad5","","",1,null],[13,"NumPad6","","",1,null],[13,"NumPad7","","",1,null],[13,"NumPad8","","",1,null],[13,"NumPad9","","",1,null],[13,"NumPad0","","",1,null],[13,"NumPadPeriod","","",1,null],[13,"Application","","",1,null],[13,"Power","","",1,null],[13,"NumPadEquals","","",1,null],[13,"F13","","",1,null],[13,"F14","","",1,null],[13,"F15","","",1,null],[13,"F16","","",1,null],[13,"F17","","",1,null],[13,"F18","","",1,null],[13,"F19","","",1,null],[13,"F20","","",1,null],[13,"F21","","",1,null],[13,"F22","","",1,null],[13,"F23","","",1,null],[13,"F24","","",1,null],[13,"Execute","","",1,null],[13,"Help","","",1,null],[13,"Menu","","",1,null],[13,"Select","","",1,null],[13,"Stop","","",1,null],[13,"Again","","",1,null],[13,"Undo","","",1,null],[13,"Cut","","",1,null],[13,"Copy","","",1,null],[13,"Paste","","",1,null],[13,"Find","","",1,null],[13,"Mute","","",1,null],[13,"VolumeUp","","",1,null],[13,"VolumeDown","","",1,null],[13,"NumPadComma","","",1,null],[13,"NumPadEqualsAS400","","",1,null],[13,"AltErase","","",1,null],[13,"Sysreq","","",1,null],[13,"Cancel","","",1,null],[13,"Clear","","",1,null],[13,"Prior","","",1,null],[13,"Return2","","",1,null],[13,"Separator","","",1,null],[13,"Out","","",1,null],[13,"Oper","","",1,null],[13,"ClearAgain","","",1,null],[13,"CrSel","","",1,null],[13,"ExSel","","",1,null],[13,"NumPad00","","",1,null],[13,"NumPad000","","",1,null],[13,"ThousandsSeparator","","",1,null],[13,"DecimalSeparator","","",1,null],[13,"CurrencyUnit","","",1,null],[13,"CurrencySubUnit","","",1,null],[13,"NumPadLeftParen","","",1,null],[13,"NumPadRightParen","","",1,null],[13,"NumPadLeftBrace","","",1,null],[13,"NumPadRightBrace","","",1,null],[13,"NumPadTab","","",1,null],[13,"NumPadBackspace","","",1,null],[13,"NumPadA","","",1,null],[13,"NumPadB","","",1,null],[13,"NumPadC","","",1,null],[13,"NumPadD","","",1,null],[13,"NumPadE","","",1,null],[13,"NumPadF","","",1,null],[13,"NumPadXor","","",1,null],[13,"NumPadPower","","",1,null],[13,"NumPadPercent","","",1,null],[13,"NumPadLess","","",1,null],[13,"NumPadGreater","","",1,null],[13,"NumPadAmpersand","","",1,null],[13,"NumPadDblAmpersand","","",1,null],[13,"NumPadVerticalBar","","",1,null],[13,"NumPadDblVerticalBar","","",1,null],[13,"NumPadColon","","",1,null],[13,"NumPadHash","","",1,null],[13,"NumPadSpace","","",1,null],[13,"NumPadAt","","",1,null],[13,"NumPadExclam","","",1,null],[13,"NumPadMemStore","","",1,null],[13,"NumPadMemRecall","","",1,null],[13,"NumPadMemClear","","",1,null],[13,"NumPadMemAdd","","",1,null],[13,"NumPadMemSubtract","","",1,null],[13,"NumPadMemMultiply","","",1,null],[13,"NumPadMemDivide","","",1,null],[13,"NumPadPlusMinus","","",1,null],[13,"NumPadClear","","",1,null],[13,"NumPadClearEntry","","",1,null],[13,"NumPadBinary","","",1,null],[13,"NumPadOctal","","",1,null],[13,"NumPadDecimal","","",1,null],[13,"NumPadHexadecimal","","",1,null],[13,"LCtrl","","",1,null],[13,"LShift","","",1,null],[13,"LAlt","","",1,null],[13,"LGui","","",1,null],[13,"RCtrl","","",1,null],[13,"RShift","","",1,null],[13,"RAlt","","",1,null],[13,"RGui","","",1,null],[13,"Mode","","",1,null],[13,"AudioNext","","",1,null],[13,"AudioPrev","","",1,null],[13,"AudioStop","","",1,null],[13,"AudioPlay","","",1,null],[13,"AudioMute","","",1,null],[13,"MediaSelect","","",1,null],[13,"Www","","",1,null],[13,"Mail","","",1,null],[13,"Calculator","","",1,null],[13,"Computer","","",1,null],[13,"AcSearch","","",1,null],[13,"AcHome","","",1,null],[13,"AcBack","","",1,null],[13,"AcForward","","",1,null],[13,"AcStop","","",1,null],[13,"AcRefresh","","",1,null],[13,"AcBookmarks","","",1,null],[13,"BrightnessDown","","",1,null],[13,"BrightnessUp","","",1,null],[13,"DisplaySwitch","","",1,null],[13,"KbdIllumToggle","","",1,null],[13,"KbdIllumDown","","",1,null],[13,"KbdIllumUp","","",1,null],[13,"Eject","","",1,null],[13,"Sleep","","",1,null],[4,"MouseButton","","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",2,null],[13,"Left","","Left mouse button.",2,null],[13,"Right","","Right mouse button.",2,null],[13,"Middle","","Middle mouse button.",2,null],[13,"X1","","Extra mouse button number 1.",2,null],[13,"X2","","Extra mouse button number 2.",2,null],[13,"Button6","","Mouse button number 6.",2,null],[13,"Button7","","Mouse button number 7.",2,null],[13,"Button8","","Mouse button number 8.",2,null],[0,"event","piston","",null,null],[0,"generic_event","piston::event","Trait for generic events",null,null],[8,"GenericEvent","piston::event::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",6,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with table",6,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from table to `Self`",6,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","piston::input","",5,{"inputs":[{"name":"input"}],"output":{"name":"eventid"}}],[11,"with_args","","",5,{"inputs":[{"name":"input"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",5,{"inputs":[{"name":"input"},{"name":"eventid"},{"name":"any"},{"name":"input"}],"output":{"name":"option"}}],[11,"event_id","event::event","",7,{"inputs":[{"name":"event"}],"output":{"name":"eventid"}}],[11,"with_args","","",7,{"inputs":[{"name":"event"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",7,{"inputs":[{"name":"event"},{"name":"eventid"},{"name":"any"},{"name":"event"}],"output":{"name":"option"}}],[11,"fmt","","",7,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"render","","",7,{"inputs":[{"name":"event"},{"name":"renderargs"}],"output":{"name":"event"}}],[11,"after_render","","",7,{"inputs":[{"name":"event"},{"name":"afterrenderargs"}],"output":{"name":"event"}}],[11,"update","","",7,{"inputs":[{"name":"event"},{"name":"updateargs"}],"output":{"name":"event"}}],[11,"idle","","",7,{"inputs":[{"name":"event"},{"name":"idleargs"}],"output":{"name":"event"}}],[11,"input","","",7,{"inputs":[{"name":"event"},{"name":"i"}],"output":{"name":"event"}}],[11,"eq","event","",8,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"eventid"}],"output":{"name":"eventid"}}],[11,"events","alloc::rc","",9,{"inputs":[{"name":"rc"}],"output":{"name":"windowevents"}}],[3,"EventId","piston::event","Used to identify events arguments provided by traits.",null,null],[8,"Events","","A trait for create event iterator from window.",null,null],[10,"events","","Creates event iterator from window.",10,{"inputs":[{"name":"events"}],"output":{"name":"windowevents"}}],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",11,{"inputs":[{"name":"resizeevent"},{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[10,"resize","","Calls closure if this is a resize event.",11,{"inputs":[{"name":"resizeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",11,{"inputs":[{"name":"resizeevent"}],"output":{"name":"option"}}],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",12,{"inputs":[{"name":"pressevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"press","","Calls closure if this is a press event.",12,{"inputs":[{"name":"pressevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",12,{"inputs":[{"name":"pressevent"}],"output":{"name":"option"}}],[4,"Event","","Adds render and update events to input events",null,null],[13,"Render","","Render graphics.",7,null],[13,"AfterRender","","After rendering and swapping buffers.",7,null],[13,"Update","","Update the state of the application.",7,null],[13,"Idle","","Do background tasks that can be done incrementally.",7,null],[13,"Input","","Input event.",7,null],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",13,{"inputs":[{"name":"afterrenderevent"},{"name":"afterrenderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"after_render","","Calls closure if this is an after render event.",13,{"inputs":[{"name":"afterrenderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",13,{"inputs":[{"name":"afterrenderevent"}],"output":{"name":"option"}}],[11,"fmt","event_loop","",14,{"inputs":[{"name":"renderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"renderargs"}],"output":{"name":"renderargs"}}],[11,"viewport","","Returns viewport information filling entire render area.",14,{"inputs":[{"name":"renderargs"}],"output":{"name":"viewport"}}],[11,"fmt","","",15,{"inputs":[{"name":"afterrenderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"afterrenderargs"}}],[11,"fmt","","",16,{"inputs":[{"name":"updateargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"updateargs"}],"output":{"name":"updateargs"}}],[11,"fmt","","",17,{"inputs":[{"name":"idleargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"idleargs"}],"output":{"name":"idleargs"}}],[11,"eq","","",18,{"inputs":[{"name":"idle"},{"name":"idle"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"idle"},{"name":"idle"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"idle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"idle"}],"output":{"name":"idle"}}],[11,"fmt","","",19,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",20,{"inputs":[{"name":"windowevents"},{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"ups","","The number of updates per second",20,{"inputs":[{"name":"windowevents"},{"name":"u64"}],"output":{"name":"windowevents"}}],[11,"max_fps","","The maximum number of frames per second",20,{"inputs":[{"name":"windowevents"},{"name":"u64"}],"output":{"name":"windowevents"}}],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",20,{"inputs":[{"name":"windowevents"},{"name":"bool"}],"output":{"name":"windowevents"}}],[11,"bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",20,{"inputs":[{"name":"windowevents"},{"name":"bool"}],"output":{"name":"windowevents"}}],[6,"Item","piston::event","",null,null],[11,"next","event_loop","Returns the next game event.",20,{"inputs":[{"name":"windowevents"}],"output":{"name":"option"}}],[3,"AfterRenderArgs","piston::event","After render arguments.",null,null],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",21,{"inputs":[{"name":"textevent"},{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[10,"text","","Calls closure if this is a text event.",21,{"inputs":[{"name":"textevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",21,{"inputs":[{"name":"textevent"}],"output":{"name":"option"}}],[8,"FocusEvent","","When window gets or looses focus",null,null],[10,"from_focused","","Creates a focus event.",22,{"inputs":[{"name":"focusevent"},{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"focus","","Calls closure if this is a focus event.",22,{"inputs":[{"name":"focusevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",22,{"inputs":[{"name":"focusevent"}],"output":{"name":"option"}}],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",23,{"inputs":[{"name":"updateevent"},{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",23,{"inputs":[{"name":"updateevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"update","","Calls closure if this is an update event.",23,{"inputs":[{"name":"updateevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",23,{"inputs":[{"name":"updateevent"}],"output":{"name":"option"}}],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",24,{"inputs":[{"name":"mousecursorevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",24,{"inputs":[{"name":"mousecursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",24,{"inputs":[{"name":"mousecursorevent"}],"output":{"name":"option"}}],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",25,{"inputs":[{"name":"releaseevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"release","","Calls closure if this is a release event.",25,{"inputs":[{"name":"releaseevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",25,{"inputs":[{"name":"releaseevent"}],"output":{"name":"option"}}],[8,"GenericEvent","","Implemented by all events",null,null],[10,"event_id","","The id of this event.",6,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with table",6,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from table to `Self`",6,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[8,"EventMap","","Methods required to map from consumed event to emitted event.",null,null],[10,"render","","Creates a render event.",26,{"inputs":[{"name":"eventmap"},{"name":"renderargs"}],"output":{"name":"self"}}],[10,"after_render","","Creates an after render event.",26,{"inputs":[{"name":"eventmap"},{"name":"afterrenderargs"}],"output":{"name":"self"}}],[10,"update","","Creates an update event.",26,{"inputs":[{"name":"eventmap"},{"name":"updateargs"}],"output":{"name":"self"}}],[10,"input","","Creates an input event.",26,{"inputs":[{"name":"eventmap"},{"name":"i"}],"output":{"name":"self"}}],[10,"idle","","Creates an idle event.",26,{"inputs":[{"name":"eventmap"},{"name":"idleargs"}],"output":{"name":"self"}}],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",27,{"inputs":[{"name":"mouserelativeevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",27,{"inputs":[{"name":"mouserelativeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",27,{"inputs":[{"name":"mouserelativeevent"}],"output":{"name":"option"}}],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",28,{"inputs":[{"name":"renderevent"},{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"render","","Calls closure if this is a render event.",28,{"inputs":[{"name":"renderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",28,{"inputs":[{"name":"renderevent"}],"output":{"name":"option"}}],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",14,null],[12,"width","","The width of rendered area in points.",14,null],[12,"height","","The height of rendered area in points.",14,null],[12,"draw_width","","The width of rendered area in pixels.",14,null],[12,"draw_height","","The height of rendered area in pixels.",14,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[3,"WindowEvents","","An event loop iterator",null,null],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",17,null],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",29,{"inputs":[{"name":"idleevent"},{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",29,{"inputs":[{"name":"idleevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"idle","","Calls closure if this is an idle event.",29,{"inputs":[{"name":"idleevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",29,{"inputs":[{"name":"idleevent"}],"output":{"name":"option"}}],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",30,{"inputs":[{"name":"mousescrollevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",30,{"inputs":[{"name":"mousescrollevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",30,{"inputs":[{"name":"mousescrollevent"}],"output":{"name":"option"}}],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",16,null],[0,"window","piston","",null,null],[11,"clone","window","",31,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"from","","",31,null],[11,"from","","",31,null],[11,"new","","Creates window settings with defaults.\n- samples: 0\n- fullscreen: false\n- exit_on_esc: false",32,{"inputs":[{"name":"windowsettings"},{"name":"t"},{"name":"s"}],"output":{"name":"windowsettings"}}],[11,"get_title","","Gets title.",32,{"inputs":[{"name":"windowsettings"}],"output":{"name":"string"}}],[11,"title","","Sets title.",32,{"inputs":[{"name":"windowsettings"},{"name":"string"}],"output":{"name":"windowsettings"}}],[11,"get_size","","Gets size.",32,{"inputs":[{"name":"windowsettings"}],"output":{"name":"size"}}],[11,"size","","Sets size.",32,{"inputs":[{"name":"windowsettings"},{"name":"size"}],"output":{"name":"windowsettings"}}],[11,"get_fullscreen","","Gets fullscreen.",32,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"fullscreen","","Sets fullscreen.",32,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"get_exit_on_esc","","Gets exit on esc.",32,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"exit_on_esc","","Sets exit on esc.",32,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"get_samples","","Gets samples.",32,{"inputs":[{"name":"windowsettings"}],"output":{"name":"u8"}}],[11,"samples","","Sets samples.",32,{"inputs":[{"name":"windowsettings"},{"name":"u8"}],"output":{"name":"windowsettings"}}],[11,"get_vsync","","Gets vsync.",32,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"vsync","","Sets vsync.",32,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"windowsettings"}}],[11,"new","","Returns a new `NoWindow`.",33,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[6,"Event","piston::window","",null,null],[11,"should_close","window","",33,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"size","","",33,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"swap_buffers","","",33,null],[11,"poll_event","","",33,{"inputs":[{"name":"nowindow"}],"output":{"name":"option"}}],[11,"draw_size","","",33,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"get_title","","",33,{"inputs":[{"name":"nowindow"}],"output":{"name":"string"}}],[11,"set_title","","",33,null],[11,"get_exit_on_esc","","",33,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",33,null],[11,"set_capture_cursor","","",33,null],[6,"ProcAddress","piston::window","",null,null],[3,"Size","","Size in pixels.",null,null],[12,"width","","The width in pixels.",31,null],[12,"height","","The height in pixels.",31,null],[8,"Window","","Required to use the event loop.",null,null],[16,"Event","","The event type emitted by `poll_event`",34,null],[10,"should_close","","Returns true if window should close.",34,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[10,"size","","Gets the size of the window in user coordinates.",34,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[10,"swap_buffers","","Swaps render buffers.",34,null],[10,"poll_event","","Polls event from window.",34,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[10,"draw_size","","Gets draw size of the window.\nThis is equal to the size of the frame buffer of the inner window,\nexcluding the title bar and borders.",34,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[8,"AdvancedWindow","","Implemented by fully supported window back-ends.",null,null],[10,"get_title","","Gets a copy of the title of the window.",35,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"string"}}],[10,"set_title","","Sets the title of the window.",35,null],[11,"title","","Sets title on window.",35,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":{"name":"self"}}],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",35,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"bool"}}],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",35,null],[11,"exit_on_esc","","Sets whether to exit when pressing esc.",35,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_capture_cursor","","Sets whether to capture/grab cursor.\nThis is used to lock and hide cursor to the window,\nfor example in a first-person shooter game.",35,null],[11,"capture_cursor","","Sets whether to capture/grab cursor (see `set_capture_cursor`).",35,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[8,"OpenGLWindow","","Trait for OpenGL specific operations.",null,null],[10,"get_proc_address","","Returns the address of an OpenGL function if it exist, else returns null pointer.",36,null],[10,"is_current","","Returns true if this context is the current context.",36,{"inputs":[{"name":"openglwindow"}],"output":{"name":"bool"}}],[10,"make_current","","Make this context current.",36,null],[3,"WindowSettings","","Settings for window behavior.",null,null],[3,"NoWindow","","An implementation of Window that runs without a window at all.",null,null]],"paths":[[3,"ModifierKey"],[4,"Key"],[4,"MouseButton"],[4,"Button"],[4,"Motion"],[4,"Input"],[8,"GenericEvent"],[4,"Event"],[3,"EventId"],[3,"Rc"],[8,"Events"],[8,"ResizeEvent"],[8,"PressEvent"],[8,"AfterRenderEvent"],[3,"RenderArgs"],[3,"AfterRenderArgs"],[3,"UpdateArgs"],[3,"IdleArgs"],[4,"Idle"],[4,"State"],[3,"WindowEvents"],[8,"TextEvent"],[8,"FocusEvent"],[8,"UpdateEvent"],[8,"MouseCursorEvent"],[8,"ReleaseEvent"],[8,"EventMap"],[8,"MouseRelativeEvent"],[8,"RenderEvent"],[8,"IdleEvent"],[8,"MouseScrollEvent"],[3,"Size"],[3,"WindowSettings"],[3,"NoWindow"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"]]};
searchIndex['event'] = {"items":[[0,"","event","A library for event threading",null,null],[3,"EventId","","Used to identify events arguments provided by traits.",null,null],[4,"Event","","Adds render and update events to input events",null,null],[13,"Render","","Render graphics.",0,null],[13,"AfterRender","","After rendering and swapping buffers.",0,null],[13,"Update","","Update the state of the application.",0,null],[13,"Idle","","Do background tasks that can be done incrementally.",0,null],[13,"Input","","Input event.",0,null],[0,"generic_event","","Trait for generic events",null,null],[8,"GenericEvent","event::generic_event","Implemented by all events",null,null],[10,"event_id","","The id of this event.",1,{"inputs":[{"name":"genericevent"}],"output":{"name":"eventid"}}],[10,"with_args","","Calls closure with table",1,{"inputs":[{"name":"genericevent"},{"name":"f"}],"output":{"name":"u"}}],[10,"from_args","","Converts from table to `Self`",1,{"inputs":[{"name":"genericevent"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","input","",2,{"inputs":[{"name":"input"}],"output":{"name":"eventid"}}],[11,"with_args","","",2,{"inputs":[{"name":"input"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",2,{"inputs":[{"name":"input"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"event_id","event","",0,{"inputs":[{"name":"event"}],"output":{"name":"eventid"}}],[11,"with_args","","",0,{"inputs":[{"name":"event"},{"name":"f"}],"output":{"name":"u"}}],[11,"from_args","","",0,{"inputs":[{"name":"event"},{"name":"eventid"},{"name":"any"},{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"render","","",0,{"inputs":[{"name":"event"},{"name":"renderargs"}],"output":{"name":"event"}}],[11,"after_render","","",0,{"inputs":[{"name":"event"},{"name":"afterrenderargs"}],"output":{"name":"event"}}],[11,"update","","",0,{"inputs":[{"name":"event"},{"name":"updateargs"}],"output":{"name":"event"}}],[11,"idle","","",0,{"inputs":[{"name":"event"},{"name":"idleargs"}],"output":{"name":"event"}}],[11,"input","","",0,{"inputs":[{"name":"event"},{"name":"i"}],"output":{"name":"event"}}],[8,"UpdateEvent","","When the application state should be updated",null,null],[10,"from_update_args","","Creates an update event.",3,{"inputs":[{"name":"updateevent"},{"name":"updateargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",3,{"inputs":[{"name":"updateevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"update","","Calls closure if this is an update event.",3,{"inputs":[{"name":"updateevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"update_args","","Returns update arguments.",3,{"inputs":[{"name":"updateevent"}],"output":{"name":"option"}}],[8,"RenderEvent","","When the next frame should be rendered",null,null],[10,"from_render_args","","Creates a render event.",4,{"inputs":[{"name":"renderevent"},{"name":"renderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"render","","Calls closure if this is a render event.",4,{"inputs":[{"name":"renderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"render_args","","Returns render arguments.",4,{"inputs":[{"name":"renderevent"}],"output":{"name":"option"}}],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",null,null],[10,"from_after_render_args","","Creates an after render event.",5,{"inputs":[{"name":"afterrenderevent"},{"name":"afterrenderargs"},{"name":"self"}],"output":{"name":"option"}}],[10,"after_render","","Calls closure if this is an after render event.",5,{"inputs":[{"name":"afterrenderevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"after_render_args","","Returns after render arguments.",5,{"inputs":[{"name":"afterrenderevent"}],"output":{"name":"option"}}],[8,"IdleEvent","","When background tasks should be performed",null,null],[10,"from_idle_args","","Creates an idle event.",6,{"inputs":[{"name":"idleevent"},{"name":"idleargs"},{"name":"self"}],"output":{"name":"option"}}],[11,"from_dt","","Creates an update event with delta time.",6,{"inputs":[{"name":"idleevent"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"idle","","Calls closure if this is an idle event.",6,{"inputs":[{"name":"idleevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"idle_args","","Returns idle arguments.",6,{"inputs":[{"name":"idleevent"}],"output":{"name":"option"}}],[8,"PressEvent","","The press of a button",null,null],[10,"from_button","","Creates a press event.",7,{"inputs":[{"name":"pressevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"press","","Calls closure if this is a press event.",7,{"inputs":[{"name":"pressevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"press_args","","Returns press arguments.",7,{"inputs":[{"name":"pressevent"}],"output":{"name":"option"}}],[8,"ReleaseEvent","","The release of a button",null,null],[10,"from_button","","Creates a release event.",8,{"inputs":[{"name":"releaseevent"},{"name":"button"},{"name":"self"}],"output":{"name":"option"}}],[10,"release","","Calls closure if this is a release event.",8,{"inputs":[{"name":"releaseevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"release_args","","Returns release arguments.",8,{"inputs":[{"name":"releaseevent"}],"output":{"name":"option"}}],[8,"MouseCursorEvent","","The position of the mouse cursor",null,null],[10,"from_xy","","Creates a mouse cursor event.",9,{"inputs":[{"name":"mousecursorevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",9,{"inputs":[{"name":"mousecursorevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",9,{"inputs":[{"name":"mousecursorevent"}],"output":{"name":"option"}}],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",null,null],[10,"from_xy","","Creates a mouse relative event.",10,{"inputs":[{"name":"mouserelativeevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",10,{"inputs":[{"name":"mouserelativeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_relative_args","","Returns mouse relative arguments.",10,{"inputs":[{"name":"mouserelativeevent"}],"output":{"name":"option"}}],[8,"MouseScrollEvent","","The scroll of the mouse wheel",null,null],[10,"from_xy","","Creates a mouse scroll event.",11,{"inputs":[{"name":"mousescrollevent"},{"name":"f64"},{"name":"f64"},{"name":"self"}],"output":{"name":"option"}}],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",11,{"inputs":[{"name":"mousescrollevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",11,{"inputs":[{"name":"mousescrollevent"}],"output":{"name":"option"}}],[8,"TextEvent","","When receiving text from user, such as typing a character",null,null],[10,"from_text","","Creates a text event.",12,{"inputs":[{"name":"textevent"},{"name":"str"},{"name":"self"}],"output":{"name":"option"}}],[10,"text","","Calls closure if this is a text event.",12,{"inputs":[{"name":"textevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"text_args","","Returns text arguments.",12,{"inputs":[{"name":"textevent"}],"output":{"name":"option"}}],[8,"ResizeEvent","","When the window is resized",null,null],[10,"from_width_height","","Creates a resize event.",13,{"inputs":[{"name":"resizeevent"},{"name":"u32"},{"name":"u32"},{"name":"self"}],"output":{"name":"option"}}],[10,"resize","","Calls closure if this is a resize event.",13,{"inputs":[{"name":"resizeevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"resize_args","","Returns resize arguments.",13,{"inputs":[{"name":"resizeevent"}],"output":{"name":"option"}}],[8,"FocusEvent","","When window gets or looses focus",null,null],[10,"from_focused","","Creates a focus event.",14,{"inputs":[{"name":"focusevent"},{"name":"bool"},{"name":"self"}],"output":{"name":"option"}}],[10,"focus","","Calls closure if this is a focus event.",14,{"inputs":[{"name":"focusevent"},{"name":"f"}],"output":{"name":"option"}}],[11,"focus_args","","Returns focus arguments.",14,{"inputs":[{"name":"focusevent"}],"output":{"name":"option"}}],[8,"Events","","A trait for create event iterator from window.",null,null],[10,"events","","Creates event iterator from window.",15,{"inputs":[{"name":"events"}],"output":{"name":"windowevents"}}],[11,"eq","","",16,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"eventid"},{"name":"eventid"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"eventid"}],"output":{"name":"eventid"}}],[11,"events","alloc::rc","",17,{"inputs":[{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"from_dt","event","Creates an update event with delta time.",3,null],[11,"update_args","","Returns update arguments.",3,null],[11,"render_args","","Returns render arguments.",4,null],[11,"after_render_args","","Returns after render arguments.",5,null],[11,"from_dt","","Creates an update event with delta time.",6,null],[11,"idle_args","","Returns idle arguments.",6,null],[11,"press_args","","Returns press arguments.",7,null],[11,"release_args","","Returns release arguments.",8,null],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",9,null],[11,"mouse_relative_args","","Returns mouse relative arguments.",10,null],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",11,null],[11,"text_args","","Returns text arguments.",12,null],[11,"resize_args","","Returns resize arguments.",13,null],[11,"focus_args","","Returns focus arguments.",14,null]],"paths":[[4,"Event"],[8,"GenericEvent"],[4,"Input"],[8,"UpdateEvent"],[8,"RenderEvent"],[8,"AfterRenderEvent"],[8,"IdleEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"TextEvent"],[8,"ResizeEvent"],[8,"FocusEvent"],[8,"Events"],[3,"EventId"],[3,"Rc"]]};
searchIndex['event_loop'] = {"items":[[0,"","event_loop","A generic event loop for games and interactive applications",null,null],[3,"RenderArgs","","Render arguments",null,null],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",0,null],[12,"width","","The width of rendered area in points.",0,null],[12,"height","","The height of rendered area in points.",0,null],[12,"draw_width","","The width of rendered area in pixels.",0,null],[12,"draw_height","","The height of rendered area in pixels.",0,null],[3,"AfterRenderArgs","","After render arguments.",null,null],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",null,null],[12,"dt","","Delta time in seconds.",1,null],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",null,null],[12,"dt","","Expected idle time in seconds.",2,null],[3,"WindowEvents","","An event loop iterator",null,null],[17,"DEFAULT_UPS","","The default updates per second.",null,null],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",null,null],[8,"EventMap","","Methods required to map from consumed event to emitted event.",null,null],[10,"render","","Creates a render event.",3,{"inputs":[{"name":"eventmap"},{"name":"renderargs"}],"output":{"name":"self"}}],[10,"after_render","","Creates an after render event.",3,{"inputs":[{"name":"eventmap"},{"name":"afterrenderargs"}],"output":{"name":"self"}}],[10,"update","","Creates an update event.",3,{"inputs":[{"name":"eventmap"},{"name":"updateargs"}],"output":{"name":"self"}}],[10,"input","","Creates an input event.",3,{"inputs":[{"name":"eventmap"},{"name":"i"}],"output":{"name":"self"}}],[10,"idle","","Creates an idle event.",3,{"inputs":[{"name":"eventmap"},{"name":"idleargs"}],"output":{"name":"self"}}],[11,"fmt","","",0,{"inputs":[{"name":"renderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"renderargs"},{"name":"renderargs"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"renderargs"}],"output":{"name":"renderargs"}}],[11,"viewport","","Returns viewport information filling entire render area.",0,{"inputs":[{"name":"renderargs"}],"output":{"name":"viewport"}}],[11,"fmt","","",4,{"inputs":[{"name":"afterrenderargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"afterrenderargs"},{"name":"afterrenderargs"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"afterrenderargs"}],"output":{"name":"afterrenderargs"}}],[11,"fmt","","",1,{"inputs":[{"name":"updateargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"updateargs"},{"name":"updateargs"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"updateargs"}],"output":{"name":"updateargs"}}],[11,"fmt","","",2,{"inputs":[{"name":"idleargs"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"idleargs"},{"name":"idleargs"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"idleargs"}],"output":{"name":"idleargs"}}],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",5,{"inputs":[{"name":"windowevents"},{"name":"rc"}],"output":{"name":"windowevents"}}],[11,"ups","","The number of updates per second",5,{"inputs":[{"name":"windowevents"},{"name":"u64"}],"output":{"name":"self"}}],[11,"max_fps","","The maximum number of frames per second",5,{"inputs":[{"name":"windowevents"},{"name":"u64"}],"output":{"name":"self"}}],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",5,{"inputs":[{"name":"windowevents"},{"name":"bool"}],"output":{"name":"self"}}],[11,"bench_mode","","Enable or disable benchmark mode.\nWhen enabled, it will render and update without sleep and ignore input.\nUsed to test performance by playing through as fast as possible.",5,{"inputs":[{"name":"windowevents"},{"name":"bool"}],"output":{"name":"self"}}],[6,"Item","","",null,null],[11,"next","","Returns the next game event.",5,{"inputs":[{"name":"windowevents"}],"output":{"name":"option"}}]],"paths":[[3,"RenderArgs"],[3,"UpdateArgs"],[3,"IdleArgs"],[8,"EventMap"],[3,"AfterRenderArgs"],[3,"WindowEvents"]]};
searchIndex['image'] = {"items":[[0,"","image","This crate provides native rust implementations of\nimage encoders and decoders and basic image manipulation\nfunctions.",null,null],[3,"Luma","","Grayscale colors",null,null],[12,"data","","",0,null],[3,"LumaA","","Grayscale colors + alpha channel",null,null],[12,"data","","",1,null],[3,"Rgb","","RGB colors",null,null],[12,"data","","",2,null],[3,"Rgba","","RGB colors + alpha channel",null,null],[12,"data","","",3,null],[3,"SubImage","","A View into another image",null,null],[3,"Pixels","","Immutable pixel iterator",null,null],[3,"MutPixels","","Mutable pixel iterator\nDEPRECATED: It is currently not possible to create a safe iterator for this in Rust. You have to use an iterator over the image buffer instead.",null,null],[3,"ImageBuffer","","Generic image buffer",null,null],[3,"Frame","","A single animation frame",null,null],[3,"Frames","","Hold the frames of the animated image",null,null],[4,"ColorType","","An enumeration over supported color types and their bit depths",null,null],[13,"Gray","","Pixel is grayscale",4,null],[13,"RGB","","Pixel contains R, G and B channels",4,null],[13,"Palette","","Pixel is an index into a color palette",4,null],[13,"GrayA","","Pixel is grayscale with an alpha channel",4,null],[13,"RGBA","","Pixel is RGB with an alpha channel",4,null],[4,"ImageError","","An enumeration of Image Errors",null,null],[13,"FormatError","","The Image is not formatted properly",5,null],[13,"DimensionError","","The Image's dimensions are either too small or too large",5,null],[13,"UnsupportedError","","The Decoder does not support this image format",5,null],[13,"UnsupportedColor","","The Decoder does not support this color type",5,null],[13,"NotEnoughData","","Not enough data was provided to the Decoder\nto decode the image",5,null],[13,"IoError","","An I/O Error occurred while decoding the image",5,null],[13,"ImageEnd","","The end of the image has been reached",5,null],[4,"FilterType","","Available Sampling Filters",null,null],[13,"Nearest","","Nearest Neighbor",6,null],[13,"Triangle","","Linear Filter",6,null],[13,"CatmullRom","","Cubic Filter",6,null],[13,"Gaussian","","Gaussian Filter",6,null],[13,"Lanczos3","","Lanczos with window 3",6,null],[4,"ImageFormat","","An enumeration of supported image formats.\nNot all formats support both encoding and decoding.",null,null],[13,"PNG","","An Image in PNG Format",7,null],[13,"JPEG","","An Image in JPEG Format",7,null],[13,"GIF","","An Image in GIF Format",7,null],[13,"WEBP","","An Image in WEBP Format",7,null],[13,"PPM","","An Image in PPM Format",7,null],[13,"TIFF","","An Image in TIFF Format",7,null],[13,"TGA","","An Image in TGA Format",7,null],[13,"BMP","","An Image in BMP Format",7,null],[4,"DynamicImage","","A Dynamic Image",null,null],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",8,null],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",8,null],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",8,null],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",8,null],[5,"open","","Open the image located at the path specified.\nThe image's format is determined from the path's file extension.",null,{"inputs":[{"name":"p"}],"output":{"name":"imageresult"}}],[5,"load","","Create a new image from a Reader",null,{"inputs":[{"name":"r"},{"name":"imageformat"}],"output":{"name":"imageresult"}}],[5,"load_from_memory","","Create a new image from a byte slice\nMakes an educated guess about the image format.\nTGA is not supported by this function.",null,null],[5,"load_from_memory_with_format","","Create a new image from a byte slice",null,null],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",null,null],[0,"math","","Mathematical helper functions and types.",null,null],[0,"utils","image::math","Shared mathematical utility functions.",null,null],[5,"clamp","image::math::utils","Cut value to be inside given range",null,{"inputs":[{"name":"n"},{"name":"n"},{"name":"n"}],"output":{"name":"n"}}],[0,"nq","image::math","NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\nSee \"Kohonen neural networks for optimal colour quantization\"\nin \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\nfor a discussion of the algorithm.\nSee also  http://www.acm.org/~dekker/NEUQUANT.HTML",null,null],[3,"NeuQuant","image::math::nq","Neural network color quantizer",null,null],[11,"new","","Creates a new neuronal network and trains it with the supplied data",9,null],[11,"init","","Initializes the neuronal network and trains it with the supplied data",9,null],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the color map",9,null],[11,"index_of","","Finds the best-matching index in the color map for `pixel`",9,null],[0,"imageops","image","Image Processing Functions",null,null],[5,"rotate90","image::imageops","Rotate an image 90 degrees clockwise.",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"rotate180","","Rotate an image 180 degrees clockwise.",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"rotate270","","Rotate an image 270 degrees clockwise.",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"flip_horizontal","","Flip an image horizontally",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"flip_vertical","","Flip an image vertically",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image.\n```kernel``` is an array of the filter weights of length 9.",null,null],[5,"resize","","Resize the supplied image to the specified dimensions\n```nwidth``` and ```nheight``` are the new dimensions.\n```filter``` is the sampling filter to use.",null,{"inputs":[{"name":"i"},{"name":"u32"},{"name":"u32"},{"name":"filtertype"}],"output":{"name":"imagebuffer"}}],[5,"blur","","Performs a Gaussian blur on the supplied image.\n```sigma``` is a measure of how much to blur by.",null,{"inputs":[{"name":"i"},{"name":"f32"}],"output":{"name":"imagebuffer"}}],[5,"unsharpen","","Performs an unsharpen mask on the supplied image\n```sigma``` is the amount to blur the image by.\n```threshold``` is the threshold for the difference between\nsee https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking",null,{"inputs":[{"name":"i"},{"name":"f32"},{"name":"i32"}],"output":{"name":"imagebuffer"}}],[5,"crop","","Return a mutable view into an image",null,{"inputs":[{"name":"i"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"subimage"}}],[5,"overlay","","Overlay an image at a given coordinate (x, y)",null,{"inputs":[{"name":"i"},{"name":"i"},{"name":"u32"},{"name":"u32"}],"output":null}],[5,"replace","","Replace the contents of an image at a given coordinate (x, y)",null,{"inputs":[{"name":"i"},{"name":"i"},{"name":"u32"},{"name":"u32"}],"output":null}],[0,"colorops","","Public only because of Rust bug:\nhttps://github.com/rust-lang/rust/issues/18241\nFunctions for altering and converting the color of pixelbufs",null,null],[3,"BiLevel","image::imageops::colorops","A bi-level color map",null,null],[5,"grayscale","","Convert the supplied image to grayscale",null,{"inputs":[{"name":"i"}],"output":{"name":"imagebuffer"}}],[5,"invert","","Invert each pixel within the supplied image\nThis function operates in place.",null,{"inputs":[{"name":"i"}],"output":null}],[5,"contrast","","Adjust the contrast of the supplied image\n```contrast``` is the amount to adjust the contrast by.\nNegative values decrease the contrast and positive values increase the contrast.",null,{"inputs":[{"name":"i"},{"name":"f32"}],"output":{"name":"imagebuffer"}}],[5,"brighten","","Brighten the supplied image\n```value``` is the amount to brighten each pixel by.\nNegative values decrease the brightness and positive values increase it.",null,{"inputs":[{"name":"i"},{"name":"i32"}],"output":{"name":"imagebuffer"}}],[5,"dither","","Reduces the colors of the image using the supplied `color_map` while applying\nFloyd-Steinberg dithering to improve the visual conception",null,{"inputs":[{"name":"imagebuffer"},{"name":"map"}],"output":null}],[5,"index_colors","","Reduces the colors using the supplied `color_map` and returns an image of the indices",null,{"inputs":[{"name":"imagebuffer"},{"name":"map"}],"output":{"name":"imagebuffer"}}],[8,"ColorMap","","A color map",null,null],[16,"Color","","The color type on which the map operates on",10,null],[10,"index_of","","Returns the index of the closed match of `color`\nin the color map.",10,{"inputs":[{"name":"colormap"},{"name":"color"}],"output":{"name":"usize"}}],[10,"map_color","","Maps `color` to the closes color in the color map.",10,{"inputs":[{"name":"colormap"},{"name":"color"}],"output":null}],[11,"clone","","",11,{"inputs":[{"name":"bilevel"}],"output":{"name":"bilevel"}}],[6,"Color","","",null,null],[11,"index_of","","",11,{"inputs":[{"name":"bilevel"},{"name":"luma"}],"output":{"name":"usize"}}],[11,"map_color","","",11,{"inputs":[{"name":"bilevel"},{"name":"luma"}],"output":null}],[6,"Color","","",null,null],[11,"index_of","image::math::nq","",9,{"inputs":[{"name":"neuquant"},{"name":"rgba"}],"output":{"name":"usize"}}],[11,"map_color","","",9,{"inputs":[{"name":"neuquant"},{"name":"rgba"}],"output":null}],[11,"clone","image","",6,{"inputs":[{"name":"filtertype"}],"output":{"name":"filtertype"}}],[0,"png","","Decoding and Encoding of PNG Images",null,null],[3,"PNGDecoder","image::png","The representation of a PNG decoder",null,null],[3,"PNGEncoder","","The representation of a PNG encoder",null,null],[11,"new","","Create a new decoder that decodes from the stream ```r```",12,{"inputs":[{"name":"pngdecoder"},{"name":"r"}],"output":{"name":"pngdecoder"}}],[11,"palette","","Returns a reference to the color palette used for indexed\ncolor images.\nEach array element is a tuple of RGB values.",12,null],[11,"dimensions","","",12,{"inputs":[{"name":"pngdecoder"}],"output":{"name":"imageresult"}}],[11,"colortype","","",12,{"inputs":[{"name":"pngdecoder"}],"output":{"name":"imageresult"}}],[11,"row_len","","",12,{"inputs":[{"name":"pngdecoder"}],"output":{"name":"imageresult"}}],[11,"read_scanline","","",12,null],[11,"read_image","","",12,{"inputs":[{"name":"pngdecoder"}],"output":{"name":"imageresult"}}],[11,"new","","Create a new encoder that writes its output to ```w```",13,{"inputs":[{"name":"pngencoder"},{"name":"w"}],"output":{"name":"pngencoder"}}],[11,"encode","","Encodes the image ```image```\nthat has dimensions ```width``` and ```height```\nand ```ColorType``` ```c```",13,null],[0,"zlib","","An Implementation of RFC 1950",null,null],[3,"ZlibDecoder","image::png::zlib","A Zlib compressed stream decoder.",null,null],[3,"ZlibEncoder","","A Zlib compressed stream encoder.",null,null],[11,"new","","Create a new decoder that decodes from a Reader",14,{"inputs":[{"name":"zlibdecoder"},{"name":"r"}],"output":{"name":"zlibdecoder"}}],[11,"inner","","Return a mutable reference to the wrapped Reader",14,{"inputs":[{"name":"zlibdecoder"}],"output":{"name":"r"}}],[11,"read","","",14,null],[11,"new","","Builds a new encoder.",15,{"inputs":[{"name":"zlibencoder"},{"name":"w"}],"output":{"name":"result"}}],[11,"into_inner","","Finish writing and returns the underlying writer.",15,{"inputs":[{"name":"zlibencoder"}],"output":{"name":"result"}}],[11,"write","","",15,null],[11,"flush","","",15,{"inputs":[{"name":"zlibencoder"}],"output":{"name":"result"}}],[11,"drop","","",15,{"inputs":[{"name":"zlibencoder"}],"output":null}],[0,"deflate","image::png","A DEFLATE encoder (RFC 1951).",null,null],[3,"Deflater","image::png::deflate","A DEFLATE encoder (RFC 1951).",null,null],[11,"new","","Creates a new encoder that writes to the underlying writer.",16,{"inputs":[{"name":"deflater"},{"name":"w"}],"output":{"name":"deflater"}}],[11,"into_inner","","Stops encoding and returns the underlying writer.",16,{"inputs":[{"name":"deflater"}],"output":{"name":"result"}}],[11,"write","","",16,null],[11,"flush","","",16,{"inputs":[{"name":"deflater"}],"output":{"name":"result"}}],[11,"drop","","",16,{"inputs":[{"name":"deflater"}],"output":null}],[0,"inflate","image::png","An Implementation of RFC 1951",null,null],[3,"Inflater","image::png::inflate","A DEFLATE compressed stream decoder.",null,null],[11,"new","","Create a new decoder that decodes from a Reader",17,{"inputs":[{"name":"inflater"},{"name":"r"}],"output":{"name":"inflater"}}],[11,"eof","","Indicate whether the end of the stream has been reached.",17,{"inputs":[{"name":"inflater"}],"output":{"name":"bool"}}],[11,"inner","","Return a mutable reference to the wrapped Reader",17,{"inputs":[{"name":"inflater"}],"output":{"name":"r"}}],[11,"read","","",17,null],[0,"hash","image::png","This module provides implementations of common hashing algorithms.",null,null],[3,"Adler32","image::png::hash","An Implementation of the Adler-32 checksum",null,null],[3,"Crc32","","An Implementation of the Crc-32 checksum",null,null],[11,"clone","","",18,{"inputs":[{"name":"adler32"}],"output":{"name":"adler32"}}],[11,"new","","Create a new hasher.",18,{"inputs":[{"name":"adler32"}],"output":{"name":"adler32"}}],[11,"update","","Update the internal hasher with the bytes from ```buf```",18,null],[11,"checksum","","Return the computed hash.",18,{"inputs":[{"name":"adler32"}],"output":{"name":"u32"}}],[11,"reset","","Reset this hasher to its initial state.",18,{"inputs":[{"name":"adler32"}],"output":null}],[11,"clone","","",19,{"inputs":[{"name":"crc32"}],"output":{"name":"crc32"}}],[11,"new","","Create a new hasher.",19,{"inputs":[{"name":"crc32"}],"output":{"name":"crc32"}}],[11,"update","","Update the internal hasher with the bytes from ```buf```",19,null],[11,"checksum","","Return the computed hash.",19,{"inputs":[{"name":"crc32"}],"output":{"name":"u32"}}],[11,"reset","","Reset this hasher to its initial state.",19,{"inputs":[{"name":"crc32"}],"output":null}],[11,"fmt","image","",5,{"inputs":[{"name":"imageerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"imageerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",5,{"inputs":[{"name":"imageerror"}],"output":{"name":"str"}}],[11,"cause","","",5,{"inputs":[{"name":"imageerror"}],"output":{"name":"option"}}],[11,"from","","",5,{"inputs":[{"name":"imageerror"},{"name":"error"}],"output":{"name":"imageerror"}}],[11,"from","","",5,{"inputs":[{"name":"imageerror"},{"name":"error"}],"output":{"name":"imageerror"}}],[11,"fmt","","",7,{"inputs":[{"name":"imageformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"imageformat"},{"name":"imageformat"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"imageformat"},{"name":"imageformat"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"imageformat"}],"output":{"name":"imageformat"}}],[11,"next","","",20,{"inputs":[{"name":"pixels"}],"output":{"name":"option"}}],[11,"next","","",21,{"inputs":[{"name":"mutpixels"}],"output":{"name":"option"}}],[11,"new","","Construct a new subimage",22,{"inputs":[{"name":"subimage"},{"name":"i"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"subimage"}}],[11,"inner_mut","","Returns a mutable reference to the wrapped image.",22,{"inputs":[{"name":"subimage"}],"output":{"name":"i"}}],[11,"change_bounds","","Change the coordinates of this subimage.",22,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"to_image","","Convert this subimage to an ImageBuffer",22,{"inputs":[{"name":"subimage"}],"output":{"name":"imagebuffer"}}],[11,"dimensions","","",22,null],[11,"bounds","","",22,null],[11,"get_pixel","","",22,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"i"}}],[11,"put_pixel","","",22,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"},{"name":"i"}],"output":null}],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel directly instead.",22,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"},{"name":"i"}],"output":null}],[11,"get_pixel_mut","","",22,{"inputs":[{"name":"subimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"i"}}],[11,"clone","","",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey\npixels with transparency.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"to_rgb","","Returns a copy of this image as an RGB image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"rgbimage"}}],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"rgbaimage"}}],[11,"to_luma","","Returns a copy of this image as a Luma image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"grayimage"}}],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"grayalphaimage"}}],[11,"crop","","Return a cut out of this image delimited by the bounding rectangle.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"dynamicimage"}}],[11,"as_rgb8","","Return a reference to an 8bit RGB image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an alpha channel",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with an alpha channel",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"option"}}],[11,"raw_pixels","","Return this image's pixels as a byte vector.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"vec"}}],[11,"color","","Return this image's color type.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"colortype"}}],[11,"grayscale","","Return a grayscale version of this image.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"invert","","Invert the colors of this image.\nThis method operates inplace.",8,{"inputs":[{"name":"dynamicimage"}],"output":null}],[11,"resize","","Resize this image using the specified filter algorithm.\nReturns a new image. The image's aspect ratio is preserved.\n```nwidth``` and ```nheight``` are the new image's dimensions",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"filtertype"}],"output":{"name":"dynamicimage"}}],[11,"resize_exact","","Resize this image using the specified filter algorithm.\nReturns a new image. Does not preserve aspect ratio.\n```nwidth``` and ```nheight``` are the new image's dimensions",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"filtertype"}],"output":{"name":"dynamicimage"}}],[11,"blur","","Performs a Gaussian blur on this image.\n```sigma``` is a measure of how much to blur by.",8,{"inputs":[{"name":"dynamicimage"},{"name":"f32"}],"output":{"name":"dynamicimage"}}],[11,"unsharpen","","Performs an unsharpen mask on this image\n```sigma``` is the amount to blur the image by.\n```threshold``` is a control of how much to sharpen.\nsee https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking",8,{"inputs":[{"name":"dynamicimage"},{"name":"f32"},{"name":"i32"}],"output":{"name":"dynamicimage"}}],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",8,null],[11,"adjust_contrast","","Adjust the contrast of this image.\n```contrast``` is the amount to adjust the contrast by.\nNegative values decrease the contrast and positive values increase the contrast.",8,{"inputs":[{"name":"dynamicimage"},{"name":"f32"}],"output":{"name":"dynamicimage"}}],[11,"brighten","","Brighten the pixels of this image.\n```value``` is the amount to brighten each pixel by.\nNegative values decrease the brightness and positive values increase it.",8,{"inputs":[{"name":"dynamicimage"},{"name":"i32"}],"output":{"name":"dynamicimage"}}],[11,"flipv","","Flip this image vertically",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"fliph","","Flip this image horizontally",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"rotate90","","Rotate this image 90 degrees clockwise.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"rotate180","","Rotate this image 180 degrees clockwise.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"rotate270","","Rotate this image 270 degrees clockwise.",8,{"inputs":[{"name":"dynamicimage"}],"output":{"name":"dynamicimage"}}],[11,"save","","Encode this image and write it to ```w```",8,{"inputs":[{"name":"dynamicimage"},{"name":"w"},{"name":"imageformat"}],"output":{"name":"imageresult"}}],[11,"dimensions","","",8,null],[11,"bounds","","",8,null],[11,"get_pixel","","",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rgba"}}],[11,"put_pixel","","",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"rgba"}],"output":null}],[11,"blend_pixel","","DEPRECATED: Use iterator `pixels_mut` to blend the pixels directly.",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"},{"name":"rgba"}],"output":null}],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",8,{"inputs":[{"name":"dynamicimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"rgba"}}],[11,"clone","","",4,{"inputs":[{"name":"colortype"}],"output":{"name":"colortype"}}],[11,"fmt","","",4,{"inputs":[{"name":"colortype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"colortype"},{"name":"colortype"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"colortype"},{"name":"colortype"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"rgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"rgb"}}],[11,"eq","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"}],"output":{"name":"bool"}}],[11,"channel_count","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"u8"}}],[11,"color_model","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"str"}}],[11,"color_type","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"colortype"}}],[11,"channels","","",2,null],[11,"channels_mut","","",2,null],[11,"channels4","","",2,null],[11,"from_channels","","",2,{"inputs":[{"name":"rgb"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"rgb"}}],[11,"from_slice","","",2,null],[11,"from_slice_mut","","",2,null],[11,"to_rgb","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"rgb"}}],[11,"to_rgba","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"rgba"}}],[11,"to_luma","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"luma"}}],[11,"to_luma_alpha","","",2,{"inputs":[{"name":"rgb"}],"output":{"name":"lumaa"}}],[11,"map","","",2,{"inputs":[{"name":"rgb"},{"name":"f"}],"output":{"name":"rgb"}}],[11,"apply","","",2,{"inputs":[{"name":"rgb"},{"name":"f"}],"output":null}],[11,"map_with_alpha","","",2,{"inputs":[{"name":"rgb"},{"name":"f"},{"name":"g"}],"output":{"name":"rgb"}}],[11,"apply_with_alpha","","",2,{"inputs":[{"name":"rgb"},{"name":"f"},{"name":"g"}],"output":null}],[11,"map2","","",2,{"inputs":[{"name":"rgb"},{"name":"self"},{"name":"f"}],"output":{"name":"rgb"}}],[11,"apply2","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"},{"name":"f"}],"output":null}],[11,"invert","","",2,{"inputs":[{"name":"rgb"}],"output":null}],[11,"blend","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"}],"output":null}],[11,"index","","",2,{"inputs":[{"name":"rgb"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",2,{"inputs":[{"name":"rgb"},{"name":"usize"}],"output":{"name":"t"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"luma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"luma"}}],[11,"eq","","",0,{"inputs":[{"name":"luma"},{"name":"luma"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"luma"},{"name":"luma"}],"output":{"name":"bool"}}],[11,"channel_count","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"u8"}}],[11,"color_model","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"str"}}],[11,"color_type","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"colortype"}}],[11,"channels","","",0,null],[11,"channels_mut","","",0,null],[11,"channels4","","",0,null],[11,"from_channels","","",0,{"inputs":[{"name":"luma"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"luma"}}],[11,"from_slice","","",0,null],[11,"from_slice_mut","","",0,null],[11,"to_rgb","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"rgb"}}],[11,"to_rgba","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"rgba"}}],[11,"to_luma","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"luma"}}],[11,"to_luma_alpha","","",0,{"inputs":[{"name":"luma"}],"output":{"name":"lumaa"}}],[11,"map","","",0,{"inputs":[{"name":"luma"},{"name":"f"}],"output":{"name":"luma"}}],[11,"apply","","",0,{"inputs":[{"name":"luma"},{"name":"f"}],"output":null}],[11,"map_with_alpha","","",0,{"inputs":[{"name":"luma"},{"name":"f"},{"name":"g"}],"output":{"name":"luma"}}],[11,"apply_with_alpha","","",0,{"inputs":[{"name":"luma"},{"name":"f"},{"name":"g"}],"output":null}],[11,"map2","","",0,{"inputs":[{"name":"luma"},{"name":"self"},{"name":"f"}],"output":{"name":"luma"}}],[11,"apply2","","",0,{"inputs":[{"name":"luma"},{"name":"luma"},{"name":"f"}],"output":null}],[11,"invert","","",0,{"inputs":[{"name":"luma"}],"output":null}],[11,"blend","","",0,{"inputs":[{"name":"luma"},{"name":"luma"}],"output":null}],[11,"index","","",0,{"inputs":[{"name":"luma"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",0,{"inputs":[{"name":"luma"},{"name":"usize"}],"output":{"name":"t"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"rgba"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"rgba"}}],[11,"eq","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"channel_count","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"u8"}}],[11,"color_model","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"str"}}],[11,"color_type","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"colortype"}}],[11,"channels","","",3,null],[11,"channels_mut","","",3,null],[11,"channels4","","",3,null],[11,"from_channels","","",3,{"inputs":[{"name":"rgba"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"rgba"}}],[11,"from_slice","","",3,null],[11,"from_slice_mut","","",3,null],[11,"to_rgb","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"rgb"}}],[11,"to_rgba","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"rgba"}}],[11,"to_luma","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"luma"}}],[11,"to_luma_alpha","","",3,{"inputs":[{"name":"rgba"}],"output":{"name":"lumaa"}}],[11,"map","","",3,{"inputs":[{"name":"rgba"},{"name":"f"}],"output":{"name":"rgba"}}],[11,"apply","","",3,{"inputs":[{"name":"rgba"},{"name":"f"}],"output":null}],[11,"map_with_alpha","","",3,{"inputs":[{"name":"rgba"},{"name":"f"},{"name":"g"}],"output":{"name":"rgba"}}],[11,"apply_with_alpha","","",3,{"inputs":[{"name":"rgba"},{"name":"f"},{"name":"g"}],"output":null}],[11,"map2","","",3,{"inputs":[{"name":"rgba"},{"name":"self"},{"name":"f"}],"output":{"name":"rgba"}}],[11,"apply2","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"},{"name":"f"}],"output":null}],[11,"invert","","",3,{"inputs":[{"name":"rgba"}],"output":null}],[11,"blend","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"}],"output":null}],[11,"index","","",3,{"inputs":[{"name":"rgba"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",3,{"inputs":[{"name":"rgba"},{"name":"usize"}],"output":{"name":"t"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"lumaa"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"lumaa"}}],[11,"eq","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"}],"output":{"name":"bool"}}],[11,"channel_count","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"u8"}}],[11,"color_model","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"str"}}],[11,"color_type","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"colortype"}}],[11,"channels","","",1,null],[11,"channels_mut","","",1,null],[11,"channels4","","",1,null],[11,"from_channels","","",1,{"inputs":[{"name":"lumaa"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"lumaa"}}],[11,"from_slice","","",1,null],[11,"from_slice_mut","","",1,null],[11,"to_rgb","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"rgb"}}],[11,"to_rgba","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"rgba"}}],[11,"to_luma","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"luma"}}],[11,"to_luma_alpha","","",1,{"inputs":[{"name":"lumaa"}],"output":{"name":"lumaa"}}],[11,"map","","",1,{"inputs":[{"name":"lumaa"},{"name":"f"}],"output":{"name":"lumaa"}}],[11,"apply","","",1,{"inputs":[{"name":"lumaa"},{"name":"f"}],"output":null}],[11,"map_with_alpha","","",1,{"inputs":[{"name":"lumaa"},{"name":"f"},{"name":"g"}],"output":{"name":"lumaa"}}],[11,"apply_with_alpha","","",1,{"inputs":[{"name":"lumaa"},{"name":"f"},{"name":"g"}],"output":null}],[11,"map2","","",1,{"inputs":[{"name":"lumaa"},{"name":"self"},{"name":"f"}],"output":{"name":"lumaa"}}],[11,"apply2","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"},{"name":"f"}],"output":null}],[11,"invert","","",1,{"inputs":[{"name":"lumaa"}],"output":null}],[11,"blend","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"}],"output":null}],[11,"index","","",1,{"inputs":[{"name":"lumaa"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",1,{"inputs":[{"name":"lumaa"},{"name":"usize"}],"output":{"name":"t"}}],[11,"from_color","","",0,{"inputs":[{"name":"luma"},{"name":"rgba"}],"output":null}],[11,"from_color","","",0,{"inputs":[{"name":"luma"},{"name":"rgb"}],"output":null}],[11,"from_color","","",0,{"inputs":[{"name":"luma"},{"name":"lumaa"}],"output":null}],[11,"from_color","","",1,{"inputs":[{"name":"lumaa"},{"name":"rgba"}],"output":null}],[11,"from_color","","",1,{"inputs":[{"name":"lumaa"},{"name":"rgb"}],"output":null}],[11,"from_color","","",1,{"inputs":[{"name":"lumaa"},{"name":"luma"}],"output":null}],[11,"from_color","","",3,{"inputs":[{"name":"rgba"},{"name":"rgb"}],"output":null}],[11,"from_color","","",3,{"inputs":[{"name":"rgba"},{"name":"lumaa"}],"output":null}],[11,"from_color","","",3,{"inputs":[{"name":"rgba"},{"name":"luma"}],"output":null}],[11,"from_color","","",2,{"inputs":[{"name":"rgb"},{"name":"rgba"}],"output":null}],[11,"from_color","","",2,{"inputs":[{"name":"rgb"},{"name":"lumaa"}],"output":null}],[11,"from_color","","",2,{"inputs":[{"name":"rgb"},{"name":"luma"}],"output":null}],[11,"blend","","",1,{"inputs":[{"name":"lumaa"},{"name":"lumaa"}],"output":null}],[11,"blend","","",0,{"inputs":[{"name":"luma"},{"name":"luma"}],"output":null}],[11,"blend","","",3,{"inputs":[{"name":"rgba"},{"name":"rgba"}],"output":null}],[11,"blend","","",2,{"inputs":[{"name":"rgb"},{"name":"rgb"}],"output":null}],[11,"invert","","",1,{"inputs":[{"name":"lumaa"}],"output":null}],[11,"invert","","",0,{"inputs":[{"name":"luma"}],"output":null}],[11,"invert","","",3,{"inputs":[{"name":"rgba"}],"output":null}],[11,"invert","","",2,{"inputs":[{"name":"rgb"}],"output":null}],[11,"from_raw","","Contructs a buffer from a generic container\n(for example a `Vec` or a slice)\nReturns None if the container is not big enough",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"container"}],"output":{"name":"option"}}],[11,"into_raw","","Returns the underlying raw buffer",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"container"}}],[11,"dimensions","","The width and height of this image.",23,null],[11,"width","","The width of this image.",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"u32"}}],[11,"height","","The height of this image.",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"u32"}}],[11,"pixels","","Returns an iterator over the pixels of this image.",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"pixels"}}],[11,"enumerate_pixels","","Enumerates over the pixels of the image.\nThe iterator yields the coordinates of each pixel\nalong with a reference to them.",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"enumeratepixels"}}],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"p"}}],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"pixelsmut"}}],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image.",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"enumeratepixelsmut"}}],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"p"}}],[11,"put_pixel","","Puts a pixel at location `(x, y)`",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"p"}],"output":null}],[11,"save","","Saves the buffer to a file at the path specified.",23,{"inputs":[{"name":"imagebuffer"},{"name":"q"}],"output":{"name":"result"}}],[11,"deref","","",23,null],[11,"deref_mut","","",23,null],[11,"index","","",23,null],[11,"index_mut","","",23,null],[11,"clone","","",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"imagebuffer"}}],[11,"dimensions","","",23,null],[11,"bounds","","",23,null],[11,"get_pixel","","",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"p"}}],[11,"get_pixel_mut","","",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"p"}}],[11,"put_pixel","","",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"p"}],"output":null}],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels\nDEPRECATED: This method will be removed. Blend the pixel directly instead.",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"p"}],"output":null}],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"}],"output":{"name":"imagebuffer"}}],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"p"}],"output":{"name":"imagebuffer"}}],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of the supplied function.\nThe arguments to the function are the pixel's x and y coordinates.",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"f"}],"output":{"name":"imagebuffer"}}],[11,"from_vec","","Creates an image buffer out of an existing buffer.\nReturns None if the buffer is not big enough.",23,{"inputs":[{"name":"imagebuffer"},{"name":"u32"},{"name":"u32"},{"name":"vec"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the image buffer and returns the underlying data\nas an owned buffer",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"vec"}}],[11,"convert","","",23,{"inputs":[{"name":"imagebuffer"}],"output":{"name":"imagebuffer"}}],[11,"new","","Contructs a new frame iterator",24,{"inputs":[{"name":"frames"},{"name":"vec"}],"output":{"name":"frames"}}],[11,"clone","","",25,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"new","","Contructs a new frame",25,{"inputs":[{"name":"frame"},{"name":"rgbaimage"}],"output":{"name":"frame"}}],[11,"from_parts","","Contructs a new frame",25,{"inputs":[{"name":"frame"},{"name":"rgbaimage"},{"name":"u32"},{"name":"u32"},{"name":"ratio"}],"output":{"name":"frame"}}],[11,"delay","","Delay of this frame",25,{"inputs":[{"name":"frame"}],"output":{"name":"ratio"}}],[11,"buffer","","Returns the image buffer",25,{"inputs":[{"name":"frame"}],"output":{"name":"rgbaimage"}}],[11,"into_buffer","","Returns the image buffer",25,{"inputs":[{"name":"frame"}],"output":{"name":"rgbaimage"}}],[11,"left","","Returns the x offset",25,{"inputs":[{"name":"frame"}],"output":{"name":"u32"}}],[11,"top","","Returns the x offset",25,{"inputs":[{"name":"frame"}],"output":{"name":"u32"}}],[11,"next","","",24,{"inputs":[{"name":"frames"}],"output":{"name":"option"}}],[6,"ImageResult","","Result of an image decoding/encoding process",null,null],[6,"RgbImage","","Sendable Rgb image buffer",null,null],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",null,null],[6,"GrayImage","","Sendable grayscale image buffer",null,null],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",null,null],[8,"ImageDecoder","","The trait that all decoders implement",null,null],[10,"dimensions","","Returns a tuple containing the width and height of the image",26,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[10,"colortype","","Returns the color type of the image e.g RGB(8) (8bit RGB)",26,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[10,"row_len","","Returns the length in bytes of one decoded row of the image",26,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[11,"is_animated","","Returns true if the image is animated",26,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[11,"into_frames","","Returns the frames of the image\nIf the image is not animated it returns a single frame",26,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[10,"read_scanline","","Reads one row from the image into buf and returns the row index",26,null],[10,"read_image","","Decodes the entire image and return it as a Vector",26,{"inputs":[{"name":"imagedecoder"}],"output":{"name":"imageresult"}}],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle\nstarting from ```x``` and ```y``` and having ```length``` and ```width```",26,{"inputs":[{"name":"imagedecoder"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"imageresult"}}],[8,"GenericImage","","A trait for manipulating images.",null,null],[16,"Pixel","","The type of pixel.",27,null],[10,"dimensions","","The width and height of this image.",27,null],[11,"width","","The width of this image.",27,{"inputs":[{"name":"genericimage"}],"output":{"name":"u32"}}],[11,"height","","The height of this image.",27,{"inputs":[{"name":"genericimage"}],"output":{"name":"u32"}}],[10,"bounds","","The bounding rectangle of this image.",27,null],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",27,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"get_pixel","","Returns the pixel located at (x, y)",27,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[10,"get_pixel_mut","","Puts a pixel at location (x, y)",27,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",27,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"}],"output":{"name":"pixel"}}],[10,"put_pixel","","Put a pixel at location (x, y)",27,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",27,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels\nDEPRECATED: This method will be removed. Blend the pixel directly instead.",27,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"pixel"}],"output":null}],[11,"pixels","","Returns an Iterator over the pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with their value",27,{"inputs":[{"name":"genericimage"}],"output":{"name":"pixels"}}],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.\nDEPRECATED: \"This cannot be implemented safely Rust. Please use the image buffer directly.",27,{"inputs":[{"name":"genericimage"}],"output":{"name":"mutpixels"}}],[11,"copy_from","","Copies all of the pixels from another image into this image.",27,{"inputs":[{"name":"genericimage"},{"name":"o"},{"name":"u32"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"sub_image","","Returns a subimage that is a view into this image.",27,{"inputs":[{"name":"genericimage"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"subimage"}}],[8,"Pixel","","A generalized pixel.",null,null],[16,"Subpixel","","The underlying subpixel type.",28,null],[10,"channel_count","","Returns the number of channels of this pixel type.",28,{"inputs":[{"name":"pixel"}],"output":{"name":"u8"}}],[10,"channels","","Returns the components as a slice.",28,null],[10,"channels_mut","","Returns the components as a mutable slice",28,null],[10,"color_model","","Returns a string that can help to interprete the meaning each channel\nSee [gimp babl](http://gegl.org/babl/).",28,{"inputs":[{"name":"pixel"}],"output":{"name":"str"}}],[10,"color_type","","Returns the ColorType for this pixel format",28,{"inputs":[{"name":"pixel"}],"output":{"name":"colortype"}}],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the pixel\nhas less than 4 channels the remainder is filled with the maximum value\nTODO deprecate",28,null],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d.\nIf the pixel does not contain 4 channels the extra are ignored.\nTODO deprecate",28,{"inputs":[{"name":"pixel"},{"name":"subpixel"},{"name":"subpixel"},{"name":"subpixel"},{"name":"subpixel"}],"output":{"name":"self"}}],[10,"from_slice","","Returns a view into a slice.",28,null],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",28,null],[10,"to_rgb","","Convert this pixel to RGB",28,{"inputs":[{"name":"pixel"}],"output":{"name":"rgb"}}],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",28,{"inputs":[{"name":"pixel"}],"output":{"name":"rgba"}}],[10,"to_luma","","Convert this pixel to luma",28,{"inputs":[{"name":"pixel"}],"output":{"name":"luma"}}],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",28,{"inputs":[{"name":"pixel"}],"output":{"name":"lumaa"}}],[10,"map","","Apply the function ```f``` to each channel of this pixel.",28,{"inputs":[{"name":"pixel"},{"name":"f"}],"output":{"name":"self"}}],[10,"apply","","Apply the function ```f``` to each channel of this pixel.",28,{"inputs":[{"name":"pixel"},{"name":"f"}],"output":null}],[10,"map_with_alpha","","Apply the function f to each channel except the alpha channel.\nApply the function g to the alpha channel.",28,{"inputs":[{"name":"pixel"},{"name":"f"},{"name":"g"}],"output":{"name":"self"}}],[10,"apply_with_alpha","","Apply the function f to each channel except the alpha channel.\nApply the function g to the alpha channel. Works in-place.",28,{"inputs":[{"name":"pixel"},{"name":"f"},{"name":"g"}],"output":null}],[10,"map2","","Apply the function ```f``` to each channel of this pixel and\n```other``` pairwise.",28,{"inputs":[{"name":"pixel"},{"name":"self"},{"name":"f"}],"output":{"name":"self"}}],[10,"apply2","","Apply the function ```f``` to each channel of this pixel and\n```other``` pairwise. Works in-place.",28,{"inputs":[{"name":"pixel"},{"name":"self"},{"name":"f"}],"output":null}],[10,"invert","","Invert this pixel",28,{"inputs":[{"name":"pixel"}],"output":null}],[10,"blend","","Blend the color of a given pixel into ourself, taking into account alpha channels",28,{"inputs":[{"name":"pixel"},{"name":"self"}],"output":null}],[8,"Primitive","","Primitive trait from old stdlib, added max_value",null,null],[11,"is_animated","","Returns true if the image is animated",26,null],[11,"into_frames","","Returns the frames of the image\nIf the image is not animated it returns a single frame",26,null],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle\nstarting from ```x``` and ```y``` and having ```length``` and ```width```",26,null],[11,"width","","The width of this image.",27,null],[11,"height","","The height of this image.",27,null],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",27,null],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",27,null],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",27,null],[11,"pixels","","Returns an Iterator over the pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with their value",27,null],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image.\nThe iterator yields the coordinates of each pixel\nalong with a mutable reference to them.\nDEPRECATED: \"This cannot be implemented safely Rust. Please use the image buffer directly.",27,null],[11,"copy_from","","Copies all of the pixels from another image into this image.",27,null],[11,"sub_image","","Returns a subimage that is a view into this image.",27,null],[11,"expand_palette","","Expands a color palette by re-using the existing buffer.\nAssumes 8 bit per pixel. Uses an optionally transparent index to\nadjust it's alpha value accordingly.",29,null]],"paths":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[4,"ColorType"],[4,"ImageError"],[4,"FilterType"],[4,"ImageFormat"],[4,"DynamicImage"],[3,"NeuQuant"],[8,"ColorMap"],[3,"BiLevel"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ZlibDecoder"],[3,"ZlibEncoder"],[3,"Deflater"],[3,"Inflater"],[3,"Adler32"],[3,"Crc32"],[3,"Pixels"],[3,"MutPixels"],[3,"SubImage"],[3,"ImageBuffer"],[3,"Frames"],[3,"Frame"],[8,"ImageDecoder"],[8,"GenericImage"],[8,"Pixel"],[6,"GrayImage"]]};
searchIndex['window'] = {"items":[[0,"","window","Window abstraction",null,null],[3,"Size","","Size in pixels.",null,null],[12,"width","","The width in pixels.",0,null],[12,"height","","The height in pixels.",0,null],[3,"WindowSettings","","Settings for window behavior.",null,null],[3,"NoWindow","","An implementation of Window that runs without a window at all.",null,null],[6,"ProcAddress","","The type of an OpenGL function address.",null,null],[8,"Window","","Required to use the event loop.",null,null],[16,"Event","","The event type emitted by `poll_event`",1,null],[10,"should_close","","Returns true if window should close.",1,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[10,"size","","Gets the size of the window in user coordinates.",1,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[10,"swap_buffers","","Swaps render buffers.",1,{"inputs":[{"name":"window"}],"output":null}],[10,"poll_event","","Polls event from window.",1,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[10,"draw_size","","Gets draw size of the window.\nThis is equal to the size of the frame buffer of the inner window,\nexcluding the title bar and borders.",1,{"inputs":[{"name":"window"}],"output":{"name":"size"}}],[8,"AdvancedWindow","","Implemented by fully supported window back-ends.",null,null],[10,"get_title","","Gets a copy of the title of the window.",2,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"string"}}],[10,"set_title","","Sets the title of the window.",2,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":null}],[11,"title","","Sets title on window.",2,{"inputs":[{"name":"advancedwindow"},{"name":"string"}],"output":{"name":"self"}}],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",2,{"inputs":[{"name":"advancedwindow"}],"output":{"name":"bool"}}],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",2,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":null}],[11,"exit_on_esc","","Sets whether to exit when pressing esc.",2,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[10,"set_capture_cursor","","Sets whether to capture/grab cursor.\nThis is used to lock and hide cursor to the window,\nfor example in a first-person shooter game.",2,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":null}],[11,"capture_cursor","","Sets whether to capture/grab cursor (see `set_capture_cursor`).",2,{"inputs":[{"name":"advancedwindow"},{"name":"bool"}],"output":{"name":"self"}}],[8,"OpenGLWindow","","Trait for OpenGL specific operations.",null,null],[10,"get_proc_address","","Returns the address of an OpenGL function if it exist, else returns null pointer.",3,{"inputs":[{"name":"openglwindow"},{"name":"str"}],"output":{"name":"procaddress"}}],[10,"is_current","","Returns true if this context is the current context.",3,{"inputs":[{"name":"openglwindow"}],"output":{"name":"bool"}}],[10,"make_current","","Make this context current.",3,{"inputs":[{"name":"openglwindow"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"from","","",0,null],[11,"from","","",0,null],[11,"new","","Creates window settings with defaults.\n- samples: 0\n- fullscreen: false\n- exit_on_esc: false",4,{"inputs":[{"name":"windowsettings"},{"name":"t"},{"name":"s"}],"output":{"name":"windowsettings"}}],[11,"get_title","","Gets title.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"string"}}],[11,"title","","Sets title.",4,{"inputs":[{"name":"windowsettings"},{"name":"string"}],"output":{"name":"self"}}],[11,"get_size","","Gets size.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"size"}}],[11,"size","","Sets size.",4,{"inputs":[{"name":"windowsettings"},{"name":"size"}],"output":{"name":"self"}}],[11,"get_fullscreen","","Gets fullscreen.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"fullscreen","","Sets fullscreen.",4,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_exit_on_esc","","Gets exit on esc.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"exit_on_esc","","Sets exit on esc.",4,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"get_samples","","Gets samples.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"u8"}}],[11,"samples","","Sets samples.",4,{"inputs":[{"name":"windowsettings"},{"name":"u8"}],"output":{"name":"self"}}],[11,"get_vsync","","Gets vsync.",4,{"inputs":[{"name":"windowsettings"}],"output":{"name":"bool"}}],[11,"vsync","","Sets vsync.",4,{"inputs":[{"name":"windowsettings"},{"name":"bool"}],"output":{"name":"self"}}],[11,"new","","Returns a new `NoWindow`.",5,{"inputs":[{"name":"nowindow"},{"name":"windowsettings"}],"output":{"name":"nowindow"}}],[6,"Event","","",null,null],[11,"should_close","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"size","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"swap_buffers","","",5,{"inputs":[{"name":"nowindow"}],"output":null}],[11,"poll_event","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"option"}}],[11,"draw_size","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"size"}}],[11,"get_title","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"string"}}],[11,"set_title","","",5,{"inputs":[{"name":"nowindow"},{"name":"string"}],"output":null}],[11,"get_exit_on_esc","","",5,{"inputs":[{"name":"nowindow"}],"output":{"name":"bool"}}],[11,"set_exit_on_esc","","",5,{"inputs":[{"name":"nowindow"},{"name":"bool"}],"output":null}],[11,"set_capture_cursor","","",5,{"inputs":[{"name":"nowindow"},{"name":"bool"}],"output":null}]],"paths":[[3,"Size"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"],[3,"NoWindow"]]};
searchIndex['input'] = {"items":[[0,"","input","A flexible structure for user interactions\nto be used in window frameworks and widgets libraries.",null,null],[4,"Button","","Models different kinds of buttons.",null,null],[13,"Keyboard","","A keyboard button.",0,null],[13,"Mouse","","A mouse button.",0,null],[4,"Motion","","Models different kinds of motion.",null,null],[13,"MouseCursor","","x and y in window coordinates.",1,null],[13,"MouseRelative","","x and y in relative coordinates.",1,null],[13,"MouseScroll","","x and y in scroll ticks.",1,null],[4,"Input","","Models input events.",null,null],[13,"Press","","Pressed a button.",2,null],[13,"Release","","Released a button.",2,null],[13,"Move","","Moved mouse cursor.",2,null],[13,"Text","","Text (usually from keyboard).",2,null],[13,"Resize","","Window got resized.",2,null],[13,"Focus","","Window gained or lost focus.",2,null],[0,"keyboard","","Back-end agnostic keyboard keys.",null,null],[3,"ModifierKey","input::keyboard","",null,null],[4,"Key","","Represent a keyboard key.",null,null],[13,"Unknown","","",3,null],[13,"Backspace","","",3,null],[13,"Tab","","",3,null],[13,"Return","","",3,null],[13,"Escape","","",3,null],[13,"Space","","",3,null],[13,"Exclaim","","",3,null],[13,"Quotedbl","","",3,null],[13,"Hash","","",3,null],[13,"Dollar","","",3,null],[13,"Percent","","",3,null],[13,"Ampersand","","",3,null],[13,"Quote","","",3,null],[13,"LeftParen","","",3,null],[13,"RightParen","","",3,null],[13,"Asterisk","","",3,null],[13,"Plus","","",3,null],[13,"Comma","","",3,null],[13,"Minus","","",3,null],[13,"Period","","",3,null],[13,"Slash","","",3,null],[13,"D0","","",3,null],[13,"D1","","",3,null],[13,"D2","","",3,null],[13,"D3","","",3,null],[13,"D4","","",3,null],[13,"D5","","",3,null],[13,"D6","","",3,null],[13,"D7","","",3,null],[13,"D8","","",3,null],[13,"D9","","",3,null],[13,"Colon","","",3,null],[13,"Semicolon","","",3,null],[13,"Less","","",3,null],[13,"Equals","","",3,null],[13,"Greater","","",3,null],[13,"Question","","",3,null],[13,"At","","",3,null],[13,"LeftBracket","","",3,null],[13,"Backslash","","",3,null],[13,"RightBracket","","",3,null],[13,"Caret","","",3,null],[13,"Underscore","","",3,null],[13,"Backquote","","",3,null],[13,"A","","",3,null],[13,"B","","",3,null],[13,"C","","",3,null],[13,"D","","",3,null],[13,"E","","",3,null],[13,"F","","",3,null],[13,"G","","",3,null],[13,"H","","",3,null],[13,"I","","",3,null],[13,"J","","",3,null],[13,"K","","",3,null],[13,"L","","",3,null],[13,"M","","",3,null],[13,"N","","",3,null],[13,"O","","",3,null],[13,"P","","",3,null],[13,"Q","","",3,null],[13,"R","","",3,null],[13,"S","","",3,null],[13,"T","","",3,null],[13,"U","","",3,null],[13,"V","","",3,null],[13,"W","","",3,null],[13,"X","","",3,null],[13,"Y","","",3,null],[13,"Z","","",3,null],[13,"Delete","","",3,null],[13,"CapsLock","","",3,null],[13,"F1","","",3,null],[13,"F2","","",3,null],[13,"F3","","",3,null],[13,"F4","","",3,null],[13,"F5","","",3,null],[13,"F6","","",3,null],[13,"F7","","",3,null],[13,"F8","","",3,null],[13,"F9","","",3,null],[13,"F10","","",3,null],[13,"F11","","",3,null],[13,"F12","","",3,null],[13,"PrintScreen","","",3,null],[13,"ScrollLock","","",3,null],[13,"Pause","","",3,null],[13,"Insert","","",3,null],[13,"Home","","",3,null],[13,"PageUp","","",3,null],[13,"End","","",3,null],[13,"PageDown","","",3,null],[13,"Right","","",3,null],[13,"Left","","",3,null],[13,"Down","","",3,null],[13,"Up","","",3,null],[13,"NumLockClear","","",3,null],[13,"NumPadDivide","","",3,null],[13,"NumPadMultiply","","",3,null],[13,"NumPadMinus","","",3,null],[13,"NumPadPlus","","",3,null],[13,"NumPadEnter","","",3,null],[13,"NumPad1","","",3,null],[13,"NumPad2","","",3,null],[13,"NumPad3","","",3,null],[13,"NumPad4","","",3,null],[13,"NumPad5","","",3,null],[13,"NumPad6","","",3,null],[13,"NumPad7","","",3,null],[13,"NumPad8","","",3,null],[13,"NumPad9","","",3,null],[13,"NumPad0","","",3,null],[13,"NumPadPeriod","","",3,null],[13,"Application","","",3,null],[13,"Power","","",3,null],[13,"NumPadEquals","","",3,null],[13,"F13","","",3,null],[13,"F14","","",3,null],[13,"F15","","",3,null],[13,"F16","","",3,null],[13,"F17","","",3,null],[13,"F18","","",3,null],[13,"F19","","",3,null],[13,"F20","","",3,null],[13,"F21","","",3,null],[13,"F22","","",3,null],[13,"F23","","",3,null],[13,"F24","","",3,null],[13,"Execute","","",3,null],[13,"Help","","",3,null],[13,"Menu","","",3,null],[13,"Select","","",3,null],[13,"Stop","","",3,null],[13,"Again","","",3,null],[13,"Undo","","",3,null],[13,"Cut","","",3,null],[13,"Copy","","",3,null],[13,"Paste","","",3,null],[13,"Find","","",3,null],[13,"Mute","","",3,null],[13,"VolumeUp","","",3,null],[13,"VolumeDown","","",3,null],[13,"NumPadComma","","",3,null],[13,"NumPadEqualsAS400","","",3,null],[13,"AltErase","","",3,null],[13,"Sysreq","","",3,null],[13,"Cancel","","",3,null],[13,"Clear","","",3,null],[13,"Prior","","",3,null],[13,"Return2","","",3,null],[13,"Separator","","",3,null],[13,"Out","","",3,null],[13,"Oper","","",3,null],[13,"ClearAgain","","",3,null],[13,"CrSel","","",3,null],[13,"ExSel","","",3,null],[13,"NumPad00","","",3,null],[13,"NumPad000","","",3,null],[13,"ThousandsSeparator","","",3,null],[13,"DecimalSeparator","","",3,null],[13,"CurrencyUnit","","",3,null],[13,"CurrencySubUnit","","",3,null],[13,"NumPadLeftParen","","",3,null],[13,"NumPadRightParen","","",3,null],[13,"NumPadLeftBrace","","",3,null],[13,"NumPadRightBrace","","",3,null],[13,"NumPadTab","","",3,null],[13,"NumPadBackspace","","",3,null],[13,"NumPadA","","",3,null],[13,"NumPadB","","",3,null],[13,"NumPadC","","",3,null],[13,"NumPadD","","",3,null],[13,"NumPadE","","",3,null],[13,"NumPadF","","",3,null],[13,"NumPadXor","","",3,null],[13,"NumPadPower","","",3,null],[13,"NumPadPercent","","",3,null],[13,"NumPadLess","","",3,null],[13,"NumPadGreater","","",3,null],[13,"NumPadAmpersand","","",3,null],[13,"NumPadDblAmpersand","","",3,null],[13,"NumPadVerticalBar","","",3,null],[13,"NumPadDblVerticalBar","","",3,null],[13,"NumPadColon","","",3,null],[13,"NumPadHash","","",3,null],[13,"NumPadSpace","","",3,null],[13,"NumPadAt","","",3,null],[13,"NumPadExclam","","",3,null],[13,"NumPadMemStore","","",3,null],[13,"NumPadMemRecall","","",3,null],[13,"NumPadMemClear","","",3,null],[13,"NumPadMemAdd","","",3,null],[13,"NumPadMemSubtract","","",3,null],[13,"NumPadMemMultiply","","",3,null],[13,"NumPadMemDivide","","",3,null],[13,"NumPadPlusMinus","","",3,null],[13,"NumPadClear","","",3,null],[13,"NumPadClearEntry","","",3,null],[13,"NumPadBinary","","",3,null],[13,"NumPadOctal","","",3,null],[13,"NumPadDecimal","","",3,null],[13,"NumPadHexadecimal","","",3,null],[13,"LCtrl","","",3,null],[13,"LShift","","",3,null],[13,"LAlt","","",3,null],[13,"LGui","","",3,null],[13,"RCtrl","","",3,null],[13,"RShift","","",3,null],[13,"RAlt","","",3,null],[13,"RGui","","",3,null],[13,"Mode","","",3,null],[13,"AudioNext","","",3,null],[13,"AudioPrev","","",3,null],[13,"AudioStop","","",3,null],[13,"AudioPlay","","",3,null],[13,"AudioMute","","",3,null],[13,"MediaSelect","","",3,null],[13,"Www","","",3,null],[13,"Mail","","",3,null],[13,"Calculator","","",3,null],[13,"Computer","","",3,null],[13,"AcSearch","","",3,null],[13,"AcHome","","",3,null],[13,"AcBack","","",3,null],[13,"AcForward","","",3,null],[13,"AcStop","","",3,null],[13,"AcRefresh","","",3,null],[13,"AcBookmarks","","",3,null],[13,"BrightnessDown","","",3,null],[13,"BrightnessUp","","",3,null],[13,"DisplaySwitch","","",3,null],[13,"KbdIllumToggle","","",3,null],[13,"KbdIllumDown","","",3,null],[13,"KbdIllumUp","","",3,null],[13,"Eject","","",3,null],[13,"Sleep","","",3,null],[17,"NO_MODIFIER","","",null,null],[17,"CTRL","","",null,null],[17,"SHIFT","","",null,null],[17,"ALT","","",null,null],[17,"GUI","","",null,null],[17,"CTRL_SHIFT","","",null,null],[17,"CTRL_ALT","","",null,null],[17,"CTRL_GUI","","",null,null],[17,"CTRL_SHIFT_ALT","","",null,null],[17,"CTRL_SHIFT_GUI","","",null,null],[17,"CTRL_SHIFT_ALT_GUI","","",null,null],[17,"SHIFT_ALT","","",null,null],[17,"SHIFT_GUI","","",null,null],[17,"SHIFT_ALT_GUI","","",null,null],[17,"ALT_GUI","","",null,null],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"eq","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"modifierkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",4,{"inputs":[{"name":"modifierkey"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"modifierkey"},{"name":"__d"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"all","","Returns the set containing all flags.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"bits","","Returns the raw value of the flags currently stored.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",4,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",4,{"inputs":[{"name":"modifierkey"},{"name":"u8"}],"output":{"name":"modifierkey"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",4,{"inputs":[{"name":"modifierkey"},{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"handle_input","","Change modifier key state depending on input.",4,{"inputs":[{"name":"modifierkey"},{"name":"input"}],"output":null}],[11,"default","","",4,{"inputs":[{"name":"modifierkey"}],"output":{"name":"modifierkey"}}],[11,"hash","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"key"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"encode","","",3,{"inputs":[{"name":"key"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"key"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"key"}],"output":{"name":"key"}}],[11,"eq","","",3,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"key"},{"name":"key"}],"output":{"name":"ordering"}}],[11,"code","","Returns an id of the key",3,{"inputs":[{"name":"key"}],"output":{"name":"i32"}}],[11,"to_i64","","",3,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"to_u64","","",3,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"to_isize","","",3,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"from_u64","","",3,{"inputs":[{"name":"key"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",3,{"inputs":[{"name":"key"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_isize","","",3,{"inputs":[{"name":"key"},{"name":"isize"}],"output":{"name":"option"}}],[0,"mouse","input","Back-end agnostic mouse buttons.",null,null],[4,"MouseButton","input::mouse","Represent a mouse button.",null,null],[13,"Unknown","","Unknown mouse button.",5,null],[13,"Left","","Left mouse button.",5,null],[13,"Right","","Right mouse button.",5,null],[13,"Middle","","Middle mouse button.",5,null],[13,"X1","","Extra mouse button number 1.",5,null],[13,"X2","","Extra mouse button number 2.",5,null],[13,"Button6","","Mouse button number 6.",5,null],[13,"Button7","","Mouse button number 7.",5,null],[13,"Button8","","Mouse button number 8.",5,null],[11,"fmt","","",5,{"inputs":[{"name":"mousebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"partial_cmp","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"ordering"}}],[11,"eq","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"mousebutton"},{"name":"mousebutton"}],"output":{"name":"bool"}}],[11,"encode","","",5,{"inputs":[{"name":"mousebutton"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"mousebutton"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"mousebutton"}}],[11,"from_u64","","",5,{"inputs":[{"name":"mousebutton"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"mousebutton"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_isize","","",5,{"inputs":[{"name":"mousebutton"},{"name":"isize"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"to_i64","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"to_isize","","",5,{"inputs":[{"name":"mousebutton"}],"output":{"name":"option"}}],[11,"fmt","input","",0,{"inputs":[{"name":"button"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"button"},{"name":"button"}],"output":{"name":"bool"}}],[11,"encode","","",0,{"inputs":[{"name":"button"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"button"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"fmt","","",1,{"inputs":[{"name":"motion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"motion"},{"name":"motion"}],"output":{"name":"bool"}}],[11,"encode","","",1,{"inputs":[{"name":"motion"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"motion"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"motion"}],"output":{"name":"motion"}}],[11,"fmt","","",2,{"inputs":[{"name":"input"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"input"},{"name":"input"}],"output":{"name":"bool"}}],[11,"encode","","",2,{"inputs":[{"name":"input"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"input"},{"name":"__d"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"input"}],"output":{"name":"input"}}]],"paths":[[4,"Button"],[4,"Motion"],[4,"Input"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"]]};
searchIndex['elmesque'] = {"items":[[0,"","elmesque","",null,null],[0,"color","","",null,null],[3,"Hsla","elmesque::color","The parts of HSL along with an alpha for transparency.",null,null],[3,"Rgba","","The parts of RGB along with an alpha for transparency.",null,null],[4,"Color","","Color supporting RGB and HSL variants.",null,null],[13,"Rgba","","Red, Green, Blue, Alpha - All values' scales represented between 0.0 and 1.0.",0,null],[13,"Hsla","","Hue, Saturation, Lightness, Alpha - all valuess scales represented between 0.0 and 1.0.",0,null],[4,"Gradient","","Linear or Radial Gradient.",null,null],[13,"Linear","","Takes a start and end point and then a series of color stops that indicate how to\ninterpolate between the start and end points.",1,null],[13,"Radial","","First takes a start point and inner radius. Then takes an end point and outer radius.\nIt then takes a series of color stops that indicate how to interpolate between the\ninner and outer circles.",1,null],[5,"rgba","","Create RGB colors with an alpha component for transparency.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb","","Create RGB colors from numbers between 0.0 and 1.0.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgba_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.\nThe alpha component is specified with numbers between 0 and 1.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"f32"}],"output":{"name":"color"}}],[5,"rgb_bytes","","Create RGB colors from numbers between 0 and 255 inclusive.",null,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"color"}}],[5,"hsla","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV) with an alpha component for\ntransparency.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"hsl","","Create [HSL colors](http://en.wikipedia.org/wiki/HSL_and_HSV). This gives you access to colors\nmore like a color wheel, where all hues are arranged in a circle that you specify with radians.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[5,"grayscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"greyscale","","Produce a gray based on the input. 0.0 is white, 1.0 is black.",null,{"inputs":[{"name":"f32"}],"output":{"name":"color"}}],[5,"random","","Construct a random color.",null,{"inputs":[],"output":{"name":"color"}}],[5,"f32_to_byte","","Convert an f32 color to a byte.",null,{"inputs":[{"name":"f32"}],"output":{"name":"u8"}}],[5,"rgb_to_hsl","","Pure function for converting rgb to hsl.",null,null],[5,"hsl_to_rgb","","Pure function for converting hsl to rgb.",null,null],[5,"linear","","Create a linear gradient.",null,null],[5,"radial","","Create a radial gradient.",null,null],[5,"light_red","","Built-in colors.",null,{"inputs":[],"output":{"name":"color"}}],[5,"red","","Scarlet Red - Regular - #CC0000",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_red","","Scarlet Red - Dark - #A30000",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_orange","","Orange - Light - #FCAF3E",null,{"inputs":[],"output":{"name":"color"}}],[5,"orange","","Orange - Regular - #F57900",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_orange","","Orange - Dark - #CE5C00",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_yellow","","Butter - Light - #FCE94F",null,{"inputs":[],"output":{"name":"color"}}],[5,"yellow","","Butter - Regular - #EDD400",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_yellow","","Butter - Dark - #C4A000",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_green","","Chameleon - Light - #8AE234",null,{"inputs":[],"output":{"name":"color"}}],[5,"green","","Chameleon - Regular - #73D216",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_green","","Chameleon - Dark - #4E9A06",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_blue","","Sky Blue - Light - #729FCF",null,{"inputs":[],"output":{"name":"color"}}],[5,"blue","","Sky Blue - Regular - #3465A4",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_blue","","Sky Blue - Dark - #204A87",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_purple","","Plum - Light - #AD7FA8",null,{"inputs":[],"output":{"name":"color"}}],[5,"purple","","Plum - Regular - #75507B",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_purple","","Plum - Dark - #5C3566",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_brown","","Chocolate - Light - #E9B96E",null,{"inputs":[],"output":{"name":"color"}}],[5,"brown","","Chocolate - Regular - #C17D11",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_brown","","Chocolate - Dark - #8F5902",null,{"inputs":[],"output":{"name":"color"}}],[5,"black","","Straight Black.",null,{"inputs":[],"output":{"name":"color"}}],[5,"white","","Straight White.",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_gray","","Alluminium - Light",null,{"inputs":[],"output":{"name":"color"}}],[5,"gray","","Alluminium - Regular",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_gray","","Alluminium - Dark",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_grey","","Aluminium - Light - #EEEEEC",null,{"inputs":[],"output":{"name":"color"}}],[5,"grey","","Aluminium - Regular - #D3D7CF",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_grey","","Aluminium - Dark - #BABDB6",null,{"inputs":[],"output":{"name":"color"}}],[5,"light_charcoal","","Charcoal - Light - #888A85",null,{"inputs":[],"output":{"name":"color"}}],[5,"charcoal","","Charcoal - Regular - #555753",null,{"inputs":[],"output":{"name":"color"}}],[5,"dark_charcoal","","Charcoal - Dark - #2E3436",null,{"inputs":[],"output":{"name":"color"}}],[6,"Colour","","Regional spelling alias.",null,null],[8,"Colorable","","Types that can be colored.",null,null],[10,"color","","Set the color of the widget.",2,{"inputs":[{"name":"colorable"},{"name":"color"}],"output":{"name":"self"}}],[11,"rgba","","Set the color of the widget from rgba values.",2,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"rgb","","Set the color of the widget from rgb values.",2,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsla","","Set the color of the widget from hsla values.",2,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"hsl","","Set the color of the widget from hsl values.",2,{"inputs":[{"name":"colorable"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"self"}}],[11,"decode","","",0,{"inputs":[{"name":"color"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"color"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"color"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"eq","","",0,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"color"},{"name":"color"}],"output":{"name":"bool"}}],[11,"complement","","Produce a complementary color. The two colors will accent each other. This is the same as\nrotating the hue by 180 degrees.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"luminance","","Calculate and return the luminance of the Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"plain_contrast","","Return either black or white, depending which contrasts the Color the most. This will be\nuseful for determining a readable color for text on any given background Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"to_hsl","","Extract the components of a color in the HSL format.",0,{"inputs":[{"name":"color"}],"output":{"name":"hsla"}}],[11,"to_rgb","","Extract the components of a color in the RGB format.",0,{"inputs":[{"name":"color"}],"output":{"name":"rgba"}}],[11,"to_fsa","","Extract the components of a color in the RGB format within a fixed-size array.",0,null],[11,"to_byte_fsa","","Same as `to_fsa`, except r, g, b and a are represented in byte form.",0,null],[11,"to_hex","","Return the hex representation of this color in the format #RRGGBBAA\ne.g. `Color(1.0, 0.0, 5.0, 1.0) == \"#FF0080FF\"`",0,{"inputs":[{"name":"color"}],"output":{"name":"string"}}],[11,"with_luminance","","Return the same color but with the given luminance.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"alpha","","Return the same color but with the alpha multiplied by the given alpha.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"with_alpha","","Return the same color but with the given alpha.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":{"name":"color"}}],[11,"highlighted","","Return a highlighted version of the current Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"clicked","","Return a clicked version of the current Color.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"invert","","Return the Color's invert.",0,{"inputs":[{"name":"color"}],"output":{"name":"color"}}],[11,"red","","Return the red value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"green","","Return the green value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"blue","","Return the blue value.",0,{"inputs":[{"name":"color"}],"output":{"name":"f32"}}],[11,"set_red","","Set the red value.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":null}],[11,"set_green","","Set the green value.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":null}],[11,"set_blue","","Set the blue value.",0,{"inputs":[{"name":"color"},{"name":"f32"}],"output":null}],[11,"fmt","","",3,{"inputs":[{"name":"hsla"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"hsla"}],"output":{"name":"hsla"}}],[11,"fmt","","",4,{"inputs":[{"name":"rgba"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"rgba"}],"output":{"name":"rgba"}}],[11,"fmt","","",1,{"inputs":[{"name":"gradient"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"gradient"}],"output":{"name":"gradient"}}],[0,"element","elmesque","",null,null],[3,"Properties","elmesque::element","An Element's Properties.",null,null],[12,"id","","",5,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"opacity","","",5,null],[12,"color","","",5,null],[3,"Element","","Graphical elements that snap together to build complex widgets and layouts.",null,null],[12,"props","","",6,null],[12,"element","","",6,null],[3,"Position","","An element's Position.",null,null],[3,"Renderer","","",null,null],[4,"Prim","","The various kinds of Elements.",null,null],[13,"Image","","",7,null],[13,"Container","","",7,null],[13,"Flow","","",7,null],[13,"Collage","","",7,null],[13,"Cleared","","",7,null],[13,"Spacer","","",7,null],[4,"ImageStyle","","Styling for the Image Element.",null,null],[13,"Plain","","",8,null],[13,"Fitted","","",8,null],[13,"Cropped","","",8,null],[13,"Tiled","","",8,null],[4,"Three","","",null,null],[13,"P","","",9,null],[13,"Z","","",9,null],[13,"N","","",9,null],[4,"Pos","","",null,null],[13,"Absolute","","",10,null],[13,"Relative","","",10,null],[4,"Direction","","The direction for a flow of `Element`s.",null,null],[13,"Up","","",11,null],[13,"Down","","",11,null],[13,"Left","","",11,null],[13,"Right","","",11,null],[13,"In","","",11,null],[13,"Out","","",11,null],[5,"size_of","","Return the size of the Element.",null,null],[5,"new_element","","Construct a new Element from width, height and some Prim.\nIterates the global GUID counter by one and returns that as the Element id.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"prim"}],"output":{"name":"element"}}],[5,"spacer","","Create an empty box. this is useful for getting your spacing right and making borders.",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"element"}}],[5,"empty","","An Element that takes up no space. Good for things that appear conditionally.",null,{"inputs":[],"output":{"name":"element"}}],[5,"image","","Create an image given a width, height and texture.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"pathbuf"}],"output":{"name":"element"}}],[5,"fitted_image","","Create a fitted image given a width, height and texture. This will crop the picture to best\nfill the given dimensions.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"pathbuf"}],"output":{"name":"element"}}],[5,"cropped_image","","Create a cropped image. Take a rectangle out of the picture starting at the given top left\ncoordinate.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"pathbuf"}],"output":{"name":"element"}}],[5,"tiled_image","","Create a tiled image given a width, height and texture.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"pathbuf"}],"output":{"name":"element"}}],[5,"flow","","Have a list of elements flow in a particular direction. The `Direction` starts from the first\nelement in the list. The result is an `Element`.",null,{"inputs":[{"name":"direction"},{"name":"vec"}],"output":{"name":"element"}}],[5,"layers","","Layer elements on top of each other, starting from the bottom.",null,{"inputs":[{"name":"vec"}],"output":{"name":"element"}}],[5,"absolute","","Repetitive things.",null,{"inputs":[{"name":"i32"}],"output":{"name":"pos"}}],[5,"relative","","",null,{"inputs":[{"name":"f32"}],"output":{"name":"pos"}}],[5,"middle","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"top_left","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"top_right","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"bottom_left","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"bottom_right","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"mid_left","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"mid_right","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"mid_top","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"mid_bottom","","",null,{"inputs":[],"output":{"name":"position"}}],[5,"middle_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"top_left_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"top_right_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"bottom_left_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"bottom_right_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"mid_left_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"mid_right_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"mid_top_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"mid_bottom_at","","",null,{"inputs":[{"name":"pos"},{"name":"pos"}],"output":{"name":"position"}}],[5,"up","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"down","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"left","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"right","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"inward","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"outward","","",null,{"inputs":[],"output":{"name":"direction"}}],[5,"draw_element","","Draw an Element.",null,{"inputs":[{"name":"element"},{"name":"f32"},{"name":"matrix2d"},{"name":"g"},{"name":"option"},{"name":"drawstate"}],"output":null}],[6,"Guid","","The global graphics unique identifier counter.",null,null],[7,"GUID","","",null,null],[11,"fmt","","",5,{"inputs":[{"name":"properties"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"properties"}],"output":{"name":"properties"}}],[11,"fmt","","",6,{"inputs":[{"name":"element"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"element"}],"output":{"name":"element"}}],[11,"width","","Create an `Element` with a given width.",6,{"inputs":[{"name":"element"},{"name":"i32"}],"output":{"name":"element"}}],[11,"height","","Create an `Element` with a given height.",6,{"inputs":[{"name":"element"},{"name":"i32"}],"output":{"name":"element"}}],[11,"size","","Create an `Element` with a given size.",6,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"}],"output":{"name":"element"}}],[11,"opacity","","Create an `Element` with a given opacity.",6,{"inputs":[{"name":"element"},{"name":"f32"}],"output":{"name":"element"}}],[11,"color","","Create an `Element with a given background color.",6,{"inputs":[{"name":"element"},{"name":"color"}],"output":{"name":"element"}}],[11,"container","","Put an element in a container. This lets you position the element really easily, and there are\ntons of ways to set the `Position`.",6,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"},{"name":"position"}],"output":{"name":"element"}}],[11,"clear","","Put an element in a cleared wrapper. The color provided will be the color that clears the\nscreen before rendering the contained element.",6,{"inputs":[{"name":"element"},{"name":"color"}],"output":{"name":"element"}}],[11,"above","","Stack elements vertically. To put `a` above `b` you would say: `a.above(b)`",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"below","","Stack elements vertically. To put `a` below `b` you would say: `a.below(b)`",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"beside","","Put elements beside each other horizontally. To put `b` to the right of `a` you would say:\n`a.beside(b)`",6,{"inputs":[{"name":"element"},{"name":"element"}],"output":{"name":"element"}}],[11,"get_width","","Return the width of the Element.",6,{"inputs":[{"name":"element"}],"output":{"name":"i32"}}],[11,"get_height","","Return the height of the Element.",6,{"inputs":[{"name":"element"}],"output":{"name":"i32"}}],[11,"get_size","","Return the size of the Element's bounding rectangle.",6,null],[11,"draw","","Draw the form with some given graphics backend.",6,{"inputs":[{"name":"element"},{"name":"renderer"}],"output":null}],[11,"is_over","","Return whether or not a point is over the element.",6,{"inputs":[{"name":"element"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"prim"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"prim"}],"output":{"name":"prim"}}],[11,"fmt","","",8,{"inputs":[{"name":"imagestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"imagestyle"}],"output":{"name":"imagestyle"}}],[11,"fmt","","",9,{"inputs":[{"name":"three"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"three"}],"output":{"name":"three"}}],[11,"fmt","","",10,{"inputs":[{"name":"pos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"pos"}],"output":{"name":"pos"}}],[11,"fmt","","",12,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","","",11,{"inputs":[{"name":"direction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"new","","Construct a renderer, used for rendering elmesque `Element`s.",13,{"inputs":[{"name":"renderer"},{"name":"f64"},{"name":"f64"},{"name":"g"}],"output":{"name":"renderer"}}],[11,"character_cache","","Builder method for constructing a Renderer with a GlyphCache for drawing text.",13,{"inputs":[{"name":"renderer"},{"name":"c"}],"output":{"name":"renderer"}}],[0,"form","elmesque","",null,null],[3,"Form","elmesque::form","A general, freeform 2D graphics structure.",null,null],[12,"theta","","",14,null],[12,"scale","","",14,null],[12,"x","","",14,null],[12,"y","","",14,null],[12,"alpha","","",14,null],[12,"form","","",14,null],[3,"LineStyle","","",null,null],[12,"color","","",15,null],[12,"width","","",15,null],[12,"cap","","",15,null],[12,"join","","",15,null],[12,"dashing","","",15,null],[12,"dash_offset","","",15,null],[3,"PointPath","","A path described by a sequence of points.",null,null],[3,"Shape","","A shape described by its edges.",null,null],[4,"FillStyle","","",null,null],[13,"Solid","","",16,null],[13,"Texture","","",16,null],[13,"Grad","","",16,null],[4,"LineCap","","",null,null],[13,"Flat","","",17,null],[13,"Round","","",17,null],[13,"Padded","","",17,null],[4,"LineJoin","","",null,null],[13,"Smooth","","",18,null],[13,"Sharp","","",18,null],[13,"Clipped","","",18,null],[4,"BasicForm","","The basic variants a Form can consist of.",null,null],[13,"PointPath","","",19,null],[13,"Shape","","",19,null],[13,"OutlinedText","","",19,null],[13,"Text","","",19,null],[13,"Image","","",19,null],[13,"Element","","",19,null],[13,"Group","","",19,null],[4,"ShapeStyle","","Whether a shape is outlined or filled.",null,null],[13,"Line","","",20,null],[13,"Fill","","",20,null],[5,"solid","","Create a solid line style with a given color.",null,{"inputs":[{"name":"color"}],"output":{"name":"linestyle"}}],[5,"dashed","","Create a dashed line style with a given color. Dashing equals `[8, 4]`.",null,{"inputs":[{"name":"color"}],"output":{"name":"linestyle"}}],[5,"dotted","","Create a dotted line style with a given color. Dashing equals `[3, 3]`.",null,{"inputs":[{"name":"color"}],"output":{"name":"linestyle"}}],[5,"to_form","","Turn any `Element` into a `Form`. This lets you use text, gifs, and video in your collage. This\nmeans you can move, rotate, and scale an `Element` however you want.",null,{"inputs":[{"name":"element"}],"output":{"name":"form"}}],[5,"group","","Flatten many forms into a single `Form`. This lets you move and rotate them as a single unit,\nmaking it possible to build small, modular components.",null,{"inputs":[{"name":"vec"}],"output":{"name":"form"}}],[5,"group_transform","","Flatten many forms into a single `Form` and then apply a matrix transformation.",null,{"inputs":[{"name":"transform2d"},{"name":"vec"}],"output":{"name":"form"}}],[5,"traced","","Trace a path with a given line style.",null,{"inputs":[{"name":"linestyle"},{"name":"pointpath"}],"output":{"name":"form"}}],[5,"line","","Create a line with a given line style.",null,{"inputs":[{"name":"linestyle"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"form"}}],[5,"sprite","","Create a sprite from a sprite sheet. It cuts out a rectangle at a given position.",null,null],[5,"collage","","A collage is a collection of 2D forms. There are no strict positioning relationships between\nforms, so you are free to do all kinds of 2D graphics.",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"vec"}],"output":{"name":"element"}}],[5,"point_path","","Create a PointPath that follows a sequence of points.",null,{"inputs":[{"name":"vec"}],"output":{"name":"pointpath"}}],[5,"segment","","Create a PointPath along a given line segment.",null,null],[5,"polygon","","Create an arbitrary polygon by specifying its corners in order. `polygon` will automatically\nclose all shapes, so the given list of points does not need to start and end with the same\nposition.",null,{"inputs":[{"name":"vec"}],"output":{"name":"shape"}}],[5,"rect","","A rectangle with a given width and height.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"shape"}}],[5,"square","","A square with a given edge length.",null,{"inputs":[{"name":"f64"}],"output":{"name":"shape"}}],[5,"oval","","An oval with a given width and height.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"shape"}}],[5,"circle","","A circle with a given radius.",null,{"inputs":[{"name":"f64"}],"output":{"name":"shape"}}],[5,"ngon","","A regular polygon with N sides. The first argument specifies the number of sides and the second\nis the radius. So to create a pentagon with radius 30, you would say `ngon(5, 30.0)`",null,{"inputs":[{"name":"usize"},{"name":"f64"}],"output":{"name":"shape"}}],[5,"text","","Create some text. Details like size and color are part of the `Text` value itself, so you can\nmix colors and sizes and fonts easily.",null,{"inputs":[{"name":"text"}],"output":{"name":"form"}}],[5,"draw_form","","",null,{"inputs":[{"name":"form"},{"name":"f32"},{"name":"matrix2d"},{"name":"g"},{"name":"option"},{"name":"drawstate"}],"output":null}],[11,"fmt","","",14,{"inputs":[{"name":"form"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"form"}],"output":{"name":"form"}}],[11,"fmt","","",16,{"inputs":[{"name":"fillstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"fillstyle"}],"output":{"name":"fillstyle"}}],[11,"fmt","","",17,{"inputs":[{"name":"linecap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"linecap"}],"output":{"name":"linecap"}}],[11,"fmt","","",18,{"inputs":[{"name":"linejoin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"linejoin"}],"output":{"name":"linejoin"}}],[11,"fmt","","",15,{"inputs":[{"name":"linestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"linestyle"}],"output":{"name":"linestyle"}}],[11,"default","","The default LineStyle.",15,{"inputs":[{"name":"linestyle"}],"output":{"name":"linestyle"}}],[11,"width","","The LineStyle with some given width.",15,{"inputs":[{"name":"linestyle"},{"name":"f64"}],"output":{"name":"linestyle"}}],[11,"fmt","","",19,{"inputs":[{"name":"basicform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"basicform"}],"output":{"name":"basicform"}}],[11,"fmt","","",20,{"inputs":[{"name":"shapestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"shapestyle"}],"output":{"name":"shapestyle"}}],[11,"shift","","Move a form by the given amount. this is a relative translation so `shift(10.0, 10.0, form)\nwould move `form` ten pixels up and ten pixels to the right.",14,{"inputs":[{"name":"form"},{"name":"f64"},{"name":"f64"}],"output":{"name":"form"}}],[11,"shift_x","","Move a shape in the x direction. This is relative so `shift_x(10.0, form)` moves `form` 10\npixels to the right.",14,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"shift_y","","Move a shape in the y direction. This is relative so `shift_y(10.0, form)` moves `form\nupwards by 10 pixels.",14,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"scale","","Scale a form by a given factor. Scaling by 2 doubles both dimensions and quadruples the\narea.",14,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"rotate","","Rotate a form by a given angle. Rotate takes radians and turns things counterclockwise.\nSo to turn `form` 30 degrees to the left you would say `rotate(degrees(30), form)`.",14,{"inputs":[{"name":"form"},{"name":"f64"}],"output":{"name":"form"}}],[11,"alpha","","Set the alpha of a Form. The default is 1 and 0 is totally transparent.",14,{"inputs":[{"name":"form"},{"name":"f32"}],"output":{"name":"form"}}],[11,"fmt","","",21,{"inputs":[{"name":"pointpath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"pointpath"}],"output":{"name":"pointpath"}}],[11,"fmt","","",22,{"inputs":[{"name":"shape"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"filled","","Create a filled-in shape.",22,{"inputs":[{"name":"shape"},{"name":"color"}],"output":{"name":"form"}}],[11,"textured","","Create a textured shape.\nThe texture is described by some path and is tiled to fill the entire shape.",22,{"inputs":[{"name":"shape"},{"name":"pathbuf"}],"output":{"name":"form"}}],[11,"gradient","","Fill a shape with a gradient.",22,{"inputs":[{"name":"shape"},{"name":"gradient"}],"output":{"name":"form"}}],[11,"outlined","","Outline a shape with a given line style.",22,{"inputs":[{"name":"shape"},{"name":"linestyle"}],"output":{"name":"form"}}],[0,"text","elmesque","",null,null],[3,"Text","elmesque::text","Drawable Text.",null,null],[12,"sequence","","",23,null],[3,"TextUnit","","",null,null],[12,"string","","",24,null],[12,"style","","",24,null],[3,"Style","","Represents all the ways you can style `Text`. If the `type_face` list is empty or the `height`\nis `None`, the users will fall back on their default settings. The following `Style` is black,\n16 pixel tall, underlined, and Times New Roman (assuming that typeface is available on the\nuser's computer):",null,null],[12,"typeface","","",25,null],[12,"height","","",25,null],[12,"color","","",25,null],[12,"bold","","",25,null],[12,"italic","","",25,null],[12,"line","","",25,null],[12,"monospace","","",25,null],[4,"Line","","Styles for lines on text. This allows you to add an underline, an overline, or strike out text.",null,null],[13,"Under","","",26,null],[13,"Over","","",26,null],[13,"Through","","",26,null],[11,"fmt","","",23,{"inputs":[{"name":"text"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"fmt","","",24,{"inputs":[{"name":"textunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"textunit"}],"output":{"name":"textunit"}}],[11,"fmt","","",26,{"inputs":[{"name":"line"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"line"}],"output":{"name":"line"}}],[11,"fmt","","",25,{"inputs":[{"name":"style"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"style"}],"output":{"name":"style"}}],[11,"default","","",25,{"inputs":[{"name":"style"}],"output":{"name":"style"}}],[11,"from_string","","Convert a string into text which can be styled and displayed.",23,{"inputs":[{"name":"text"},{"name":"string"}],"output":{"name":"text"}}],[11,"empty","","Text with nothing in it.",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"append","","Put two chunks of text together.",23,{"inputs":[{"name":"text"},{"name":"text"}],"output":{"name":"text"}}],[11,"concat","","Put many chunks of text together.",23,{"inputs":[{"name":"text"},{"name":"vec"}],"output":{"name":"text"}}],[11,"join","","Put many chunks of text together with a separator.",23,{"inputs":[{"name":"text"},{"name":"text"},{"name":"vec"}],"output":{"name":"text"}}],[11,"style","","Set the style of some text. For example, if you design a `Style` called `foorter_style` that is\nspecifically for the bottom of your page, you could apply it to text like this:",23,{"inputs":[{"name":"text"},{"name":"style"}],"output":{"name":"text"}}],[11,"typeface","","Provide a path of a typeface to be used for some text.",23,{"inputs":[{"name":"text"},{"name":"pathbuf"}],"output":{"name":"text"}}],[11,"monospace","","Switch to a monospace typeface. Good for code snippets.",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"height","","Set the height of some text in pixels.",23,{"inputs":[{"name":"text"},{"name":"f64"}],"output":{"name":"text"}}],[11,"color","","Set the color of some text.",23,{"inputs":[{"name":"text"},{"name":"color"}],"output":{"name":"text"}}],[11,"bold","","Make the text bold.",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"italic","","Make the text italic.",23,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"line","","Put lines on text.",23,{"inputs":[{"name":"text"},{"name":"line"}],"output":{"name":"text"}}],[0,"transform_2d","elmesque","",null,null],[3,"Transform2D","elmesque::transform_2d","Represents a 2D transform.",null,null],[5,"identity","","Create an identity transform. Transforming by the identity does not change anything, but it can\ncome in handy as a default or base case.",null,{"inputs":[],"output":{"name":"transform2d"}}],[5,"matrix","","Creates a transformation matrix. This lets you create transforms such as scales, shears,\nreflections and translations.",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"rotation","","Create a [rotation matrix](http://en.wikipedia.org/wiki/Rotation_matrix). Given an angle t, it\ncreates a counterclockwise rotation matrix.",null,{"inputs":[{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"translation","","Creates a transformation matrix for translation.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"scale","","Creates a transformation matrix for scaling by all directions.",null,{"inputs":[{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"scale_x","","Creates a transformation for horizontal scaling.",null,{"inputs":[{"name":"f64"}],"output":{"name":"transform2d"}}],[5,"scale_y","","Creates a transformation for vertical scaling.",null,{"inputs":[{"name":"f64"}],"output":{"name":"transform2d"}}],[6,"Matrix2d","","",null,null],[11,"fmt","","",27,{"inputs":[{"name":"transform2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"transform2d"}],"output":{"name":"transform2d"}}],[11,"multiply","","Multiply two transforms together.",27,{"inputs":[{"name":"transform2d"},{"name":"transform2d"}],"output":{"name":"transform2d"}}],[0,"utils","elmesque","",null,null],[5,"clampf32","elmesque::utils","Clamp a f32 between 0f32 and 1f32.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"degrees","","Convert degrees to radians.",null,{"inputs":[{"name":"f"}],"output":{"name":"f"}}],[5,"turns","","Convert turns to radians.",null,{"inputs":[{"name":"f"}],"output":{"name":"f"}}],[5,"modulo","","The modulo function.",null,{"inputs":[{"name":"i"},{"name":"i"}],"output":{"name":"i"}}],[5,"fmod","","Modulo float.",null,{"inputs":[{"name":"f32"},{"name":"i32"}],"output":{"name":"f32"}}],[5,"min","","Return the min between to floats.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"max","","Return the max between to floats.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}]],"paths":[[4,"Color"],[4,"Gradient"],[8,"Colorable"],[3,"Hsla"],[3,"Rgba"],[3,"Properties"],[3,"Element"],[4,"Prim"],[4,"ImageStyle"],[4,"Three"],[4,"Pos"],[4,"Direction"],[3,"Position"],[3,"Renderer"],[3,"Form"],[3,"LineStyle"],[4,"FillStyle"],[4,"LineCap"],[4,"LineJoin"],[4,"BasicForm"],[4,"ShapeStyle"],[3,"PointPath"],[3,"Shape"],[3,"Text"],[3,"TextUnit"],[3,"Style"],[4,"Line"],[3,"Transform2D"]]};
searchIndex['enum_primitive'] = {"items":[[0,"","enum_primitive","This crate exports a macro `enum_from_primitive!` that wraps an\n`enum` declaration and automatically adds an implementation of\n`num::FromPrimitive` (reexported here), to allow conversion from\nprimitive integers to the enum.  It therefore provides an\nalternative to the built-in `#[derive(FromPrimitive)]`, which\nrequires the unstable `std::num::FromPrimitive` and is disabled in\nRust 1.0.",null,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",0,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[14,"enum_from_primitive_impl_ty!","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive_impl!","","Helper macro for internal use by `enum_from_primitive!`.",null,null],[14,"enum_from_primitive!","","Wrap this macro around an `enum` declaration to get an\nautomatically generated implementation of `num::FromPrimitive`.",null,null]],"paths":[[8,"FromPrimitive"]]};
searchIndex['peg_syntax_ext'] = {"items":[[0,"","peg_syntax_ext","",null,null],[5,"plugin_registrar","","",null,{"inputs":[{"name":"registry"}],"output":null}],[11,"new","syntax::ast","Construct an identifier with the given name and an empty context:",0,{"inputs":[{"name":"ident"},{"name":"name"}],"output":{"name":"ident"}}],[11,"as_str","","",0,{"inputs":[{"name":"ident"}],"output":{"name":"str"}}],[11,"new","syntax::util::interner","",1,{"inputs":[{"name":"interner"}],"output":{"name":"interner"}}],[11,"prefill","","",1,null],[11,"intern","","",1,{"inputs":[{"name":"interner"},{"name":"t"}],"output":{"name":"name"}}],[11,"gensym","","",1,{"inputs":[{"name":"interner"},{"name":"t"}],"output":{"name":"name"}}],[11,"get","","",1,{"inputs":[{"name":"interner"},{"name":"name"}],"output":{"name":"t"}}],[11,"len","","",1,{"inputs":[{"name":"interner"}],"output":{"name":"usize"}}],[11,"find","","",1,{"inputs":[{"name":"interner"},{"name":"q"}],"output":{"name":"option"}}],[11,"clear","","",1,null],[11,"partial_cmp","","",2,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"eq","","",2,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"rcstr"}],"output":{"name":"rcstr"}}],[11,"new","","",2,{"inputs":[{"name":"rcstr"},{"name":"str"}],"output":{"name":"rcstr"}}],[11,"cmp","","",2,{"inputs":[{"name":"rcstr"},{"name":"rcstr"}],"output":{"name":"ordering"}}],[11,"fmt","","",2,{"inputs":[{"name":"rcstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"rcstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",2,{"inputs":[{"name":"rcstr"}],"output":{"name":"str"}}],[11,"deref","","",2,{"inputs":[{"name":"rcstr"}],"output":{"name":"str"}}],[11,"new","","",3,{"inputs":[{"name":"strinterner"}],"output":{"name":"strinterner"}}],[11,"prefill","","",3,null],[11,"intern","","",3,{"inputs":[{"name":"strinterner"},{"name":"str"}],"output":{"name":"name"}}],[11,"gensym","","",3,{"inputs":[{"name":"strinterner"},{"name":"str"}],"output":{"name":"name"}}],[11,"gensym_copy","","Create a gensym with the same name as an existing\nentry.",3,{"inputs":[{"name":"strinterner"},{"name":"name"}],"output":{"name":"name"}}],[11,"get","","",3,{"inputs":[{"name":"strinterner"},{"name":"name"}],"output":{"name":"rcstr"}}],[11,"len","","",3,{"inputs":[{"name":"strinterner"}],"output":{"name":"usize"}}],[11,"find","","",3,{"inputs":[{"name":"strinterner"},{"name":"q"}],"output":{"name":"option"}}],[11,"clear","","",3,null],[11,"reset","","",3,null],[11,"from_iter","syntax::util::small_vector","",4,{"inputs":[{"name":"smallvector"},{"name":"i"}],"output":{"name":"smallvector"}}],[11,"extend","","",4,null],[11,"zero","","",4,{"inputs":[{"name":"smallvector"}],"output":{"name":"smallvector"}}],[11,"one","","",4,{"inputs":[{"name":"smallvector"},{"name":"t"}],"output":{"name":"smallvector"}}],[11,"many","","",4,{"inputs":[{"name":"smallvector"},{"name":"vec"}],"output":{"name":"smallvector"}}],[11,"as_slice","","",4,null],[11,"pop","","",4,{"inputs":[{"name":"smallvector"}],"output":{"name":"option"}}],[11,"push","","",4,null],[11,"push_all","","",4,null],[11,"get","","",4,{"inputs":[{"name":"smallvector"},{"name":"usize"}],"output":{"name":"t"}}],[11,"expect_one","","",4,{"inputs":[{"name":"smallvector"},{"name":"str"}],"output":{"name":"t"}}],[11,"move_iter","","Deprecated: use `into_iter`.",4,{"inputs":[{"name":"smallvector"}],"output":{"name":"intoiter"}}],[11,"into_iter","","",4,{"inputs":[{"name":"smallvector"}],"output":{"name":"intoiter"}}],[11,"len","","",4,{"inputs":[{"name":"smallvector"}],"output":{"name":"usize"}}],[11,"is_empty","","",4,{"inputs":[{"name":"smallvector"}],"output":{"name":"bool"}}],[11,"next","","",5,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"move_map","","",4,{"inputs":[{"name":"smallvector"},{"name":"f"}],"output":{"name":"smallvector"}}],[11,"clone","syntax::diagnostics::registry","",6,{"inputs":[{"name":"registry"}],"output":{"name":"registry"}}],[11,"new","","",6,null],[11,"find_description","","",6,{"inputs":[{"name":"registry"},{"name":"str"}],"output":{"name":"option"}}],[11,"encode","syntax::diagnostics::metadata","",7,{"inputs":[{"name":"errormetadata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",7,{"inputs":[{"name":"errormetadata"},{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"errormetadata"},{"name":"errormetadata"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"errormetadata"},{"name":"errormetadata"}],"output":{"name":"bool"}}],[11,"encode","","",8,{"inputs":[{"name":"errorlocation"},{"name":"__s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"errorlocation"},{"name":"__d"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"errorlocation"},{"name":"errorlocation"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"errorlocation"},{"name":"errorlocation"}],"output":{"name":"bool"}}],[11,"from_span","","Create an error location from a span.",8,{"inputs":[{"name":"errorlocation"},{"name":"extctxt"},{"name":"span"}],"output":{"name":"errorlocation"}}],[11,"cmp","syntax::ast","",0,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"clone","","",0,{"inputs":[{"name":"ident"}],"output":{"name":"ident"}}],[11,"fmt","","",0,{"inputs":[{"name":"ident"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"ident"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"ident"},{"name":"ident"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"name"}],"output":{"name":"name"}}],[11,"decode","","",9,{"inputs":[{"name":"name"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",9,{"inputs":[{"name":"name"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",9,null],[11,"partial_cmp","","",9,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"eq","","",9,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"ordering"}}],[11,"as_str","","",9,{"inputs":[{"name":"name"}],"output":{"name":"str"}}],[11,"usize","","",9,{"inputs":[{"name":"name"}],"output":{"name":"usize"}}],[11,"ident","","",9,{"inputs":[{"name":"name"}],"output":{"name":"ident"}}],[11,"encode","","",0,{"inputs":[{"name":"ident"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"ident"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"lifetime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"decode","","",10,{"inputs":[{"name":"lifetime"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",10,{"inputs":[{"name":"lifetime"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"lifetime"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"lifetime"},{"name":"lifetime"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"lifetime"}],"output":{"name":"lifetime"}}],[11,"fmt","","",11,{"inputs":[{"name":"lifetimedef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"decode","","",11,{"inputs":[{"name":"lifetimedef"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",11,{"inputs":[{"name":"lifetimedef"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"lifetimedef"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"lifetimedef"},{"name":"lifetimedef"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"lifetimedef"}],"output":{"name":"lifetimedef"}}],[11,"fmt","","",12,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",12,null],[11,"decode","","",12,{"inputs":[{"name":"path"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",12,{"inputs":[{"name":"path"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"fmt","","",13,{"inputs":[{"name":"pathsegment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",13,null],[11,"decode","","",13,{"inputs":[{"name":"pathsegment"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",13,{"inputs":[{"name":"pathsegment"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"pathsegment"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"pathsegment"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[11,"fmt","","",14,{"inputs":[{"name":"pathparameters"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",14,null],[11,"decode","","",14,{"inputs":[{"name":"pathparameters"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",14,{"inputs":[{"name":"pathparameters"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"pathparameters"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"pathparameters"},{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"pathparameters"}],"output":{"name":"pathparameters"}}],[11,"none","","",14,{"inputs":[{"name":"pathparameters"}],"output":{"name":"pathparameters"}}],[11,"is_empty","","",14,{"inputs":[{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"has_lifetimes","","",14,{"inputs":[{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"has_types","","",14,{"inputs":[{"name":"pathparameters"}],"output":{"name":"bool"}}],[11,"types","","Returns the types that the user wrote. Note that these do not necessarily map to the type\nparameters in the parenthesized case.",14,{"inputs":[{"name":"pathparameters"}],"output":{"name":"vec"}}],[11,"lifetimes","","",14,{"inputs":[{"name":"pathparameters"}],"output":{"name":"vec"}}],[11,"bindings","","",14,{"inputs":[{"name":"pathparameters"}],"output":{"name":"vec"}}],[11,"fmt","","",15,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",15,null],[11,"decode","","",15,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",15,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"anglebracketedparameterdata"},{"name":"anglebracketedparameterdata"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"anglebracketedparameterdata"}],"output":{"name":"anglebracketedparameterdata"}}],[11,"fmt","","",16,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",16,null],[11,"decode","","",16,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",16,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"parenthesizedparameterdata"},{"name":"parenthesizedparameterdata"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"parenthesizedparameterdata"}],"output":{"name":"parenthesizedparameterdata"}}],[11,"fmt","","",17,{"inputs":[{"name":"defid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"defid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",17,{"inputs":[{"name":"defid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"bool"}}],[11,"cmp","","",17,{"inputs":[{"name":"defid"},{"name":"defid"}],"output":{"name":"ordering"}}],[11,"clone","","",17,{"inputs":[{"name":"defid"}],"output":{"name":"defid"}}],[11,"local_id","","Read the node id, asserting that this def-id is krate-local.",17,{"inputs":[{"name":"defid"}],"output":{"name":"u32"}}],[11,"fmt","","",18,{"inputs":[{"name":"typarambound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"decode","","",18,{"inputs":[{"name":"typarambound"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",18,{"inputs":[{"name":"typarambound"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"typarambound"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"typarambound"},{"name":"typarambound"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"typarambound"}],"output":{"name":"typarambound"}}],[11,"fmt","","",19,{"inputs":[{"name":"traitboundmodifier"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",19,null],[11,"decode","","",19,{"inputs":[{"name":"traitboundmodifier"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",19,{"inputs":[{"name":"traitboundmodifier"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"traitboundmodifier"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"traitboundmodifier"},{"name":"traitboundmodifier"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"traitboundmodifier"}],"output":{"name":"traitboundmodifier"}}],[11,"fmt","","",20,{"inputs":[{"name":"typaram"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"decode","","",20,{"inputs":[{"name":"typaram"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",20,{"inputs":[{"name":"typaram"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"typaram"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"typaram"},{"name":"typaram"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"typaram"}],"output":{"name":"typaram"}}],[11,"fmt","","",21,{"inputs":[{"name":"generics"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",21,null],[11,"decode","","",21,{"inputs":[{"name":"generics"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",21,{"inputs":[{"name":"generics"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"generics"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"generics"},{"name":"generics"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"generics"}],"output":{"name":"generics"}}],[11,"is_lt_parameterized","","",21,{"inputs":[{"name":"generics"}],"output":{"name":"bool"}}],[11,"is_type_parameterized","","",21,{"inputs":[{"name":"generics"}],"output":{"name":"bool"}}],[11,"is_parameterized","","",21,{"inputs":[{"name":"generics"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"whereclause"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",22,null],[11,"decode","","",22,{"inputs":[{"name":"whereclause"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",22,{"inputs":[{"name":"whereclause"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"whereclause"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"whereclause"},{"name":"whereclause"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"whereclause"}],"output":{"name":"whereclause"}}],[11,"fmt","","",23,{"inputs":[{"name":"wherepredicate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",23,null],[11,"decode","","",23,{"inputs":[{"name":"wherepredicate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",23,{"inputs":[{"name":"wherepredicate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"wherepredicate"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"wherepredicate"},{"name":"wherepredicate"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"wherepredicate"}],"output":{"name":"wherepredicate"}}],[11,"fmt","","",24,{"inputs":[{"name":"whereboundpredicate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",24,null],[11,"decode","","",24,{"inputs":[{"name":"whereboundpredicate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",24,{"inputs":[{"name":"whereboundpredicate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"whereboundpredicate"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"whereboundpredicate"},{"name":"whereboundpredicate"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"whereboundpredicate"}],"output":{"name":"whereboundpredicate"}}],[11,"fmt","","",25,{"inputs":[{"name":"whereregionpredicate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",25,null],[11,"decode","","",25,{"inputs":[{"name":"whereregionpredicate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",25,{"inputs":[{"name":"whereregionpredicate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"whereregionpredicate"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"whereregionpredicate"},{"name":"whereregionpredicate"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"whereregionpredicate"}],"output":{"name":"whereregionpredicate"}}],[11,"fmt","","",26,{"inputs":[{"name":"whereeqpredicate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",26,null],[11,"decode","","",26,{"inputs":[{"name":"whereeqpredicate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",26,{"inputs":[{"name":"whereeqpredicate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"whereeqpredicate"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"whereeqpredicate"},{"name":"whereeqpredicate"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"whereeqpredicate"}],"output":{"name":"whereeqpredicate"}}],[11,"fmt","","",27,{"inputs":[{"name":"crate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",27,null],[11,"decode","","",27,{"inputs":[{"name":"crate"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",27,{"inputs":[{"name":"crate"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"crate"},{"name":"crate"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"crate"},{"name":"crate"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"crate"}],"output":{"name":"crate"}}],[11,"fmt","","",28,{"inputs":[{"name":"metaitem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",28,null],[11,"decode","","",28,{"inputs":[{"name":"metaitem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",28,{"inputs":[{"name":"metaitem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"metaitem_"}],"output":{"name":"metaitem_"}}],[11,"eq","","",28,{"inputs":[{"name":"metaitem_"},{"name":"metaitem_"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"block"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",29,null],[11,"decode","","",29,{"inputs":[{"name":"block"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",29,{"inputs":[{"name":"block"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"block"},{"name":"block"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"block"},{"name":"block"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"block"}],"output":{"name":"block"}}],[11,"fmt","","",30,{"inputs":[{"name":"pat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",30,null],[11,"decode","","",30,{"inputs":[{"name":"pat"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",30,{"inputs":[{"name":"pat"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"pat"},{"name":"pat"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"pat"},{"name":"pat"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"pat"}],"output":{"name":"pat"}}],[11,"fmt","","",31,{"inputs":[{"name":"fieldpat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"decode","","",31,{"inputs":[{"name":"fieldpat"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"fieldpat"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"fieldpat"},{"name":"fieldpat"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"fieldpat"},{"name":"fieldpat"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"fieldpat"}],"output":{"name":"fieldpat"}}],[11,"fmt","","",32,{"inputs":[{"name":"bindingmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",32,null],[11,"decode","","",32,{"inputs":[{"name":"bindingmode"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",32,{"inputs":[{"name":"bindingmode"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"bindingmode"},{"name":"bindingmode"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"bindingmode"},{"name":"bindingmode"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"bindingmode"}],"output":{"name":"bindingmode"}}],[11,"fmt","","",33,{"inputs":[{"name":"patwildkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",33,null],[11,"decode","","",33,{"inputs":[{"name":"patwildkind"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",33,{"inputs":[{"name":"patwildkind"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"patwildkind"},{"name":"patwildkind"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"patwildkind"},{"name":"patwildkind"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"patwildkind"}],"output":{"name":"patwildkind"}}],[11,"fmt","","",34,{"inputs":[{"name":"pat_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",34,null],[11,"decode","","",34,{"inputs":[{"name":"pat_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",34,{"inputs":[{"name":"pat_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"pat_"},{"name":"pat_"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"pat_"},{"name":"pat_"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"pat_"}],"output":{"name":"pat_"}}],[11,"fmt","","",35,{"inputs":[{"name":"mutability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",35,null],[11,"decode","","",35,{"inputs":[{"name":"mutability"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",35,{"inputs":[{"name":"mutability"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"mutability"},{"name":"mutability"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"mutability"},{"name":"mutability"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"mutability"}],"output":{"name":"mutability"}}],[11,"fmt","","",36,{"inputs":[{"name":"binop_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",36,null],[11,"decode","","",36,{"inputs":[{"name":"binop_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",36,{"inputs":[{"name":"binop_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"binop_"},{"name":"binop_"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"binop_"},{"name":"binop_"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"binop_"}],"output":{"name":"binop_"}}],[11,"fmt","","",37,{"inputs":[{"name":"unop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",37,null],[11,"decode","","",37,{"inputs":[{"name":"unop"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",37,{"inputs":[{"name":"unop"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"unop"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"unop"},{"name":"unop"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"unop"}],"output":{"name":"unop"}}],[11,"fmt","","",38,{"inputs":[{"name":"stmt_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",38,null],[11,"decode","","",38,{"inputs":[{"name":"stmt_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",38,{"inputs":[{"name":"stmt_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"stmt_"},{"name":"stmt_"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"stmt_"},{"name":"stmt_"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"stmt_"}],"output":{"name":"stmt_"}}],[11,"fmt","","",39,{"inputs":[{"name":"macstmtstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",39,null],[11,"decode","","",39,{"inputs":[{"name":"macstmtstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",39,{"inputs":[{"name":"macstmtstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"macstmtstyle"},{"name":"macstmtstyle"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"macstmtstyle"},{"name":"macstmtstyle"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"macstmtstyle"}],"output":{"name":"macstmtstyle"}}],[11,"fmt","","",40,{"inputs":[{"name":"localsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",40,null],[11,"decode","","",40,{"inputs":[{"name":"localsource"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",40,{"inputs":[{"name":"localsource"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"localsource"},{"name":"localsource"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"localsource"},{"name":"localsource"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"localsource"}],"output":{"name":"localsource"}}],[11,"fmt","","",41,{"inputs":[{"name":"local"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",41,null],[11,"decode","","",41,{"inputs":[{"name":"local"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",41,{"inputs":[{"name":"local"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"local"},{"name":"local"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"local"},{"name":"local"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"local"}],"output":{"name":"local"}}],[11,"fmt","","",42,{"inputs":[{"name":"decl_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",42,null],[11,"decode","","",42,{"inputs":[{"name":"decl_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",42,{"inputs":[{"name":"decl_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"decl_"},{"name":"decl_"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"decl_"},{"name":"decl_"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"decl_"}],"output":{"name":"decl_"}}],[11,"fmt","","",43,{"inputs":[{"name":"arm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",43,null],[11,"decode","","",43,{"inputs":[{"name":"arm"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",43,{"inputs":[{"name":"arm"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"arm"},{"name":"arm"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"arm"},{"name":"arm"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"arm"}],"output":{"name":"arm"}}],[11,"fmt","","",44,{"inputs":[{"name":"field"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",44,null],[11,"decode","","",44,{"inputs":[{"name":"field"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",44,{"inputs":[{"name":"field"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"field"},{"name":"field"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"field"},{"name":"field"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"field"}],"output":{"name":"field"}}],[11,"fmt","","",45,{"inputs":[{"name":"blockcheckmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",45,null],[11,"decode","","",45,{"inputs":[{"name":"blockcheckmode"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",45,{"inputs":[{"name":"blockcheckmode"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"blockcheckmode"},{"name":"blockcheckmode"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"blockcheckmode"},{"name":"blockcheckmode"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"blockcheckmode"}],"output":{"name":"blockcheckmode"}}],[11,"fmt","","",46,{"inputs":[{"name":"unsafesource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",46,null],[11,"decode","","",46,{"inputs":[{"name":"unsafesource"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",46,{"inputs":[{"name":"unsafesource"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"unsafesource"},{"name":"unsafesource"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"unsafesource"},{"name":"unsafesource"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"unsafesource"}],"output":{"name":"unsafesource"}}],[11,"fmt","","",47,{"inputs":[{"name":"expr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",47,null],[11,"decode","","",47,{"inputs":[{"name":"expr"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",47,{"inputs":[{"name":"expr"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"expr"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"expr"},{"name":"expr"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"expr"}],"output":{"name":"expr"}}],[11,"fmt","","",48,{"inputs":[{"name":"expr_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",48,null],[11,"decode","","",48,{"inputs":[{"name":"expr_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",48,{"inputs":[{"name":"expr_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",48,{"inputs":[{"name":"expr_"},{"name":"expr_"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"expr_"},{"name":"expr_"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"expr_"}],"output":{"name":"expr_"}}],[11,"fmt","","",49,{"inputs":[{"name":"qself"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",49,null],[11,"decode","","",49,{"inputs":[{"name":"qself"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",49,{"inputs":[{"name":"qself"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"qself"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"qself"},{"name":"qself"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"qself"}],"output":{"name":"qself"}}],[11,"fmt","","",50,{"inputs":[{"name":"matchsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",50,null],[11,"decode","","",50,{"inputs":[{"name":"matchsource"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",50,{"inputs":[{"name":"matchsource"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"matchsource"},{"name":"matchsource"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"matchsource"},{"name":"matchsource"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"matchsource"}],"output":{"name":"matchsource"}}],[11,"fmt","","",51,{"inputs":[{"name":"captureclause"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",51,null],[11,"decode","","",51,{"inputs":[{"name":"captureclause"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",51,{"inputs":[{"name":"captureclause"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"captureclause"},{"name":"captureclause"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"captureclause"},{"name":"captureclause"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"captureclause"}],"output":{"name":"captureclause"}}],[11,"fmt","","",52,{"inputs":[{"name":"delimited"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",52,null],[11,"decode","","",52,{"inputs":[{"name":"delimited"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",52,{"inputs":[{"name":"delimited"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"delimited"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"delimited"},{"name":"delimited"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"delimited"}],"output":{"name":"delimited"}}],[11,"open_token","","Returns the opening delimiter as a token.",52,{"inputs":[{"name":"delimited"}],"output":{"name":"token"}}],[11,"close_token","","Returns the closing delimiter as a token.",52,{"inputs":[{"name":"delimited"}],"output":{"name":"token"}}],[11,"open_tt","","Returns the opening delimiter as a token tree.",52,{"inputs":[{"name":"delimited"}],"output":{"name":"tokentree"}}],[11,"close_tt","","Returns the closing delimiter as a token tree.",52,{"inputs":[{"name":"delimited"}],"output":{"name":"tokentree"}}],[11,"fmt","","",53,{"inputs":[{"name":"sequencerepetition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",53,null],[11,"decode","","",53,{"inputs":[{"name":"sequencerepetition"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",53,{"inputs":[{"name":"sequencerepetition"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"sequencerepetition"},{"name":"sequencerepetition"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"sequencerepetition"},{"name":"sequencerepetition"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"sequencerepetition"}],"output":{"name":"sequencerepetition"}}],[11,"fmt","","",54,{"inputs":[{"name":"kleeneop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",54,null],[11,"decode","","",54,{"inputs":[{"name":"kleeneop"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",54,{"inputs":[{"name":"kleeneop"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"kleeneop"},{"name":"kleeneop"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"kleeneop"},{"name":"kleeneop"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"kleeneop"}],"output":{"name":"kleeneop"}}],[11,"fmt","","",55,{"inputs":[{"name":"tokentree"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",55,null],[11,"decode","","",55,{"inputs":[{"name":"tokentree"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",55,{"inputs":[{"name":"tokentree"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"tokentree"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"tokentree"},{"name":"tokentree"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"tokentree"}],"output":{"name":"tokentree"}}],[11,"len","","",55,{"inputs":[{"name":"tokentree"}],"output":{"name":"usize"}}],[11,"get_tt","","",55,{"inputs":[{"name":"tokentree"},{"name":"usize"}],"output":{"name":"tokentree"}}],[11,"get_span","","Returns the `Span` corresponding to this token tree.",55,{"inputs":[{"name":"tokentree"}],"output":{"name":"span"}}],[11,"parse","","Use this token tree as a matcher to parse given tts.",55,null],[11,"fmt","","",56,{"inputs":[{"name":"mac_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",56,null],[11,"decode","","",56,{"inputs":[{"name":"mac_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",56,{"inputs":[{"name":"mac_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"mac_"},{"name":"mac_"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"mac_"},{"name":"mac_"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"mac_"}],"output":{"name":"mac_"}}],[11,"fmt","","",57,{"inputs":[{"name":"strstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",57,null],[11,"decode","","",57,{"inputs":[{"name":"strstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",57,{"inputs":[{"name":"strstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"strstyle"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"strstyle"},{"name":"strstyle"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"strstyle"}],"output":{"name":"strstyle"}}],[11,"fmt","","",58,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"decode","","",58,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",58,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"new","","",58,{"inputs":[{"name":"sign"},{"name":"t"}],"output":{"name":"sign"}}],[11,"fmt","","",59,{"inputs":[{"name":"litinttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",59,null],[11,"decode","","",59,{"inputs":[{"name":"litinttype"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",59,{"inputs":[{"name":"litinttype"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"litinttype"},{"name":"litinttype"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"litinttype"},{"name":"litinttype"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"litinttype"}],"output":{"name":"litinttype"}}],[11,"suffix_len","","",59,{"inputs":[{"name":"litinttype"}],"output":{"name":"usize"}}],[11,"fmt","","",60,{"inputs":[{"name":"lit_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",60,null],[11,"decode","","",60,{"inputs":[{"name":"lit_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",60,{"inputs":[{"name":"lit_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"lit_"},{"name":"lit_"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"lit_"},{"name":"lit_"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"lit_"}],"output":{"name":"lit_"}}],[11,"fmt","","",61,{"inputs":[{"name":"mutty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",61,null],[11,"decode","","",61,{"inputs":[{"name":"mutty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",61,{"inputs":[{"name":"mutty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"mutty"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"mutty"},{"name":"mutty"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"mutty"}],"output":{"name":"mutty"}}],[11,"fmt","","",62,{"inputs":[{"name":"typefield"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",62,null],[11,"decode","","",62,{"inputs":[{"name":"typefield"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",62,{"inputs":[{"name":"typefield"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"typefield"},{"name":"typefield"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"typefield"},{"name":"typefield"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"typefield"}],"output":{"name":"typefield"}}],[11,"fmt","","",63,{"inputs":[{"name":"methodsig"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",63,null],[11,"decode","","",63,{"inputs":[{"name":"methodsig"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",63,{"inputs":[{"name":"methodsig"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"methodsig"},{"name":"methodsig"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"methodsig"},{"name":"methodsig"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"methodsig"}],"output":{"name":"methodsig"}}],[11,"fmt","","",64,{"inputs":[{"name":"traititem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",64,null],[11,"decode","","",64,{"inputs":[{"name":"traititem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",64,{"inputs":[{"name":"traititem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"traititem"},{"name":"traititem"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"traititem"},{"name":"traititem"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"traititem"}],"output":{"name":"traititem"}}],[11,"fmt","","",65,{"inputs":[{"name":"traititem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",65,null],[11,"decode","","",65,{"inputs":[{"name":"traititem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",65,{"inputs":[{"name":"traititem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"traititem_"},{"name":"traititem_"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"traititem_"},{"name":"traititem_"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"traititem_"}],"output":{"name":"traititem_"}}],[11,"fmt","","",66,{"inputs":[{"name":"implitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",66,null],[11,"decode","","",66,{"inputs":[{"name":"implitem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",66,{"inputs":[{"name":"implitem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"implitem"},{"name":"implitem"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"implitem"},{"name":"implitem"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"implitem"}],"output":{"name":"implitem"}}],[11,"fmt","","",67,{"inputs":[{"name":"implitem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",67,null],[11,"decode","","",67,{"inputs":[{"name":"implitem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",67,{"inputs":[{"name":"implitem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"implitem_"},{"name":"implitem_"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"implitem_"},{"name":"implitem_"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"implitem_"}],"output":{"name":"implitem_"}}],[11,"hash","","",68,null],[11,"decode","","",68,{"inputs":[{"name":"intty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",68,{"inputs":[{"name":"intty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"intty"},{"name":"intty"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"intty"},{"name":"intty"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"intty"}],"output":{"name":"intty"}}],[11,"fmt","","",68,{"inputs":[{"name":"intty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"intty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"suffix_len","","",68,{"inputs":[{"name":"intty"}],"output":{"name":"usize"}}],[11,"hash","","",69,null],[11,"decode","","",69,{"inputs":[{"name":"uintty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",69,{"inputs":[{"name":"uintty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"uintty"},{"name":"uintty"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"uintty"},{"name":"uintty"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"uintty"}],"output":{"name":"uintty"}}],[11,"suffix_len","","",69,{"inputs":[{"name":"uintty"}],"output":{"name":"usize"}}],[11,"fmt","","",69,{"inputs":[{"name":"uintty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",69,{"inputs":[{"name":"uintty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",70,null],[11,"decode","","",70,{"inputs":[{"name":"floatty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",70,{"inputs":[{"name":"floatty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"floatty"},{"name":"floatty"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"floatty"},{"name":"floatty"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"floatty"}],"output":{"name":"floatty"}}],[11,"fmt","","",70,{"inputs":[{"name":"floatty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"floatty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"suffix_len","","",70,{"inputs":[{"name":"floatty"}],"output":{"name":"usize"}}],[11,"fmt","","",71,{"inputs":[{"name":"typebinding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",71,null],[11,"decode","","",71,{"inputs":[{"name":"typebinding"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",71,{"inputs":[{"name":"typebinding"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"typebinding"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"typebinding"},{"name":"typebinding"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"typebinding"}],"output":{"name":"typebinding"}}],[11,"fmt","","",72,{"inputs":[{"name":"ty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",72,null],[11,"decode","","",72,{"inputs":[{"name":"ty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",72,{"inputs":[{"name":"ty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"ty"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"ty"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"ty"}],"output":{"name":"ty"}}],[11,"fmt","","",73,{"inputs":[{"name":"primty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",73,null],[11,"decode","","",73,{"inputs":[{"name":"primty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",73,{"inputs":[{"name":"primty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"primty"},{"name":"primty"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"primty"},{"name":"primty"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"primty"}],"output":{"name":"primty"}}],[11,"fmt","","",74,{"inputs":[{"name":"barefnty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",74,null],[11,"decode","","",74,{"inputs":[{"name":"barefnty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",74,{"inputs":[{"name":"barefnty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"barefnty"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"barefnty"},{"name":"barefnty"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"barefnty"}],"output":{"name":"barefnty"}}],[11,"fmt","","",75,{"inputs":[{"name":"ty_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",75,null],[11,"decode","","",75,{"inputs":[{"name":"ty_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",75,{"inputs":[{"name":"ty_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"ty_"},{"name":"ty_"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"ty_"},{"name":"ty_"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"ty_"}],"output":{"name":"ty_"}}],[11,"fmt","","",76,{"inputs":[{"name":"asmdialect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",76,null],[11,"decode","","",76,{"inputs":[{"name":"asmdialect"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",76,{"inputs":[{"name":"asmdialect"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"asmdialect"},{"name":"asmdialect"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"asmdialect"},{"name":"asmdialect"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"asmdialect"}],"output":{"name":"asmdialect"}}],[11,"fmt","","",77,{"inputs":[{"name":"inlineasm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",77,null],[11,"decode","","",77,{"inputs":[{"name":"inlineasm"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",77,{"inputs":[{"name":"inlineasm"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"inlineasm"},{"name":"inlineasm"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"inlineasm"},{"name":"inlineasm"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"inlineasm"}],"output":{"name":"inlineasm"}}],[11,"fmt","","",78,{"inputs":[{"name":"arg"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",78,null],[11,"decode","","",78,{"inputs":[{"name":"arg"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",78,{"inputs":[{"name":"arg"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"arg"},{"name":"arg"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"arg"},{"name":"arg"}],"output":{"name":"bool"}}],[11,"clone","","",78,{"inputs":[{"name":"arg"}],"output":{"name":"arg"}}],[11,"new_self","","",78,{"inputs":[{"name":"arg"},{"name":"span"},{"name":"mutability"},{"name":"ident"}],"output":{"name":"arg"}}],[11,"fmt","","",79,{"inputs":[{"name":"fndecl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",79,null],[11,"decode","","",79,{"inputs":[{"name":"fndecl"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",79,{"inputs":[{"name":"fndecl"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"fndecl"},{"name":"fndecl"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"fndecl"},{"name":"fndecl"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"fndecl"}],"output":{"name":"fndecl"}}],[11,"fmt","","",80,{"inputs":[{"name":"unsafety"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",80,null],[11,"decode","","",80,{"inputs":[{"name":"unsafety"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",80,{"inputs":[{"name":"unsafety"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"unsafety"},{"name":"unsafety"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"unsafety"},{"name":"unsafety"}],"output":{"name":"bool"}}],[11,"clone","","",80,{"inputs":[{"name":"unsafety"}],"output":{"name":"unsafety"}}],[11,"fmt","","",80,{"inputs":[{"name":"unsafety"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",81,null],[11,"decode","","",81,{"inputs":[{"name":"implpolarity"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",81,{"inputs":[{"name":"implpolarity"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"implpolarity"},{"name":"implpolarity"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"implpolarity"},{"name":"implpolarity"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"implpolarity"}],"output":{"name":"implpolarity"}}],[11,"fmt","","",81,{"inputs":[{"name":"implpolarity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",82,{"inputs":[{"name":"functionretty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",82,null],[11,"decode","","",82,{"inputs":[{"name":"functionretty"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",82,{"inputs":[{"name":"functionretty"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"functionretty"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"functionretty"},{"name":"functionretty"}],"output":{"name":"bool"}}],[11,"clone","","",82,{"inputs":[{"name":"functionretty"}],"output":{"name":"functionretty"}}],[11,"span","","",82,{"inputs":[{"name":"functionretty"}],"output":{"name":"span"}}],[11,"fmt","","",83,{"inputs":[{"name":"explicitself_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",83,null],[11,"decode","","",83,{"inputs":[{"name":"explicitself_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",83,{"inputs":[{"name":"explicitself_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"explicitself_"},{"name":"explicitself_"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"explicitself_"},{"name":"explicitself_"}],"output":{"name":"bool"}}],[11,"clone","","",83,{"inputs":[{"name":"explicitself_"}],"output":{"name":"explicitself_"}}],[11,"fmt","","",84,{"inputs":[{"name":"mod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",84,null],[11,"decode","","",84,{"inputs":[{"name":"mod"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",84,{"inputs":[{"name":"mod"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"mod"},{"name":"mod"}],"output":{"name":"bool"}}],[11,"clone","","",84,{"inputs":[{"name":"mod"}],"output":{"name":"mod"}}],[11,"fmt","","",85,{"inputs":[{"name":"foreignmod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,null],[11,"decode","","",85,{"inputs":[{"name":"foreignmod"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",85,{"inputs":[{"name":"foreignmod"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"foreignmod"},{"name":"foreignmod"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"foreignmod"},{"name":"foreignmod"}],"output":{"name":"bool"}}],[11,"clone","","",85,{"inputs":[{"name":"foreignmod"}],"output":{"name":"foreignmod"}}],[11,"fmt","","",86,{"inputs":[{"name":"variantarg"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",86,null],[11,"decode","","",86,{"inputs":[{"name":"variantarg"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",86,{"inputs":[{"name":"variantarg"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"variantarg"},{"name":"variantarg"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"variantarg"},{"name":"variantarg"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"variantarg"}],"output":{"name":"variantarg"}}],[11,"fmt","","",87,{"inputs":[{"name":"variantkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",87,null],[11,"decode","","",87,{"inputs":[{"name":"variantkind"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",87,{"inputs":[{"name":"variantkind"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"variantkind"},{"name":"variantkind"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"variantkind"},{"name":"variantkind"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"variantkind"}],"output":{"name":"variantkind"}}],[11,"fmt","","",88,{"inputs":[{"name":"enumdef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",88,null],[11,"decode","","",88,{"inputs":[{"name":"enumdef"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",88,{"inputs":[{"name":"enumdef"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"enumdef"},{"name":"enumdef"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"enumdef"},{"name":"enumdef"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"enumdef"}],"output":{"name":"enumdef"}}],[11,"fmt","","",89,{"inputs":[{"name":"variant_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",89,null],[11,"decode","","",89,{"inputs":[{"name":"variant_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",89,{"inputs":[{"name":"variant_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"variant_"},{"name":"variant_"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"variant_"},{"name":"variant_"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"variant_"}],"output":{"name":"variant_"}}],[11,"fmt","","",90,{"inputs":[{"name":"pathlistitem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",90,null],[11,"decode","","",90,{"inputs":[{"name":"pathlistitem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",90,{"inputs":[{"name":"pathlistitem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",90,{"inputs":[{"name":"pathlistitem_"},{"name":"pathlistitem_"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"pathlistitem_"},{"name":"pathlistitem_"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"pathlistitem_"}],"output":{"name":"pathlistitem_"}}],[11,"id","","",90,{"inputs":[{"name":"pathlistitem_"}],"output":{"name":"u32"}}],[11,"fmt","","",91,{"inputs":[{"name":"viewpath_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",91,null],[11,"decode","","",91,{"inputs":[{"name":"viewpath_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",91,{"inputs":[{"name":"viewpath_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"viewpath_"},{"name":"viewpath_"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"viewpath_"},{"name":"viewpath_"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"viewpath_"}],"output":{"name":"viewpath_"}}],[11,"fmt","","",92,{"inputs":[{"name":"attrstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",92,null],[11,"decode","","",92,{"inputs":[{"name":"attrstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",92,{"inputs":[{"name":"attrstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",92,{"inputs":[{"name":"attrstyle"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"attrstyle"},{"name":"attrstyle"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"attrstyle"}],"output":{"name":"attrstyle"}}],[11,"fmt","","",93,{"inputs":[{"name":"attrid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",93,null],[11,"decode","","",93,{"inputs":[{"name":"attrid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",93,{"inputs":[{"name":"attrid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"attrid"},{"name":"attrid"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"attrid"},{"name":"attrid"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"attrid"}],"output":{"name":"attrid"}}],[11,"fmt","","",94,{"inputs":[{"name":"attribute_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",94,null],[11,"decode","","",94,{"inputs":[{"name":"attribute_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",94,{"inputs":[{"name":"attribute_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",94,{"inputs":[{"name":"attribute_"},{"name":"attribute_"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"attribute_"},{"name":"attribute_"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"attribute_"}],"output":{"name":"attribute_"}}],[11,"fmt","","",95,{"inputs":[{"name":"traitref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",95,null],[11,"decode","","",95,{"inputs":[{"name":"traitref"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",95,{"inputs":[{"name":"traitref"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"traitref"},{"name":"traitref"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"traitref"},{"name":"traitref"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"traitref"}],"output":{"name":"traitref"}}],[11,"fmt","","",96,{"inputs":[{"name":"polytraitref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",96,null],[11,"decode","","",96,{"inputs":[{"name":"polytraitref"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",96,{"inputs":[{"name":"polytraitref"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"polytraitref"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"polytraitref"},{"name":"polytraitref"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"polytraitref"}],"output":{"name":"polytraitref"}}],[11,"fmt","","",97,{"inputs":[{"name":"visibility"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",97,null],[11,"decode","","",97,{"inputs":[{"name":"visibility"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",97,{"inputs":[{"name":"visibility"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",97,{"inputs":[{"name":"visibility"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"visibility"},{"name":"visibility"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"visibility"}],"output":{"name":"visibility"}}],[11,"inherit_from","","",97,{"inputs":[{"name":"visibility"},{"name":"visibility"}],"output":{"name":"visibility"}}],[11,"fmt","","",98,{"inputs":[{"name":"structfield_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",98,null],[11,"decode","","",98,{"inputs":[{"name":"structfield_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",98,{"inputs":[{"name":"structfield_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",98,{"inputs":[{"name":"structfield_"},{"name":"structfield_"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"structfield_"},{"name":"structfield_"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"structfield_"}],"output":{"name":"structfield_"}}],[11,"ident","","",98,{"inputs":[{"name":"structfield_"}],"output":{"name":"option"}}],[11,"fmt","","",99,{"inputs":[{"name":"structfieldkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",99,null],[11,"decode","","",99,{"inputs":[{"name":"structfieldkind"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",99,{"inputs":[{"name":"structfieldkind"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",99,{"inputs":[{"name":"structfieldkind"},{"name":"structfieldkind"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"structfieldkind"},{"name":"structfieldkind"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"structfieldkind"}],"output":{"name":"structfieldkind"}}],[11,"is_unnamed","","",99,{"inputs":[{"name":"structfieldkind"}],"output":{"name":"bool"}}],[11,"fmt","","",100,{"inputs":[{"name":"structdef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",100,null],[11,"decode","","",100,{"inputs":[{"name":"structdef"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",100,{"inputs":[{"name":"structdef"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",100,{"inputs":[{"name":"structdef"},{"name":"structdef"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"structdef"},{"name":"structdef"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"structdef"}],"output":{"name":"structdef"}}],[11,"fmt","","",101,{"inputs":[{"name":"item"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",101,null],[11,"decode","","",101,{"inputs":[{"name":"item"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",101,{"inputs":[{"name":"item"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",101,{"inputs":[{"name":"item"},{"name":"item"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"item"},{"name":"item"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"fmt","","",102,{"inputs":[{"name":"item_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",102,null],[11,"decode","","",102,{"inputs":[{"name":"item_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",102,{"inputs":[{"name":"item_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",102,{"inputs":[{"name":"item_"},{"name":"item_"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"item_"},{"name":"item_"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"item_"}],"output":{"name":"item_"}}],[11,"descriptive_variant","","",102,{"inputs":[{"name":"item_"}],"output":{"name":"str"}}],[11,"fmt","","",103,{"inputs":[{"name":"foreignitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",103,null],[11,"decode","","",103,{"inputs":[{"name":"foreignitem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",103,{"inputs":[{"name":"foreignitem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"foreignitem"},{"name":"foreignitem"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"foreignitem"},{"name":"foreignitem"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"foreignitem"}],"output":{"name":"foreignitem"}}],[11,"fmt","","",104,{"inputs":[{"name":"foreignitem_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",104,null],[11,"decode","","",104,{"inputs":[{"name":"foreignitem_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",104,{"inputs":[{"name":"foreignitem_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",104,{"inputs":[{"name":"foreignitem_"},{"name":"foreignitem_"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"foreignitem_"},{"name":"foreignitem_"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"foreignitem_"}],"output":{"name":"foreignitem_"}}],[11,"descriptive_variant","","",104,{"inputs":[{"name":"foreignitem_"}],"output":{"name":"str"}}],[11,"fmt","","",105,{"inputs":[{"name":"inlineditem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",105,null],[11,"decode","","",105,{"inputs":[{"name":"inlineditem"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",105,{"inputs":[{"name":"inlineditem"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",105,{"inputs":[{"name":"inlineditem"},{"name":"inlineditem"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"inlineditem"},{"name":"inlineditem"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"inlineditem"}],"output":{"name":"inlineditem"}}],[11,"fmt","","",106,{"inputs":[{"name":"macrodef"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",106,null],[11,"decode","","",106,{"inputs":[{"name":"macrodef"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",106,{"inputs":[{"name":"macrodef"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",106,{"inputs":[{"name":"macrodef"},{"name":"macrodef"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"macrodef"},{"name":"macrodef"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"macrodef"}],"output":{"name":"macrodef"}}],[11,"hash","syntax::parse::parser","",107,null],[11,"cmp","","",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"option"}}],[11,"lt","","",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"le","","",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"gt","","",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"ge","","",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"eq","","",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",107,{"inputs":[{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"all","","Returns the set containing all flags.",107,{"inputs":[{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",107,{"inputs":[{"name":"restrictions"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",107,{"inputs":[{"name":"restrictions"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",107,{"inputs":[{"name":"restrictions"},{"name":"u8"}],"output":{"name":"restrictions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",107,{"inputs":[{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",107,{"inputs":[{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",107,null],[11,"remove","","Removes the specified flags in-place.",107,null],[11,"toggle","","Toggles the specified flags in-place.",107,null],[11,"bitor","","Returns the union of the two sets of flags.",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"sub","","Returns the set difference of the two sets of flags.",107,{"inputs":[{"name":"restrictions"},{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"not","","Returns the complement of this set of flags.",107,{"inputs":[{"name":"restrictions"}],"output":{"name":"restrictions"}}],[11,"eq","","",108,{"inputs":[{"name":"pathparsingmode"},{"name":"pathparsingmode"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"pathparsingmode"},{"name":"pathparsingmode"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"pathparsingmode"}],"output":{"name":"pathparsingmode"}}],[11,"eq","","",109,{"inputs":[{"name":"boundparsingmode"},{"name":"boundparsingmode"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"boundparsingmode"},{"name":"boundparsingmode"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"boundparsingmode"}],"output":{"name":"boundparsingmode"}}],[11,"clone","","",110,{"inputs":[{"name":"tokentype"}],"output":{"name":"tokentype"}}],[11,"eq","","",110,{"inputs":[{"name":"tokentype"},{"name":"tokentype"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"tokentype"},{"name":"tokentype"}],"output":{"name":"bool"}}],[11,"new","","",111,{"inputs":[{"name":"parser"},{"name":"parsesess"},{"name":"vec"},{"name":"box"}],"output":{"name":"parser"}}],[11,"parse_expr","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[11,"parse_item","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"parse_pat","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[11,"parse_arm","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"arm"}}],[11,"parse_ty","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[11,"parse_stmt","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"token_to_string","","Convert a token to a string using self's reader",111,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"string"}}],[11,"this_token_to_string","","Convert the current token to a string using self's reader",111,{"inputs":[{"name":"parser"}],"output":{"name":"string"}}],[11,"unexpected_last","","",111,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"fatalerror"}}],[11,"unexpected","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"fatalerror"}}],[11,"expect","","Expect and consume the token t. Signal an error if\nthe next token is not t.",111,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"expect_one_of","","Expect next token to be edible or inedible token.  If edible,\nthen consume it; if inedible, then return without consuming\nanything.  Signal a fatal error if next token is unexpected.",111,null],[11,"check_for_erroneous_unit_struct_expecting","","Check for erroneous `ident { }`; if matches, signal error and\nrecover (without consuming any expected input token).  Returns\ntrue if and only if input was consumed for recovery.",111,null],[11,"commit_expr","","Commit to parsing a complete expression `e` expected to be\nfollowed by some token from the set edible + inedible.  Recover\nfrom anticipated input errors, discarding erroneous characters.",111,null],[11,"commit_expr_expecting","","",111,{"inputs":[{"name":"parser"},{"name":"expr"},{"name":"token"}],"output":{"name":"result"}}],[11,"commit_stmt","","Commit to parsing a complete statement `s`, which expects to be\nfollowed by some token from the set edible + inedible.  Check\nfor recoverable input errors, discarding erroneous characters.",111,null],[11,"commit_stmt_expecting","","",111,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"parse_ident","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ident_or_self_type","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_path_list_item","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"check","","Check if the next token is `tok`, and return `true` if so.",111,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"bool"}}],[11,"eat","","Consume token 'tok' if it exists. Returns true if the given\ntoken was present, false otherwise.",111,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"check_keyword","","",111,{"inputs":[{"name":"parser"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"eat_keyword","","If the next token is the given keyword, eat it and return\ntrue. Otherwise, return false.",111,{"inputs":[{"name":"parser"},{"name":"keyword"}],"output":{"name":"result"}}],[11,"eat_keyword_noexpect","","",111,{"inputs":[{"name":"parser"},{"name":"keyword"}],"output":{"name":"result"}}],[11,"expect_keyword","","If the given word is not a keyword, signal an error.\nIf the next token is not the given word, signal an error.\nOtherwise, eat it.",111,{"inputs":[{"name":"parser"},{"name":"keyword"}],"output":{"name":"result"}}],[11,"check_strict_keywords","","Signal an error if the given string is a strict keyword",111,null],[11,"check_reserved_keywords","","Signal an error if the current token is a reserved keyword",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"expect_no_suffix","","",111,null],[11,"expect_gt","","Expect and consume a GT. if a >> is seen, replace it\nwith a single > and continue. If a GT is not seen,\nsignal an error.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_seq_to_before_gt_or_return","","",111,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_before_gt","","Parse a sequence bracketed by '<' and '>', stopping\nbefore the '>'.",111,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_gt","","",111,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_gt_or_return","","",111,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_end","","Parse a sequence, including the closing delimiter. The function\nf must consume tokens until reaching the next separator or\nclosing bracket.",111,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq_to_before_end","","Parse a sequence, not including the closing delimiter. The function\nf must consume tokens until reaching the next separator or\nclosing bracket.",111,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_unspanned_seq","","Parse a sequence, including the closing delimiter. The function\nf must consume tokens until reaching the next separator or\nclosing bracket.",111,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_enum_variant_seq","","Parse a sequence parameter of enum variant. For consistency purposes,\nthese should not be empty.",111,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"parse_seq","","",111,{"inputs":[{"name":"parser"},{"name":"token"},{"name":"token"},{"name":"seqsep"},{"name":"f"}],"output":{"name":"result"}}],[11,"bump","","Advance the parser by one token",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"bump_and_get","","Advance the parser by one token and return the bumped token.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"replace_token","","EFFECT: replace the current token and span with the given one",111,null],[11,"buffer_length","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"isize"}}],[11,"look_ahead","","",111,{"inputs":[{"name":"parser"},{"name":"usize"},{"name":"f"}],"output":{"name":"r"}}],[11,"fatal","","",111,{"inputs":[{"name":"parser"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_fatal","","",111,{"inputs":[{"name":"parser"},{"name":"span"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_fatal_help","","",111,{"inputs":[{"name":"parser"},{"name":"span"},{"name":"str"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_note","","",111,null],[11,"span_help","","",111,null],[11,"span_suggestion","","",111,null],[11,"fileline_help","","",111,null],[11,"bug","","",111,null],[11,"warn","","",111,null],[11,"span_warn","","",111,null],[11,"span_err","","",111,null],[11,"span_bug","","",111,null],[11,"abort_if_errors","","",111,null],[11,"id_to_interned_str","","",111,{"inputs":[{"name":"parser"},{"name":"ident"}],"output":{"name":"internedstring"}}],[11,"token_is_bare_fn_keyword","","Is the current token one of the keywords that signals a bare function\ntype?",111,{"inputs":[{"name":"parser"}],"output":{"name":"bool"}}],[11,"get_lifetime","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"ident"}}],[11,"parse_for_in_type","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ty_path","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ty_bare_fn","","parse a TyBareFn type:",111,{"inputs":[{"name":"parser"},{"name":"vec"}],"output":{"name":"result"}}],[11,"parse_obsolete_closure_kind","","Parses an obsolete closure kind (`&:`, `&mut:`, or `:`).",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_unsafety","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_trait_items","","Parse the items in a trait declaration",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_mt","","Parse a possibly mutable type",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ret_ty","","Parse optional return type [ -> TY ] in function decl",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ty_sum","","Parse a type in a context where `T1+T2` is allowed.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ty_nopanic","","Parse a type.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_borrowed_pointee","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_ptr","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"is_named_argument","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"bool"}}],[11,"parse_arg_general","","This version of parse arg doesn't necessarily require\nidentifier names.",111,{"inputs":[{"name":"parser"},{"name":"bool"}],"output":{"name":"result"}}],[11,"parse_arg","","Parse a single function argument",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_fn_block_arg","","Parse an argument in a lambda header e.g. |arg, arg|",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"maybe_parse_fixed_length_of_vec","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"lit_from_token","","Matches token_lit = LIT_INTEGER | ...",111,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"parse_lit","","Matches lit = true | false | token_lit",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_literal_maybe_minus","","matches '-' lit | lit",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_qualified_path","","",111,{"inputs":[{"name":"parser"},{"name":"pathparsingmode"}],"output":{"name":"result"}}],[11,"parse_path","","Parses a path and optional type parameter bounds, depending on the\nmode. The `mode` parameter determines whether lifetimes, types, and/or\nbounds are permitted and whether `::` must precede type parameter\ngroups.",111,{"inputs":[{"name":"parser"},{"name":"pathparsingmode"}],"output":{"name":"result"}}],[11,"parse_path_segments_without_colons","","Examples:\n- `a::b<T,U>::c<V,W>`\n- `a::b<T,U>::c(V) -> W`\n- `a::b<T,U>::c(V)`",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_path_segments_with_colons","","Examples:\n- `a::b::<T,U>::c`",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_path_segments_without_types","","Examples:\n- `a::b::c`",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_opt_lifetime","","parses 0 or 1 lifetime",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_lifetime","","Parses a single lifetime\nMatches lifetime = LIFETIME",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_lifetime_defs","","Parses `lifetime_defs = [ lifetime_defs { ',' lifetime_defs } ]` where `lifetime_def  =\nlifetime [':' lifetimes]`",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_lifetimes","","matches lifetimes = ( lifetime ) | ( lifetime , lifetimes ) actually, it matches the empty\none too, but putting that in there messes up the grammar....",111,{"inputs":[{"name":"parser"},{"name":"token"}],"output":{"name":"result"}}],[11,"parse_mutability","","Parse mutability declaration (mut/const/imm)",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_field","","Parse ident COLON expr",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"mk_expr","","",111,{"inputs":[{"name":"parser"},{"name":"bytepos"},{"name":"bytepos"},{"name":"expr_"}],"output":{"name":"p"}}],[11,"mk_unary","","",111,{"inputs":[{"name":"parser"},{"name":"unop"},{"name":"p"}],"output":{"name":"expr_"}}],[11,"mk_binary","","",111,{"inputs":[{"name":"parser"},{"name":"spanned"},{"name":"p"},{"name":"p"}],"output":{"name":"expr_"}}],[11,"mk_call","","",111,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"vec"}],"output":{"name":"expr_"}}],[11,"mk_index","","",111,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"p"}],"output":{"name":"expr_"}}],[11,"mk_range","","",111,{"inputs":[{"name":"parser"},{"name":"option"},{"name":"option"}],"output":{"name":"expr_"}}],[11,"mk_field","","",111,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"spanned"}],"output":{"name":"expr_"}}],[11,"mk_tup_field","","",111,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"spanned"}],"output":{"name":"expr_"}}],[11,"mk_assign_op","","",111,{"inputs":[{"name":"parser"},{"name":"spanned"},{"name":"p"},{"name":"p"}],"output":{"name":"expr_"}}],[11,"mk_mac_expr","","",111,{"inputs":[{"name":"parser"},{"name":"bytepos"},{"name":"bytepos"},{"name":"mac_"}],"output":{"name":"p"}}],[11,"mk_lit_u32","","",111,{"inputs":[{"name":"parser"},{"name":"u32"}],"output":{"name":"p"}}],[11,"parse_bottom_expr","","At the bottom (top?) of the precedence hierarchy,\nparse things like parenthesized exprs,\nmacros, return, etc.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_block_expr","","Parse a block or unsafe block",111,{"inputs":[{"name":"parser"},{"name":"bytepos"},{"name":"blockcheckmode"}],"output":{"name":"result"}}],[11,"parse_dot_or_call_expr","","parse a.b or a(13) or a[4] or just a",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_dot_or_call_expr_with","","",111,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"result"}}],[11,"check_unknown_macro_variable","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_sep_and_kleene_op","","Parse an optional separator followed by a Kleene-style\nrepetition token (+ or *).",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_token_tree","","parse a single token tree from the input.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_all_token_trees","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_prefix_expr","","Parse a prefix-operator expr",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_binops","","Parse an expression of binops",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_more_binops","","Parse an expression of binops of at least min_prec precedence",111,{"inputs":[{"name":"parser"},{"name":"p"},{"name":"usize"}],"output":{"name":"result"}}],[11,"parse_assign_expr","","Parse an assignment expression....\nactually, this seems to be the main entry point for\nparsing an arbitrary expression.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_assign_expr_with","","",111,{"inputs":[{"name":"parser"},{"name":"p"}],"output":{"name":"result"}}],[11,"parse_if_expr","","Parse an 'if' or 'if let' expression ('if' token already eaten)",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_if_let_expr","","Parse an 'if let' expression ('if' token already eaten)",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_lambda_expr","","",111,{"inputs":[{"name":"parser"},{"name":"captureclause"}],"output":{"name":"result"}}],[11,"parse_else_expr","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_for_expr","","Parse a 'for' .. 'in' expression ('for' token already eaten)",111,{"inputs":[{"name":"parser"},{"name":"option"}],"output":{"name":"result"}}],[11,"parse_while_expr","","Parse a 'while' or 'while let' expression ('while' token already eaten)",111,{"inputs":[{"name":"parser"},{"name":"option"}],"output":{"name":"result"}}],[11,"parse_while_let_expr","","Parse a 'while let' expression ('while' token already eaten)",111,{"inputs":[{"name":"parser"},{"name":"option"}],"output":{"name":"result"}}],[11,"parse_loop_expr","","",111,{"inputs":[{"name":"parser"},{"name":"option"}],"output":{"name":"result"}}],[11,"parse_arm_nopanic","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_expr_nopanic","","Parse an expression",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_expr_res","","Parse an expression, subject to the given restrictions",111,{"inputs":[{"name":"parser"},{"name":"restrictions"}],"output":{"name":"result"}}],[11,"parse_pat_nopanic","","Parse a pattern.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_stmt_nopanic","","Parse a statement. may include decl.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_block","","Parse a block. No inner attrs are allowed.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_generics","","Parse a set of optional generic type parameter declarations. Where\nclauses are not parsed here, and must be added later via\n`parse_where_clause()`.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_where_clause","","Parses an optional `where` clause and places it in `generics`.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_fn_decl","","Parse the argument list and result type of a function declaration",111,{"inputs":[{"name":"parser"},{"name":"bool"}],"output":{"name":"result"}}],[11,"parse_impl_item","","Parse an impl item.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_record_struct_body","","",111,{"inputs":[{"name":"parser"},{"name":"ident"}],"output":{"name":"result"}}],[11,"parse_tuple_struct_body","","",111,{"inputs":[{"name":"parser"},{"name":"ident"},{"name":"generics"}],"output":{"name":"result"}}],[11,"parse_single_struct_field","","Parse a structure field declaration",111,{"inputs":[{"name":"parser"},{"name":"visibility"},{"name":"vec"}],"output":{"name":"result"}}],[11,"parse_item_nopanic","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_crate_mod","","Parses a source module as a crate. This is the main\nentry point for the parser.",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_optional_str","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"parse_str","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"result"}}],[11,"eq","syntax::parse::lexer::comments","",112,{"inputs":[{"name":"commentstyle"},{"name":"commentstyle"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"commentstyle"},{"name":"commentstyle"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"commentstyle"}],"output":{"name":"commentstyle"}}],[11,"clone","","",113,{"inputs":[{"name":"comment"}],"output":{"name":"comment"}}],[11,"clone","","",114,{"inputs":[{"name":"literal"}],"output":{"name":"literal"}}],[11,"fmt","syntax::parse::lexer","",115,{"inputs":[{"name":"tokenandspan"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",115,{"inputs":[{"name":"tokenandspan"},{"name":"tokenandspan"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"tokenandspan"},{"name":"tokenandspan"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"tokenandspan"}],"output":{"name":"tokenandspan"}}],[11,"is_eof","","",116,{"inputs":[{"name":"stringreader"}],"output":{"name":"bool"}}],[11,"next_token","","Return the next token. EFFECT: advances the string_reader.",116,{"inputs":[{"name":"stringreader"}],"output":{"name":"tokenandspan"}}],[11,"fatal","","",116,null],[11,"err","","",116,null],[11,"peek","","",116,{"inputs":[{"name":"stringreader"}],"output":{"name":"tokenandspan"}}],[11,"is_eof","syntax::ext::tt::transcribe","",117,{"inputs":[{"name":"ttreader"}],"output":{"name":"bool"}}],[11,"next_token","","",117,{"inputs":[{"name":"ttreader"}],"output":{"name":"tokenandspan"}}],[11,"fatal","","",117,null],[11,"err","","",117,null],[11,"peek","","",117,{"inputs":[{"name":"ttreader"}],"output":{"name":"tokenandspan"}}],[11,"new_raw","syntax::parse::lexer","For comments.rs, which hackily pokes into pos and curr",116,{"inputs":[{"name":"stringreader"},{"name":"spanhandler"},{"name":"rc"}],"output":{"name":"stringreader"}}],[11,"new","","",116,{"inputs":[{"name":"stringreader"},{"name":"spanhandler"},{"name":"rc"}],"output":{"name":"stringreader"}}],[11,"curr_is","","",116,{"inputs":[{"name":"stringreader"},{"name":"char"}],"output":{"name":"bool"}}],[11,"fatal_span","","Report a fatal lexical error with a given span.",116,null],[11,"err_span","","Report a lexical error with a given span.",116,null],[11,"with_str_from","","Calls `f` with a string slice of the source text spanning from `start`\nup to but excluding `self.last_pos`, meaning the slice does not include\nthe character `self.curr`.",116,{"inputs":[{"name":"stringreader"},{"name":"bytepos"},{"name":"f"}],"output":{"name":"t"}}],[11,"name_from","","Create a Name from a given offset to the current offset, each\nadjusted 1 towards each other (assumes that on either side there is a\nsingle-byte delimiter).",116,{"inputs":[{"name":"stringreader"},{"name":"bytepos"}],"output":{"name":"name"}}],[11,"name_from_to","","As name_from, with an explicit endpoint.",116,{"inputs":[{"name":"stringreader"},{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"name"}}],[11,"bump","","Advance the StringReader by one character. If a newline is\ndiscovered, add it to the FileMap's list of line start offsets.",116,null],[11,"nextch","","",116,{"inputs":[{"name":"stringreader"}],"output":{"name":"option"}}],[11,"nextch_is","","",116,{"inputs":[{"name":"stringreader"},{"name":"char"}],"output":{"name":"bool"}}],[11,"nextnextch","","",116,{"inputs":[{"name":"stringreader"}],"output":{"name":"option"}}],[11,"nextnextch_is","","",116,{"inputs":[{"name":"stringreader"},{"name":"char"}],"output":{"name":"bool"}}],[11,"fmt","syntax::parse::token","",118,{"inputs":[{"name":"binoptoken"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",118,null],[11,"eq","","",118,{"inputs":[{"name":"binoptoken"},{"name":"binoptoken"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"binoptoken"},{"name":"binoptoken"}],"output":{"name":"bool"}}],[11,"decode","","",118,{"inputs":[{"name":"binoptoken"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",118,{"inputs":[{"name":"binoptoken"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"binoptoken"}],"output":{"name":"binoptoken"}}],[11,"fmt","","",119,{"inputs":[{"name":"delimtoken"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",119,null],[11,"eq","","",119,{"inputs":[{"name":"delimtoken"},{"name":"delimtoken"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"delimtoken"},{"name":"delimtoken"}],"output":{"name":"bool"}}],[11,"decode","","",119,{"inputs":[{"name":"delimtoken"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",119,{"inputs":[{"name":"delimtoken"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"delimtoken"}],"output":{"name":"delimtoken"}}],[11,"fmt","","",120,{"inputs":[{"name":"identstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",120,null],[11,"eq","","",120,{"inputs":[{"name":"identstyle"},{"name":"identstyle"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"identstyle"},{"name":"identstyle"}],"output":{"name":"bool"}}],[11,"decode","","",120,{"inputs":[{"name":"identstyle"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",120,{"inputs":[{"name":"identstyle"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"identstyle"}],"output":{"name":"identstyle"}}],[11,"fmt","","",121,{"inputs":[{"name":"specialmacrovar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",121,null],[11,"eq","","",121,{"inputs":[{"name":"specialmacrovar"},{"name":"specialmacrovar"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"specialmacrovar"},{"name":"specialmacrovar"}],"output":{"name":"bool"}}],[11,"decode","","",121,{"inputs":[{"name":"specialmacrovar"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",121,{"inputs":[{"name":"specialmacrovar"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"specialmacrovar"}],"output":{"name":"specialmacrovar"}}],[11,"as_str","","",121,{"inputs":[{"name":"specialmacrovar"}],"output":{"name":"str"}}],[11,"fmt","","",122,{"inputs":[{"name":"lit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",122,null],[11,"eq","","",122,{"inputs":[{"name":"lit"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"lit"},{"name":"lit"}],"output":{"name":"bool"}}],[11,"decode","","",122,{"inputs":[{"name":"lit"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",122,{"inputs":[{"name":"lit"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"lit"}],"output":{"name":"lit"}}],[11,"short_name","","",122,{"inputs":[{"name":"lit"}],"output":{"name":"str"}}],[11,"fmt","","",123,{"inputs":[{"name":"token"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",123,null],[11,"eq","","",123,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"decode","","",123,{"inputs":[{"name":"token"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",123,{"inputs":[{"name":"token"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"is_like_gt","","Returns `true` if the token starts with '>'.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"can_begin_expr","","Returns `true` if the token can appear at the start of an expression.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_lit","","Returns `true` if the token is any literal",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_ident","","Returns `true` if the token is an identifier.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_path","","Returns `true` if the token is an interpolated path.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_plain_ident","","Returns `true` if the token is a path that is not followed by a `::`\ntoken.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_lifetime","","Returns `true` if the token is a lifetime.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_mutability","","Returns `true` if the token is either the `mut` or `const` keyword.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"to_binop","","Maps a token to its corresponding binary operator.",123,{"inputs":[{"name":"token"}],"output":{"name":"option"}}],[11,"is_keyword","","Returns `true` if the token is a given keyword, `kw`.",123,{"inputs":[{"name":"token"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"is_keyword_allow_following_colon","","",123,{"inputs":[{"name":"token"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"is_any_keyword","","Returns `true` if the token is either a special identifier, or a strict\nor reserved keyword.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_strict_keyword","","Returns `true` if the token may not appear as an identifier.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_reserved_keyword","","Returns `true` if the token is a keyword that has been reserved for\npossible future use.",123,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"mtwt_eq","","Hygienic identifier equality comparison.",123,{"inputs":[{"name":"token"},{"name":"token"}],"output":{"name":"bool"}}],[11,"hash","","",124,null],[11,"eq","","",124,{"inputs":[{"name":"nonterminal"},{"name":"nonterminal"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"nonterminal"},{"name":"nonterminal"}],"output":{"name":"bool"}}],[11,"decode","","",124,{"inputs":[{"name":"nonterminal"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",124,{"inputs":[{"name":"nonterminal"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"nonterminal"}],"output":{"name":"nonterminal"}}],[11,"fmt","","",124,{"inputs":[{"name":"nonterminal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","syntax::parse::token::keywords","",125,{"inputs":[{"name":"keyword"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"keyword"},{"name":"keyword"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"keyword"}],"output":{"name":"keyword"}}],[11,"to_name","","",125,{"inputs":[{"name":"keyword"}],"output":{"name":"name"}}],[11,"cmp","syntax::parse::token","",126,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",126,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"option"}}],[11,"lt","","",126,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"le","","",126,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"gt","","",126,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"ge","","",126,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"hash","","",126,null],[11,"eq","","",126,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"internedstring"},{"name":"internedstring"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"internedstring"}],"output":{"name":"internedstring"}}],[11,"new","","",126,{"inputs":[{"name":"internedstring"},{"name":"str"}],"output":{"name":"internedstring"}}],[11,"deref","","",126,{"inputs":[{"name":"internedstring"}],"output":{"name":"str"}}],[11,"fmt","","",126,{"inputs":[{"name":"internedstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"internedstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",126,{"inputs":[{"name":"internedstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"internedstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"decode","","",126,{"inputs":[{"name":"internedstring"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",126,{"inputs":[{"name":"internedstring"},{"name":"s"}],"output":{"name":"result"}}],[11,"parse_outer_attributes","syntax::parse::parser","Parse attributes that appear before an item",111,{"inputs":[{"name":"parser"}],"output":{"name":"vec"}}],[11,"parse_attribute","","Matches `attribute = # ! [ meta_item ]`",111,{"inputs":[{"name":"parser"},{"name":"bool"}],"output":{"name":"spanned"}}],[11,"parse_inner_attributes","","Parse attributes that appear after the opening of an item. These should\nbe preceded by an exclamation mark, but we accept and warn about one\nterminated by a semicolon.\nmatches inner_attrs*",111,{"inputs":[{"name":"parser"}],"output":{"name":"vec"}}],[11,"parse_meta_item","","matches meta_item = IDENT\n| IDENT = lit\n| IDENT meta_seq",111,{"inputs":[{"name":"parser"}],"output":{"name":"p"}}],[11,"parse_meta_seq","","matches meta_seq = ( COMMASEP(meta_item) )",111,{"inputs":[{"name":"parser"}],"output":{"name":"vec"}}],[11,"parse_optional_meta","","",111,{"inputs":[{"name":"parser"}],"output":{"name":"vec"}}],[11,"hash","syntax::parse::obsolete","",127,null],[11,"eq","","",127,{"inputs":[{"name":"obsoletesyntax"},{"name":"obsoletesyntax"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"obsoletesyntax"},{"name":"obsoletesyntax"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"obsoletesyntax"}],"output":{"name":"obsoletesyntax"}}],[11,"obsolete","syntax::parse::parser","Reports an obsolete syntax non-fatal error.",111,null],[11,"obsolete_expr","","Reports an obsolete syntax non-fatal error, and returns\na placeholder expression",111,{"inputs":[{"name":"parser"},{"name":"span"},{"name":"obsoletesyntax"}],"output":{"name":"p"}}],[11,"report","","",111,null],[11,"is_obsolete_ident","","",111,{"inputs":[{"name":"parser"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eat_obsolete_ident","","",111,{"inputs":[{"name":"parser"},{"name":"str"}],"output":{"name":"bool"}}],[11,"next_node_id","syntax::parse","",128,{"inputs":[{"name":"parsesess"}],"output":{"name":"u32"}}],[11,"reserve_node_ids","","",128,{"inputs":[{"name":"parsesess"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"clone","syntax::ext::base","",129,{"inputs":[{"name":"annotatable"}],"output":{"name":"annotatable"}}],[11,"fmt","","",129,{"inputs":[{"name":"annotatable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"attrs","","",129,null],[11,"fold_attrs","","",129,{"inputs":[{"name":"annotatable"},{"name":"vec"}],"output":{"name":"annotatable"}}],[11,"expect_item","","",129,{"inputs":[{"name":"annotatable"}],"output":{"name":"p"}}],[11,"map_item_or","","",129,{"inputs":[{"name":"annotatable"},{"name":"f"},{"name":"g"}],"output":{"name":"annotatable"}}],[11,"expect_trait_item","","",129,{"inputs":[{"name":"annotatable"}],"output":{"name":"p"}}],[11,"expect_impl_item","","",129,{"inputs":[{"name":"annotatable"}],"output":{"name":"p"}}],[11,"default","","",130,{"inputs":[{"name":"maceager"}],"output":{"name":"maceager"}}],[11,"expr","","",130,{"inputs":[{"name":"maceager"},{"name":"p"}],"output":{"name":"box"}}],[11,"pat","","",130,{"inputs":[{"name":"maceager"},{"name":"p"}],"output":{"name":"box"}}],[11,"items","","",130,{"inputs":[{"name":"maceager"},{"name":"smallvector"}],"output":{"name":"box"}}],[11,"impl_items","","",130,{"inputs":[{"name":"maceager"},{"name":"smallvector"}],"output":{"name":"box"}}],[11,"stmts","","",130,{"inputs":[{"name":"maceager"},{"name":"smallvector"}],"output":{"name":"box"}}],[11,"make_expr","","",130,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"make_items","","",130,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"make_impl_items","","",130,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"make_stmts","","",130,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"make_pat","","",130,{"inputs":[{"name":"maceager"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"dummyresult"}],"output":{"name":"dummyresult"}}],[11,"any","","Create a default MacResult that can be anything.",131,{"inputs":[{"name":"dummyresult"},{"name":"span"}],"output":{"name":"box"}}],[11,"expr","","Create a default MacResult that can only be an expression.",131,{"inputs":[{"name":"dummyresult"},{"name":"span"}],"output":{"name":"box"}}],[11,"raw_expr","","A plain dummy expression.",131,{"inputs":[{"name":"dummyresult"},{"name":"span"}],"output":{"name":"p"}}],[11,"raw_pat","","A plain dummy pattern.",131,{"inputs":[{"name":"dummyresult"},{"name":"span"}],"output":{"name":"pat"}}],[11,"make_expr","","",131,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"make_pat","","",131,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"make_items","","",131,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"make_impl_items","","",131,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"make_stmts","","",131,{"inputs":[{"name":"dummyresult"}],"output":{"name":"option"}}],[11,"new","","",132,{"inputs":[{"name":"blockinfo"}],"output":{"name":"blockinfo"}}],[11,"new","","",133,{"inputs":[{"name":"extctxt"},{"name":"parsesess"},{"name":"vec"},{"name":"expansionconfig"}],"output":{"name":"extctxt"}}],[11,"expand_expr","","",133,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"expander","","Returns a `Folder` for deeply expanding all macros in a AST node.",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"macroexpander"}}],[11,"new_parser_from_tts","","",133,null],[11,"codemap","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"codemap"}}],[11,"parse_sess","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"parsesess"}}],[11,"cfg","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"call_site","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"span"}}],[11,"backtrace","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"expnid"}}],[11,"original_span","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"span"}}],[11,"original_span_in_file","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"span"}}],[11,"mod_push","","",133,null],[11,"mod_pop","","",133,null],[11,"mod_path","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"bt_push","","",133,null],[11,"bt_pop","","",133,null],[11,"insert_macro","","",133,null],[11,"span_fatal","","Emit `msg` attached to `sp`, and stop compilation immediately.",133,null],[11,"span_err","","Emit `msg` attached to `sp`, without immediately stopping\ncompilation.",133,null],[11,"span_warn","","",133,null],[11,"span_unimpl","","",133,null],[11,"span_bug","","",133,null],[11,"span_note","","",133,null],[11,"span_help","","",133,null],[11,"fileline_help","","",133,null],[11,"bug","","",133,null],[11,"trace_macros","","",133,{"inputs":[{"name":"extctxt"}],"output":{"name":"bool"}}],[11,"set_trace_macros","","",133,null],[11,"ident_of","","",133,{"inputs":[{"name":"extctxt"},{"name":"str"}],"output":{"name":"ident"}}],[11,"ident_of_std","","",133,{"inputs":[{"name":"extctxt"},{"name":"str"}],"output":{"name":"ident"}}],[11,"name_of","","",133,{"inputs":[{"name":"extctxt"},{"name":"str"}],"output":{"name":"name"}}],[11,"push_frame","","",134,null],[11,"pop_frame","","",134,null],[11,"find","","",134,{"inputs":[{"name":"syntaxenv"},{"name":"name"}],"output":{"name":"option"}}],[11,"insert","","",134,null],[11,"info","","",134,{"inputs":[{"name":"syntaxenv"}],"output":{"name":"blockinfo"}}],[11,"path","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"path"}}],[11,"path_ident","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"}],"output":{"name":"path"}}],[11,"path_global","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"path"}}],[11,"path_all","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"bool"},{"name":"vec"},{"name":"vec"},{"name":"vec"},{"name":"vec"}],"output":{"name":"path"}}],[11,"qpath","","Constructs a qualified path.",133,null],[11,"qpath_all","","Constructs a qualified path.",133,null],[11,"ty_mt","","",133,{"inputs":[{"name":"extctxt"},{"name":"p"},{"name":"mutability"}],"output":{"name":"mutty"}}],[11,"ty","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ty_"}],"output":{"name":"p"}}],[11,"ty_path","","",133,{"inputs":[{"name":"extctxt"},{"name":"path"}],"output":{"name":"p"}}],[11,"ty_sum","","",133,{"inputs":[{"name":"extctxt"},{"name":"path"},{"name":"ownedslice"}],"output":{"name":"p"}}],[11,"ty_ident","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"}],"output":{"name":"p"}}],[11,"ty_rptr","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"option"},{"name":"mutability"}],"output":{"name":"p"}}],[11,"ty_ptr","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"mutability"}],"output":{"name":"p"}}],[11,"ty_option","","",133,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"ty_field_imm","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"}],"output":{"name":"typefield"}}],[11,"ty_infer","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"typaram","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"ownedslice"},{"name":"option"}],"output":{"name":"typaram"}}],[11,"ty_vars","","",133,{"inputs":[{"name":"extctxt"},{"name":"ownedslice"}],"output":{"name":"vec"}}],[11,"ty_vars_global","","",133,{"inputs":[{"name":"extctxt"},{"name":"ownedslice"}],"output":{"name":"vec"}}],[11,"trait_ref","","",133,{"inputs":[{"name":"extctxt"},{"name":"path"}],"output":{"name":"traitref"}}],[11,"poly_trait_ref","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"path"}],"output":{"name":"polytraitref"}}],[11,"typarambound","","",133,{"inputs":[{"name":"extctxt"},{"name":"path"}],"output":{"name":"typarambound"}}],[11,"lifetime","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"name"}],"output":{"name":"lifetime"}}],[11,"lifetime_def","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"name"},{"name":"vec"}],"output":{"name":"lifetimedef"}}],[11,"stmt_expr","","",133,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"stmt_let","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"bool"},{"name":"ident"},{"name":"p"}],"output":{"name":"p"}}],[11,"stmt_let_typed","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"bool"},{"name":"ident"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"block","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"option"}],"output":{"name":"p"}}],[11,"stmt_item","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"block_expr","","",133,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"block_all","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"option"}],"output":{"name":"p"}}],[11,"expr","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"expr_"}],"output":{"name":"p"}}],[11,"expr_path","","",133,{"inputs":[{"name":"extctxt"},{"name":"path"}],"output":{"name":"p"}}],[11,"expr_qpath","","Constructs a QPath expression.",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"qself"},{"name":"path"}],"output":{"name":"p"}}],[11,"expr_ident","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"}],"output":{"name":"p"}}],[11,"expr_self","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_binary","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"binop_"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_deref","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_unary","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"unop"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_field_access","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"ident"}],"output":{"name":"p"}}],[11,"expr_tup_field_access","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"usize"}],"output":{"name":"p"}}],[11,"expr_addr_of","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_mut_addr_of","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_call","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_call_ident","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_call_global","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_method_call","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"ident"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_block","","",133,{"inputs":[{"name":"extctxt"},{"name":"p"}],"output":{"name":"p"}}],[11,"field_imm","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"}],"output":{"name":"field"}}],[11,"expr_struct","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"path"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_struct_ident","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_lit","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"lit_"}],"output":{"name":"p"}}],[11,"expr_usize","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"usize"}],"output":{"name":"p"}}],[11,"expr_isize","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"isize"}],"output":{"name":"p"}}],[11,"expr_u32","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"u32"}],"output":{"name":"p"}}],[11,"expr_u8","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"u8"}],"output":{"name":"p"}}],[11,"expr_bool","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"bool"}],"output":{"name":"p"}}],[11,"expr_vec","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_vec_ng","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_vec_slice","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_str","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"}],"output":{"name":"p"}}],[11,"expr_cast","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_some","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_none","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_break","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_tuple","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_fail","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"}],"output":{"name":"p"}}],[11,"expr_unreachable","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"expr_ok","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_err","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"expr_try","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"pat","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"pat_"}],"output":{"name":"p"}}],[11,"pat_wild","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"pat_lit","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"pat_ident","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"}],"output":{"name":"p"}}],[11,"pat_ident_binding_mode","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"bindingmode"}],"output":{"name":"p"}}],[11,"pat_enum","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"path"},{"name":"vec"}],"output":{"name":"p"}}],[11,"pat_struct","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"path"},{"name":"vec"}],"output":{"name":"p"}}],[11,"pat_tuple","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"pat_some","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"pat_none","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"p"}}],[11,"pat_ok","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"pat_err","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"arm","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"p"}],"output":{"name":"arm"}}],[11,"arm_unreachable","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"}],"output":{"name":"arm"}}],[11,"expr_match","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"vec"}],"output":{"name":"p"}}],[11,"expr_if","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"p"},{"name":"option"}],"output":{"name":"p"}}],[11,"expr_loop","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda_fn_decl","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda0","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda1","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"ident"}],"output":{"name":"p"}}],[11,"lambda_expr","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda_expr_0","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"p"}}],[11,"lambda_expr_1","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"},{"name":"ident"}],"output":{"name":"p"}}],[11,"lambda_stmts","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"vec"}],"output":{"name":"p"}}],[11,"lambda_stmts_0","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"}],"output":{"name":"p"}}],[11,"lambda_stmts_1","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"vec"},{"name":"ident"}],"output":{"name":"p"}}],[11,"arg","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"}],"output":{"name":"arg"}}],[11,"fn_decl","","",133,{"inputs":[{"name":"extctxt"},{"name":"vec"},{"name":"p"}],"output":{"name":"p"}}],[11,"item","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"},{"name":"item_"}],"output":{"name":"p"}}],[11,"item_fn_poly","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"},{"name":"p"},{"name":"generics"},{"name":"p"}],"output":{"name":"p"}}],[11,"item_fn","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"variant","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"vec"}],"output":{"name":"spanned"}}],[11,"item_enum_poly","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"enumdef"},{"name":"generics"}],"output":{"name":"p"}}],[11,"item_enum","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"enumdef"}],"output":{"name":"p"}}],[11,"item_struct","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"structdef"}],"output":{"name":"p"}}],[11,"item_struct_poly","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"structdef"},{"name":"generics"}],"output":{"name":"p"}}],[11,"item_mod","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"span"},{"name":"ident"},{"name":"vec"},{"name":"vec"}],"output":{"name":"p"}}],[11,"item_static","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"},{"name":"mutability"},{"name":"p"}],"output":{"name":"p"}}],[11,"item_const","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"},{"name":"p"}],"output":{"name":"p"}}],[11,"item_ty_poly","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"},{"name":"generics"}],"output":{"name":"p"}}],[11,"item_ty","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"p"}],"output":{"name":"p"}}],[11,"attribute","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"p"}],"output":{"name":"spanned"}}],[11,"meta_word","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"}],"output":{"name":"p"}}],[11,"meta_list","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"},{"name":"vec"}],"output":{"name":"p"}}],[11,"meta_name_value","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"internedstring"},{"name":"lit_"}],"output":{"name":"p"}}],[11,"item_use","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"visibility"},{"name":"p"}],"output":{"name":"p"}}],[11,"item_use_simple","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"visibility"},{"name":"path"}],"output":{"name":"p"}}],[11,"item_use_simple_","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"visibility"},{"name":"ident"},{"name":"path"}],"output":{"name":"p"}}],[11,"item_use_list","","",133,null],[11,"item_use_glob","","",133,{"inputs":[{"name":"extctxt"},{"name":"span"},{"name":"visibility"},{"name":"vec"}],"output":{"name":"p"}}],[11,"clone","syntax::ext::deriving::partial_ord","",135,{"inputs":[{"name":"orderingop"}],"output":{"name":"orderingop"}}],[11,"eq","syntax::ext::deriving::generic::ty","",136,{"inputs":[{"name":"ptrty"},{"name":"ptrty"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"ptrty"},{"name":"ptrty"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"ptrty"}],"output":{"name":"ptrty"}}],[11,"eq","","",137,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"new","","",137,{"inputs":[{"name":"path"},{"name":"vec"}],"output":{"name":"path"}}],[11,"new_local","","",137,{"inputs":[{"name":"path"},{"name":"str"}],"output":{"name":"path"}}],[11,"new_","","",137,{"inputs":[{"name":"path"},{"name":"vec"},{"name":"option"},{"name":"vec"},{"name":"bool"}],"output":{"name":"path"}}],[11,"to_ty","","",137,{"inputs":[{"name":"path"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"p"}}],[11,"to_path","","",137,{"inputs":[{"name":"path"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"path"}}],[11,"eq","","",138,{"inputs":[{"name":"ty"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"ty"},{"name":"ty"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"ty"}],"output":{"name":"ty"}}],[11,"to_ty","","",138,{"inputs":[{"name":"ty"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"p"}}],[11,"to_path","","",138,{"inputs":[{"name":"ty"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"path"}}],[11,"clone","","",139,{"inputs":[{"name":"lifetimebounds"}],"output":{"name":"lifetimebounds"}}],[11,"empty","","",139,{"inputs":[{"name":"lifetimebounds"}],"output":{"name":"lifetimebounds"}}],[11,"to_generics","","",139,{"inputs":[{"name":"lifetimebounds"},{"name":"extctxt"},{"name":"span"},{"name":"ident"},{"name":"generics"}],"output":{"name":"generics"}}],[11,"expand","syntax::ext::deriving::generic","",140,null],[11,"eq","","",141,{"inputs":[{"name":"structtype"},{"name":"structtype"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"structtype"},{"name":"structtype"}],"output":{"name":"bool"}}],[11,"clone","syntax::ext::expand","",142,{"inputs":[{"name":"patidentfinder"}],"output":{"name":"patidentfinder"}}],[11,"visit_pat","","",142,null],[11,"fold_ident","","",143,{"inputs":[{"name":"identrenamer"},{"name":"ident"}],"output":{"name":"ident"}}],[11,"fold_mac","","",143,{"inputs":[{"name":"identrenamer"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"fold_pat","","",144,{"inputs":[{"name":"patidentrenamer"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_mac","","",144,{"inputs":[{"name":"patidentrenamer"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"new","","",145,{"inputs":[{"name":"macroexpander"},{"name":"extctxt"}],"output":{"name":"macroexpander"}}],[11,"fold_expr","","",145,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_pat","","",145,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_item","","",145,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_item_underscore","","",145,{"inputs":[{"name":"macroexpander"},{"name":"item_"}],"output":{"name":"item_"}}],[11,"fold_stmt","","",145,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_block","","",145,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_arm","","",145,{"inputs":[{"name":"macroexpander"},{"name":"arm"}],"output":{"name":"arm"}}],[11,"fold_trait_item","","",145,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_impl_item","","",145,{"inputs":[{"name":"macroexpander"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"new_span","","",145,{"inputs":[{"name":"macroexpander"},{"name":"span"}],"output":{"name":"span"}}],[11,"default","","",146,{"inputs":[{"name":"expansionconfig"},{"name":"string"}],"output":{"name":"expansionconfig"}}],[11,"enable_quotes","","",146,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_asm","","",146,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_log_syntax","","",146,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_concat_idents","","",146,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_trace_macros","","",146,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_allow_internal_unstable","","",146,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"enable_custom_derive","","",146,{"inputs":[{"name":"expansionconfig"}],"output":{"name":"bool"}}],[11,"fold_ident","","",147,{"inputs":[{"name":"marker"},{"name":"ident"}],"output":{"name":"ident"}}],[11,"fold_mac","","",147,{"inputs":[{"name":"marker"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"visit_mac","","",148,null],[11,"eq","syntax::ext::format","",149,{"inputs":[{"name":"argumenttype"},{"name":"argumenttype"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"argumenttype"},{"name":"argumenttype"}],"output":{"name":"bool"}}],[11,"clone","syntax::ext::mtwt","",150,{"inputs":[{"name":"syntaxcontext_"}],"output":{"name":"syntaxcontext_"}}],[11,"fmt","","",150,{"inputs":[{"name":"syntaxcontext_"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",150,null],[11,"decode","","",150,{"inputs":[{"name":"syntaxcontext_"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",150,{"inputs":[{"name":"syntaxcontext_"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"syntaxcontext_"},{"name":"syntaxcontext_"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"syntaxcontext_"},{"name":"syntaxcontext_"}],"output":{"name":"bool"}}],[11,"to_tokens","syntax::ast","",55,{"inputs":[{"name":"tokentree"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","collections::vec","",151,{"inputs":[{"name":"vec"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::codemap","",152,{"inputs":[{"name":"spanned"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","core::option","",153,{"inputs":[{"name":"option"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",0,{"inputs":[{"name":"ident"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",12,{"inputs":[{"name":"path"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",72,{"inputs":[{"name":"ty"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",29,{"inputs":[{"name":"block"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",154,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",154,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",154,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",154,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",154,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",154,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ast","",43,{"inputs":[{"name":"arm"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::ptr","",154,{"inputs":[{"name":"p"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","syntax::codemap","",152,{"inputs":[{"name":"spanned"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"to_tokens","","",152,{"inputs":[{"name":"spanned"},{"name":"extctxt"}],"output":{"name":"vec"}}],[11,"parse_item","syntax::ext::base","",133,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_stmt","","",133,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_expr","","",133,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"p"}}],[11,"parse_tts","","",133,{"inputs":[{"name":"extctxt"},{"name":"string"}],"output":{"name":"vec"}}],[11,"clone","syntax::ext::tt::transcribe","",155,{"inputs":[{"name":"ttframe"}],"output":{"name":"ttframe"}}],[11,"clone","","",117,{"inputs":[{"name":"ttreader"}],"output":{"name":"ttreader"}}],[11,"clone","","",156,{"inputs":[{"name":"lockstepitersize"}],"output":{"name":"lockstepitersize"}}],[11,"add","","",156,{"inputs":[{"name":"lockstepitersize"},{"name":"lockstepitersize"}],"output":{"name":"lockstepitersize"}}],[11,"clone","syntax::ext::tt::macro_parser","",157,{"inputs":[{"name":"tokentreeortokentreevec"}],"output":{"name":"tokentreeortokentreevec"}}],[11,"clone","","",158,{"inputs":[{"name":"matcherttframe"}],"output":{"name":"matcherttframe"}}],[11,"clone","","",159,{"inputs":[{"name":"matcherpos"}],"output":{"name":"matcherpos"}}],[11,"make_expr","syntax::ext::tt::macro_rules","",160,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"make_pat","","",160,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"make_items","","",160,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"make_impl_items","","",160,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"make_stmts","","",160,{"inputs":[{"name":"parseranymacro"}],"output":{"name":"option"}}],[11,"expand","","",161,null],[11,"fmt","syntax::abi","",162,{"inputs":[{"name":"os"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",162,{"inputs":[{"name":"os"},{"name":"os"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"os"},{"name":"os"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"os"}],"output":{"name":"os"}}],[11,"fmt","","",163,{"inputs":[{"name":"abi"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"abi"}],"output":{"name":"abi"}}],[11,"decode","","",163,{"inputs":[{"name":"abi"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",163,{"inputs":[{"name":"abi"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",163,null],[11,"eq","","",163,{"inputs":[{"name":"abi"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"abi"},{"name":"abi"}],"output":{"name":"bool"}}],[11,"fmt","","",164,{"inputs":[{"name":"architecture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",164,{"inputs":[{"name":"architecture"},{"name":"architecture"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"architecture"},{"name":"architecture"}],"output":{"name":"bool"}}],[11,"clone","","",164,{"inputs":[{"name":"architecture"}],"output":{"name":"architecture"}}],[11,"clone","","",165,{"inputs":[{"name":"abidata"}],"output":{"name":"abidata"}}],[11,"clone","","",166,{"inputs":[{"name":"abiarchitecture"}],"output":{"name":"abiarchitecture"}}],[11,"index","","",163,{"inputs":[{"name":"abi"}],"output":{"name":"usize"}}],[11,"data","","",163,{"inputs":[{"name":"abi"}],"output":{"name":"abidata"}}],[11,"name","","",163,{"inputs":[{"name":"abi"}],"output":{"name":"str"}}],[11,"fmt","","",163,{"inputs":[{"name":"abi"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"os"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","syntax::ast_map::blocks","",167,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"fnlikenode"}}],[11,"is_fn_like","syntax::ast","",101,{"inputs":[{"name":"item"}],"output":{"name":"bool"}}],[11,"is_fn_like","","",64,{"inputs":[{"name":"traititem"}],"output":{"name":"bool"}}],[11,"is_fn_like","","",47,{"inputs":[{"name":"expr"}],"output":{"name":"bool"}}],[11,"clone","syntax::ast_map::blocks","",168,{"inputs":[{"name":"code"}],"output":{"name":"code"}}],[11,"id","","",168,{"inputs":[{"name":"code"}],"output":{"name":"u32"}}],[11,"from_node","","Attempts to construct a Code from presumed FnLike or Block node input.",168,{"inputs":[{"name":"code"},{"name":"node"}],"output":{"name":"option"}}],[11,"to_fn_parts","","",167,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"fnparts"}}],[11,"body","","",167,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"block"}}],[11,"decl","","",167,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"fndecl"}}],[11,"span","","",167,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"span"}}],[11,"id","","",167,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"u32"}}],[11,"kind","","",167,{"inputs":[{"name":"fnlikenode"}],"output":{"name":"fnkind"}}],[11,"fmt","syntax::ast_map","",169,{"inputs":[{"name":"pathelem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",169,{"inputs":[{"name":"pathelem"},{"name":"pathelem"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"pathelem"},{"name":"pathelem"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"pathelem"}],"output":{"name":"pathelem"}}],[11,"name","","",169,{"inputs":[{"name":"pathelem"}],"output":{"name":"name"}}],[11,"fmt","","",169,{"inputs":[{"name":"pathelem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"linkedpathnode"}],"output":{"name":"linkedpathnode"}}],[11,"clone","","",171,{"inputs":[{"name":"linkedpath"}],"output":{"name":"linkedpath"}}],[11,"empty","","",171,{"inputs":[{"name":"linkedpath"}],"output":{"name":"linkedpath"}}],[11,"from","","",171,{"inputs":[{"name":"linkedpath"},{"name":"linkedpathnode"}],"output":{"name":"linkedpath"}}],[11,"next","","",171,{"inputs":[{"name":"linkedpath"}],"output":{"name":"option"}}],[11,"fmt","","",172,{"inputs":[{"name":"node"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"fmt","","",173,{"inputs":[{"name":"mapentry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"mapentry"}],"output":{"name":"mapentry"}}],[11,"fmt","","",174,{"inputs":[{"name":"inlinedparent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",175,{"inputs":[{"name":"forest"},{"name":"crate"}],"output":{"name":"forest"}}],[11,"krate","","",175,{"inputs":[{"name":"forest"}],"output":{"name":"crate"}}],[11,"krate","","",176,{"inputs":[{"name":"map"}],"output":{"name":"crate"}}],[11,"get","","Retrieve the Node corresponding to `id`, panicking if it cannot\nbe found.",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"node"}}],[11,"find","","Retrieve the Node corresponding to `id`, returning None if\ncannot be found.",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_parent","","Retrieve the parent NodeId for `id`, or `id` itself if no\nparent is registered in this map.",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"get_parent_did","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"defid"}}],[11,"get_foreign_abi","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"abi"}}],[11,"get_foreign_vis","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"visibility"}}],[11,"expect_item","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"item"}}],[11,"expect_struct","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"structdef"}}],[11,"expect_variant","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"spanned"}}],[11,"expect_foreign_item","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"foreignitem"}}],[11,"expect_expr","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"expr"}}],[11,"get_path_elem","","returns the name associated with the given NodeId's AST",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"pathelem"}}],[11,"with_path","","",176,{"inputs":[{"name":"map"},{"name":"u32"},{"name":"f"}],"output":{"name":"t"}}],[11,"path_to_string","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"string"}}],[11,"attrs","","Given a node ID, get a list of of attributes associated with the AST\ncorresponding to the Node ID",176,null],[11,"nodes_matching_suffix","","Returns an iterator that yields the node id's with paths that\nmatch `parts`.  (Requires `parts` is non-empty.)",176,null],[11,"opt_span","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"option"}}],[11,"span","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"span"}}],[11,"def_id_span","","",176,{"inputs":[{"name":"map"},{"name":"defid"},{"name":"span"}],"output":{"name":"span"}}],[11,"node_to_string","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"string"}}],[11,"node_to_user_string","","",176,{"inputs":[{"name":"map"},{"name":"u32"}],"output":{"name":"string"}}],[11,"next","","",177,{"inputs":[{"name":"nodesmatchingsuffix"}],"output":{"name":"option"}}],[11,"name","syntax::codemap","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"name"}}],[11,"name","syntax::ast","",101,{"inputs":[{"name":"item"}],"output":{"name":"name"}}],[11,"name","","",103,{"inputs":[{"name":"foreignitem"}],"output":{"name":"name"}}],[11,"name","","",89,{"inputs":[{"name":"variant_"}],"output":{"name":"name"}}],[11,"name","","",64,{"inputs":[{"name":"traititem"}],"output":{"name":"name"}}],[11,"name","","",66,{"inputs":[{"name":"implitem"}],"output":{"name":"name"}}],[11,"new_id","syntax::ast_map","",178,{"inputs":[{"name":"idandspanupdater"},{"name":"u32"}],"output":{"name":"u32"}}],[11,"new_span","","",178,{"inputs":[{"name":"idandspanupdater"},{"name":"span"}],"output":{"name":"span"}}],[11,"visit_item","","",179,null],[11,"visit_trait_item","","",179,null],[11,"visit_impl_item","","",179,null],[11,"visit_pat","","",179,null],[11,"visit_expr","","",179,null],[11,"visit_stmt","","",179,null],[11,"visit_fn","","",179,null],[11,"visit_ty","","",179,null],[11,"visit_block","","",179,null],[11,"visit_lifetime_ref","","",179,null],[11,"visit_lifetime_def","","",179,null],[11,"print_node","syntax::print::pprust","",180,{"inputs":[{"name":"state"},{"name":"node"}],"output":{"name":"result"}}],[11,"fmt","syntax::ast_util","",181,{"inputs":[{"name":"idrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",181,{"inputs":[{"name":"idrange"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",181,{"inputs":[{"name":"idrange"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"idrange"}],"output":{"name":"idrange"}}],[11,"max","","",181,{"inputs":[{"name":"idrange"}],"output":{"name":"idrange"}}],[11,"empty","","",181,{"inputs":[{"name":"idrange"}],"output":{"name":"bool"}}],[11,"add","","",181,null],[11,"visit_mod","","",182,null],[11,"visit_foreign_item","","",182,null],[11,"visit_item","","",182,null],[11,"visit_local","","",182,null],[11,"visit_block","","",182,null],[11,"visit_stmt","","",182,null],[11,"visit_pat","","",182,null],[11,"visit_expr","","",182,null],[11,"visit_ty","","",182,null],[11,"visit_generics","","",182,null],[11,"visit_fn","","",182,null],[11,"visit_struct_field","","",182,null],[11,"visit_struct_def","","",182,null],[11,"visit_trait_item","","",182,null],[11,"visit_impl_item","","",182,null],[11,"visit_lifetime_ref","","",182,null],[11,"visit_lifetime_def","","",182,null],[11,"visit_trait_ref","","",182,null],[11,"visit_id","","",183,null],[11,"check_name","syntax::codemap","",152,{"inputs":[{"name":"spanned"},{"name":"str"}],"output":{"name":"bool"}}],[11,"name","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"internedstring"}}],[11,"value_str","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"option"}}],[11,"meta_item_list","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"option"}}],[11,"span","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"span"}}],[11,"name","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"internedstring"}}],[11,"value_str","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"option"}}],[11,"meta_item_list","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"option"}}],[11,"span","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"span"}}],[11,"name","syntax::ptr","",154,{"inputs":[{"name":"p"}],"output":{"name":"internedstring"}}],[11,"value_str","","",154,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[11,"meta_item_list","","",154,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[11,"span","","",154,{"inputs":[{"name":"p"}],"output":{"name":"span"}}],[11,"meta","syntax::codemap","Extract the MetaItem from inside this Attribute.",152,{"inputs":[{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"with_desugared_doc","","Convert self to a normal #[doc=\"foo\"] comment, if it is a\ncomment like `///` or `/** */`. (Returns self unchanged for\nnon-sugared doc attributes.)",152,{"inputs":[{"name":"spanned"},{"name":"f"}],"output":{"name":"t"}}],[11,"eq","syntax::attr","",184,{"inputs":[{"name":"inlineattr"},{"name":"inlineattr"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"inlineattr"},{"name":"inlineattr"}],"output":{"name":"bool"}}],[11,"clone","","",184,{"inputs":[{"name":"inlineattr"}],"output":{"name":"inlineattr"}}],[11,"fmt","","",185,{"inputs":[{"name":"stability"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"stability"}],"output":{"name":"stability"}}],[11,"decode","","",185,{"inputs":[{"name":"stability"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",185,{"inputs":[{"name":"stability"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",186,{"inputs":[{"name":"stabilitylevel"}],"output":{"name":"stabilitylevel"}}],[11,"partial_cmp","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"option"}}],[11,"lt","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"le","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"gt","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"ge","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"eq","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"stabilitylevel"}],"output":{"name":"bool"}}],[11,"decode","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"stabilitylevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",187,{"inputs":[{"name":"reprattr"}],"output":{"name":"reprattr"}}],[11,"decode","","",187,{"inputs":[{"name":"reprattr"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",187,{"inputs":[{"name":"reprattr"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",187,{"inputs":[{"name":"reprattr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",187,{"inputs":[{"name":"reprattr"},{"name":"reprattr"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"reprattr"},{"name":"reprattr"}],"output":{"name":"bool"}}],[11,"is_ffi_safe","","",187,{"inputs":[{"name":"reprattr"}],"output":{"name":"bool"}}],[11,"clone","","",188,{"inputs":[{"name":"inttype"}],"output":{"name":"inttype"}}],[11,"decode","","",188,{"inputs":[{"name":"inttype"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",188,{"inputs":[{"name":"inttype"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",188,{"inputs":[{"name":"inttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",188,{"inputs":[{"name":"inttype"},{"name":"inttype"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"inttype"},{"name":"inttype"}],"output":{"name":"bool"}}],[11,"hash","","",188,null],[11,"is_signed","","",188,{"inputs":[{"name":"inttype"}],"output":{"name":"bool"}}],[11,"fmt","syntax::codemap","",189,{"inputs":[{"name":"bytepos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"option"}}],[11,"lt","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"le","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"gt","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"ge","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"hash","","",189,null],[11,"eq","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bool"}}],[11,"clone","","",189,{"inputs":[{"name":"bytepos"}],"output":{"name":"bytepos"}}],[11,"fmt","","",190,{"inputs":[{"name":"charpos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"option"}}],[11,"lt","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"le","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"gt","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"ge","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"hash","","",190,null],[11,"eq","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"bool"}}],[11,"clone","","",190,{"inputs":[{"name":"charpos"}],"output":{"name":"charpos"}}],[11,"from_usize","","",189,{"inputs":[{"name":"bytepos"},{"name":"usize"}],"output":{"name":"bytepos"}}],[11,"to_usize","","",189,{"inputs":[{"name":"bytepos"}],"output":{"name":"usize"}}],[11,"add","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bytepos"}}],[11,"sub","","",189,{"inputs":[{"name":"bytepos"},{"name":"bytepos"}],"output":{"name":"bytepos"}}],[11,"encode","","",189,{"inputs":[{"name":"bytepos"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",189,{"inputs":[{"name":"bytepos"},{"name":"d"}],"output":{"name":"result"}}],[11,"from_usize","","",190,{"inputs":[{"name":"charpos"},{"name":"usize"}],"output":{"name":"charpos"}}],[11,"to_usize","","",190,{"inputs":[{"name":"charpos"}],"output":{"name":"usize"}}],[11,"add","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"charpos"}}],[11,"sub","","",190,{"inputs":[{"name":"charpos"},{"name":"charpos"}],"output":{"name":"charpos"}}],[11,"hash","","",191,null],[11,"fmt","","",191,{"inputs":[{"name":"span"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",191,{"inputs":[{"name":"span"}],"output":{"name":"span"}}],[11,"fmt","","",152,{"inputs":[{"name":"spanned"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",152,null],[11,"decode","","",152,{"inputs":[{"name":"spanned"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",152,{"inputs":[{"name":"spanned"},{"name":"__s"}],"output":{"name":"result"}}],[11,"eq","","",152,{"inputs":[{"name":"spanned"},{"name":"spanned"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"spanned"},{"name":"spanned"}],"output":{"name":"bool"}}],[11,"clone","","",152,{"inputs":[{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"eq","","",191,{"inputs":[{"name":"span"},{"name":"span"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"span"},{"name":"span"}],"output":{"name":"bool"}}],[11,"encode","","",191,{"inputs":[{"name":"span"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",191,{"inputs":[{"name":"span"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"loc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",193,{"inputs":[{"name":"locwithopt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",194,{"inputs":[{"name":"filemapandline"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"filemapandbytepos"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"macroformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",196,null],[11,"clone","","",196,{"inputs":[{"name":"macroformat"}],"output":{"name":"macroformat"}}],[11,"fmt","","",197,{"inputs":[{"name":"nameandspan"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",197,null],[11,"clone","","",197,{"inputs":[{"name":"nameandspan"}],"output":{"name":"nameandspan"}}],[11,"fmt","","",198,{"inputs":[{"name":"expninfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",198,null],[11,"decode","","",199,{"inputs":[{"name":"expnid"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",199,{"inputs":[{"name":"expnid"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",199,null],[11,"fmt","","",199,{"inputs":[{"name":"expnid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",199,{"inputs":[{"name":"expnid"}],"output":{"name":"expnid"}}],[11,"eq","","",199,{"inputs":[{"name":"expnid"},{"name":"expnid"}],"output":{"name":"bool"}}],[11,"ne","","",199,{"inputs":[{"name":"expnid"},{"name":"expnid"}],"output":{"name":"bool"}}],[11,"from_u32","","",199,{"inputs":[{"name":"expnid"},{"name":"u32"}],"output":{"name":"expnid"}}],[11,"into_u32","","",199,{"inputs":[{"name":"expnid"}],"output":{"name":"u32"}}],[11,"eq","","",200,{"inputs":[{"name":"lineinfo"},{"name":"lineinfo"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"lineinfo"},{"name":"lineinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",200,{"inputs":[{"name":"lineinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",200,{"inputs":[{"name":"lineinfo"}],"output":{"name":"lineinfo"}}],[11,"eq","","",201,{"inputs":[{"name":"multibytechar"},{"name":"multibytechar"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"multibytechar"},{"name":"multibytechar"}],"output":{"name":"bool"}}],[11,"decode","","",201,{"inputs":[{"name":"multibytechar"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",201,{"inputs":[{"name":"multibytechar"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",201,{"inputs":[{"name":"multibytechar"}],"output":{"name":"multibytechar"}}],[11,"encode","","",202,{"inputs":[{"name":"filemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",202,{"inputs":[{"name":"filemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",202,{"inputs":[{"name":"filemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next_line","","EFFECT: register a start-of-line offset in the\ntable of line-beginnings.\nUNCHECKED INVARIANT: these offsets must be added in the right\norder and must be in the right places; there is shared knowledge\nabout what ends a line between this file and parse.rs\nWARNING: pos param here is the offset relative to start of CodeMap,\nand CodeMap will append a newline when adding a filemap without a newline at the end,\nso the safe way to call this is with value calculated as\nfilemap.start_pos + newline_offset_relative_to_the_start_of_filemap.",202,null],[11,"get_line","","get a line from the list of pre-computed line-beginnings.\nline-number here is 0-based.",202,{"inputs":[{"name":"filemap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"record_multibyte_char","","",202,null],[11,"is_real_file","","",202,{"inputs":[{"name":"filemap"}],"output":{"name":"bool"}}],[11,"is_imported","","",202,{"inputs":[{"name":"filemap"}],"output":{"name":"bool"}}],[11,"new","","",203,{"inputs":[{"name":"codemap"}],"output":{"name":"codemap"}}],[11,"new_filemap","","",203,{"inputs":[{"name":"codemap"},{"name":"string"},{"name":"string"}],"output":{"name":"rc"}}],[11,"new_imported_filemap","","Allocates a new FileMap representing a source file from an external\ncrate. The source code of such an \"imported filemap\" is not available,\nbut we still know enough to generate accurate debuginfo location\ninformation for things inlined from other crates.",203,{"inputs":[{"name":"codemap"},{"name":"string"},{"name":"usize"},{"name":"vec"},{"name":"vec"}],"output":{"name":"rc"}}],[11,"mk_substr_filename","","",203,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"string"}}],[11,"lookup_char_pos","","Lookup source information about a BytePos",203,{"inputs":[{"name":"codemap"},{"name":"bytepos"}],"output":{"name":"loc"}}],[11,"lookup_char_pos_adj","","",203,{"inputs":[{"name":"codemap"},{"name":"bytepos"}],"output":{"name":"locwithopt"}}],[11,"span_to_string","","",203,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"string"}}],[11,"span_to_filename","","",203,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"string"}}],[11,"span_to_lines","","",203,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"result"}}],[11,"span_to_snippet","","",203,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"result"}}],[11,"get_filemap","","",203,{"inputs":[{"name":"codemap"},{"name":"str"}],"output":{"name":"rc"}}],[11,"lookup_byte_offset","","For a global BytePos compute the local offset within the containing FileMap",203,{"inputs":[{"name":"codemap"},{"name":"bytepos"}],"output":{"name":"filemapandbytepos"}}],[11,"bytepos_to_file_charpos","","Converts an absolute BytePos to a CharPos relative to the filemap and above.",203,{"inputs":[{"name":"codemap"},{"name":"bytepos"}],"output":{"name":"charpos"}}],[11,"record_expansion","","",203,{"inputs":[{"name":"codemap"},{"name":"expninfo"}],"output":{"name":"expnid"}}],[11,"with_expn_info","","",203,{"inputs":[{"name":"codemap"},{"name":"expnid"},{"name":"f"}],"output":{"name":"t"}}],[11,"span_allows_unstable","","Check if a span is \"internal\" to a macro in which #[unstable]\nitems can be used (that is, a macro marked with\n`#[allow_internal_unstable]`).",203,{"inputs":[{"name":"codemap"},{"name":"span"}],"output":{"name":"bool"}}],[11,"fmt","","",204,{"inputs":[{"name":"spanlineserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",204,{"inputs":[{"name":"spanlineserror"},{"name":"spanlineserror"}],"output":{"name":"bool"}}],[11,"ne","","",204,{"inputs":[{"name":"spanlineserror"},{"name":"spanlineserror"}],"output":{"name":"bool"}}],[11,"clone","","",204,{"inputs":[{"name":"spanlineserror"}],"output":{"name":"spanlineserror"}}],[11,"fmt","","",205,{"inputs":[{"name":"spansnippeterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",205,{"inputs":[{"name":"spansnippeterror"},{"name":"spansnippeterror"}],"output":{"name":"bool"}}],[11,"ne","","",205,{"inputs":[{"name":"spansnippeterror"},{"name":"spansnippeterror"}],"output":{"name":"bool"}}],[11,"clone","","",205,{"inputs":[{"name":"spansnippeterror"}],"output":{"name":"spansnippeterror"}}],[11,"fmt","","",206,{"inputs":[{"name":"distinctsources"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",206,{"inputs":[{"name":"distinctsources"},{"name":"distinctsources"}],"output":{"name":"bool"}}],[11,"ne","","",206,{"inputs":[{"name":"distinctsources"},{"name":"distinctsources"}],"output":{"name":"bool"}}],[11,"clone","","",206,{"inputs":[{"name":"distinctsources"}],"output":{"name":"distinctsources"}}],[11,"fmt","","",207,{"inputs":[{"name":"malformedcodemappositions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",207,{"inputs":[{"name":"malformedcodemappositions"},{"name":"malformedcodemappositions"}],"output":{"name":"bool"}}],[11,"ne","","",207,{"inputs":[{"name":"malformedcodemappositions"},{"name":"malformedcodemappositions"}],"output":{"name":"bool"}}],[11,"clone","","",207,{"inputs":[{"name":"malformedcodemappositions"}],"output":{"name":"malformedcodemappositions"}}],[11,"fold_mod","syntax::config","",208,{"inputs":[{"name":"context"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"fold_block","","",208,{"inputs":[{"name":"context"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_foreign_mod","","",208,{"inputs":[{"name":"context"},{"name":"foreignmod"}],"output":{"name":"foreignmod"}}],[11,"fold_item_underscore","","",208,{"inputs":[{"name":"context"},{"name":"item_"}],"output":{"name":"item_"}}],[11,"fold_expr","","",208,{"inputs":[{"name":"context"},{"name":"p"}],"output":{"name":"p"}}],[11,"fold_mac","","",208,{"inputs":[{"name":"context"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"fold_item","","",208,{"inputs":[{"name":"context"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_attribute","","",209,{"inputs":[{"name":"cfgattrfolder"},{"name":"spanned"}],"output":{"name":"option"}}],[11,"fold_mac","","",209,{"inputs":[{"name":"cfgattrfolder"},{"name":"spanned"}],"output":{"name":"spanned"}}],[11,"clone","syntax::diagnostic","",210,{"inputs":[{"name":"renderspan"}],"output":{"name":"renderspan"}}],[11,"clone","","",211,{"inputs":[{"name":"colorconfig"}],"output":{"name":"colorconfig"}}],[11,"fmt","","",212,{"inputs":[{"name":"fatalerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",212,{"inputs":[{"name":"fatalerror"}],"output":{"name":"fatalerror"}}],[11,"fmt","","",212,{"inputs":[{"name":"fatalerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",212,{"inputs":[{"name":"fatalerror"}],"output":{"name":"str"}}],[11,"fmt","","",213,{"inputs":[{"name":"explicitbug"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",213,{"inputs":[{"name":"explicitbug"}],"output":{"name":"explicitbug"}}],[11,"fmt","","",213,{"inputs":[{"name":"explicitbug"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",213,{"inputs":[{"name":"explicitbug"}],"output":{"name":"str"}}],[11,"span_fatal","","",214,{"inputs":[{"name":"spanhandler"},{"name":"span"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_fatal_with_code","","",214,{"inputs":[{"name":"spanhandler"},{"name":"span"},{"name":"str"},{"name":"str"}],"output":{"name":"fatalerror"}}],[11,"span_err","","",214,null],[11,"span_err_with_code","","",214,null],[11,"span_warn","","",214,null],[11,"span_warn_with_code","","",214,null],[11,"span_note","","",214,null],[11,"span_end_note","","",214,null],[11,"span_help","","",214,null],[11,"span_suggestion","","Prints out a message with a suggested edit of the code.",214,null],[11,"fileline_note","","",214,null],[11,"fileline_help","","",214,null],[11,"span_bug","","",214,null],[11,"span_unimpl","","",214,null],[11,"handler","","",214,{"inputs":[{"name":"spanhandler"}],"output":{"name":"handler"}}],[11,"fatal","","",215,null],[11,"err","","",215,null],[11,"bump_err_count","","",215,null],[11,"err_count","","",215,{"inputs":[{"name":"handler"}],"output":{"name":"usize"}}],[11,"has_errors","","",215,{"inputs":[{"name":"handler"}],"output":{"name":"bool"}}],[11,"abort_if_errors","","",215,null],[11,"warn","","",215,null],[11,"note","","",215,null],[11,"help","","",215,null],[11,"bug","","",215,null],[11,"unimpl","","",215,null],[11,"emit","","",215,null],[11,"emit_with_code","","",215,null],[11,"custom_emit","","",215,null],[11,"fmt","","",216,{"inputs":[{"name":"level"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",216,{"inputs":[{"name":"level"}],"output":{"name":"level"}}],[11,"eq","","",216,{"inputs":[{"name":"level"},{"name":"level"}],"output":{"name":"bool"}}],[11,"ne","","",216,{"inputs":[{"name":"level"},{"name":"level"}],"output":{"name":"bool"}}],[11,"fmt","","",216,{"inputs":[{"name":"level"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"stderr","","",217,{"inputs":[{"name":"emitterwriter"},{"name":"colorconfig"},{"name":"option"}],"output":{"name":"emitterwriter"}}],[11,"new","","",217,{"inputs":[{"name":"emitterwriter"},{"name":"box"},{"name":"option"}],"output":{"name":"emitterwriter"}}],[11,"write","","",218,null],[11,"flush","","",218,{"inputs":[{"name":"destination"}],"output":{"name":"result"}}],[11,"emit","","",217,null],[11,"custom_emit","","",217,null],[11,"fmt","syntax::feature_gate","",219,{"inputs":[{"name":"attributetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",219,{"inputs":[{"name":"attributetype"}],"output":{"name":"attributetype"}}],[11,"eq","","",219,{"inputs":[{"name":"attributetype"},{"name":"attributetype"}],"output":{"name":"bool"}}],[11,"ne","","",219,{"inputs":[{"name":"attributetype"},{"name":"attributetype"}],"output":{"name":"bool"}}],[11,"new","","",220,{"inputs":[{"name":"features"}],"output":{"name":"features"}}],[11,"visit_mac","","",221,null],[11,"visit_attribute","","",221,null],[11,"visit_attribute","","",222,null],[11,"visit_name","","",222,null],[11,"visit_item","","",222,null],[11,"visit_foreign_item","","",222,null],[11,"visit_expr","","",222,null],[11,"visit_pat","","",222,null],[11,"visit_fn","","",222,null],[11,"visit_trait_item","","",222,null],[11,"visit_impl_item","","",222,null],[11,"move_map","collections::vec","",151,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"move_map","syntax::owned_slice","",223,{"inputs":[{"name":"ownedslice"},{"name":"f"}],"output":{"name":"ownedslice"}}],[11,"cmp","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"option"}}],[11,"lt","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"le","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"gt","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"ge","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"eq","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"ne","","",223,{"inputs":[{"name":"ownedslice"},{"name":"ownedslice"}],"output":{"name":"bool"}}],[11,"hash","","",223,null],[11,"fmt","","",223,{"inputs":[{"name":"ownedslice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"ownedslice"}}],[11,"from_vec","","",223,{"inputs":[{"name":"ownedslice"},{"name":"vec"}],"output":{"name":"ownedslice"}}],[11,"into_vec","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"vec"}}],[11,"as_slice","","",223,null],[11,"move_iter","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"intoiter"}}],[11,"map","","",223,{"inputs":[{"name":"ownedslice"},{"name":"f"}],"output":{"name":"ownedslice"}}],[11,"deref","","",223,null],[11,"default","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"ownedslice"}}],[11,"clone","","",223,{"inputs":[{"name":"ownedslice"}],"output":{"name":"ownedslice"}}],[11,"from_iter","","",223,{"inputs":[{"name":"ownedslice"},{"name":"i"}],"output":{"name":"ownedslice"}}],[11,"encode","","",223,{"inputs":[{"name":"ownedslice"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",223,{"inputs":[{"name":"ownedslice"},{"name":"d"}],"output":{"name":"result"}}],[11,"and_then","syntax::ptr","Move out of the pointer.\nIntended for chaining transformations not covered by `map`.",154,{"inputs":[{"name":"p"},{"name":"f"}],"output":{"name":"u"}}],[11,"map","","Transform the inner value, consuming `self` and producing a new `P<T>`.",154,{"inputs":[{"name":"p"},{"name":"f"}],"output":{"name":"p"}}],[11,"deref","","",154,{"inputs":[{"name":"p"}],"output":{"name":"t"}}],[11,"clone","","",154,{"inputs":[{"name":"p"}],"output":{"name":"p"}}],[11,"eq","","",154,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"bool"}}],[11,"fmt","","",154,{"inputs":[{"name":"p"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"p"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"p"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",154,null],[11,"decode","","",154,{"inputs":[{"name":"p"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",154,{"inputs":[{"name":"p"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_str","syntax::show_span","",224,{"inputs":[{"name":"mode"},{"name":"str"}],"output":{"name":"result"}}],[11,"visit_expr","","",225,null],[11,"visit_pat","","",225,null],[11,"visit_ty","","",225,null],[11,"visit_mac","","",225,null],[11,"fold_crate","syntax::std_inject","",226,{"inputs":[{"name":"standardlibraryinjector"},{"name":"crate"}],"output":{"name":"crate"}}],[11,"fold_crate","","",227,{"inputs":[{"name":"preludeinjector"},{"name":"crate"}],"output":{"name":"crate"}}],[11,"fold_item","","",227,{"inputs":[{"name":"preludeinjector"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_mod","","",227,{"inputs":[{"name":"preludeinjector"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"fold_crate","syntax::test","",228,{"inputs":[{"name":"testharnessgenerator"},{"name":"crate"}],"output":{"name":"crate"}}],[11,"fold_item","","",228,{"inputs":[{"name":"testharnessgenerator"},{"name":"p"}],"output":{"name":"smallvector"}}],[11,"fold_mod","","",228,{"inputs":[{"name":"testharnessgenerator"},{"name":"mod"}],"output":{"name":"mod"}}],[11,"eq","","",229,{"inputs":[{"name":"hastestsignature"},{"name":"hastestsignature"}],"output":{"name":"bool"}}],[11,"ne","","",229,{"inputs":[{"name":"hastestsignature"},{"name":"hastestsignature"}],"output":{"name":"bool"}}],[11,"clone","syntax::visit","",230,{"inputs":[{"name":"fnkind"}],"output":{"name":"fnkind"}}],[11,"eq","syntax::print::pp","",231,{"inputs":[{"name":"breaks"},{"name":"breaks"}],"output":{"name":"bool"}}],[11,"ne","","",231,{"inputs":[{"name":"breaks"},{"name":"breaks"}],"output":{"name":"bool"}}],[11,"clone","","",231,{"inputs":[{"name":"breaks"}],"output":{"name":"breaks"}}],[11,"clone","","",232,{"inputs":[{"name":"breaktoken"}],"output":{"name":"breaktoken"}}],[11,"clone","","",233,{"inputs":[{"name":"begintoken"}],"output":{"name":"begintoken"}}],[11,"clone","","",234,{"inputs":[{"name":"token"}],"output":{"name":"token"}}],[11,"is_eof","","",234,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"is_hardbreak_tok","","",234,{"inputs":[{"name":"token"}],"output":{"name":"bool"}}],[11,"clone","","",235,{"inputs":[{"name":"printstackbreak"}],"output":{"name":"printstackbreak"}}],[11,"clone","","",236,{"inputs":[{"name":"printstackelem"}],"output":{"name":"printstackelem"}}],[11,"last_token","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"token"}}],[11,"replace_last_token","","",237,null],[11,"pretty_print","","",237,{"inputs":[{"name":"printer"},{"name":"token"}],"output":{"name":"result"}}],[11,"check_stream","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"result"}}],[11,"scan_push","","",237,null],[11,"scan_pop","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"usize"}}],[11,"scan_top","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"usize"}}],[11,"scan_pop_bottom","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"usize"}}],[11,"advance_right","","",237,null],[11,"advance_left","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"result"}}],[11,"check_stack","","",237,null],[11,"print_newline","","",237,{"inputs":[{"name":"printer"},{"name":"isize"}],"output":{"name":"result"}}],[11,"indent","","",237,null],[11,"get_top","","",237,{"inputs":[{"name":"printer"}],"output":{"name":"printstackelem"}}],[11,"print_str","","",237,{"inputs":[{"name":"printer"},{"name":"str"}],"output":{"name":"result"}}],[11,"print","","",237,{"inputs":[{"name":"printer"},{"name":"token"},{"name":"isize"}],"output":{"name":"result"}}],[11,"clone","syntax::print::pprust","",238,{"inputs":[{"name":"noann"}],"output":{"name":"noann"}}],[11,"clone","","",239,{"inputs":[{"name":"currentcommentandliteral"}],"output":{"name":"currentcommentandliteral"}}],[11,"new_from_input","","",180,{"inputs":[{"name":"state"},{"name":"codemap"},{"name":"spanhandler"},{"name":"string"},{"name":"read"},{"name":"box"},{"name":"ppann"},{"name":"bool"}],"output":{"name":"state"}}],[11,"new","","",180,{"inputs":[{"name":"state"},{"name":"codemap"},{"name":"box"},{"name":"ppann"},{"name":"option"},{"name":"option"}],"output":{"name":"state"}}],[11,"ibox","","",180,{"inputs":[{"name":"state"},{"name":"usize"}],"output":{"name":"result"}}],[11,"end","","",180,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"cbox","","",180,{"inputs":[{"name":"state"},{"name":"usize"}],"output":{"name":"result"}}],[11,"rbox","","",180,{"inputs":[{"name":"state"},{"name":"usize"},{"name":"breaks"}],"output":{"name":"result"}}],[11,"nbsp","","",180,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"word_nbsp","","",180,{"inputs":[{"name":"state"},{"name":"str"}],"output":{"name":"result"}}],[11,"word_space","","",180,{"inputs":[{"name":"state"},{"name":"str"}],"output":{"name":"result"}}],[11,"popen","","",180,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"pclose","","",180,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"head","","",180,{"inputs":[{"name":"state"},{"name":"str"}],"output":{"name":"result"}}],[11,"bopen","","",180,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"bclose_","","",180,{"inputs":[{"name":"state"},{"name":"span"},{"name":"usize"}],"output":{"name":"result"}}],[11,"bclose_maybe_open","","",180,{"inputs":[{"name":"state"},{"name":"span"},{"name":"usize"},{"name":"bool"}],"output":{"name":"result"}}],[11,"bclose","","",180,{"inputs":[{"name":"state"},{"name":"span"}],"output":{"name":"result"}}],[11,"is_begin","","",180,{"inputs":[{"name":"state"}],"output":{"name":"bool"}}],[11,"is_end","","",180,{"inputs":[{"name":"state"}],"output":{"name":"bool"}}],[11,"is_bol","","",180,{"inputs":[{"name":"state"}],"output":{"name":"bool"}}],[11,"in_cbox","","",180,{"inputs":[{"name":"state"}],"output":{"name":"bool"}}],[11,"hardbreak_if_not_bol","","",180,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"space_if_not_bol","","",180,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"break_offset_if_not_bol","","",180,{"inputs":[{"name":"state"},{"name":"usize"},{"name":"isize"}],"output":{"name":"result"}}],[11,"synth_comment","","",180,{"inputs":[{"name":"state"},{"name":"string"}],"output":{"name":"result"}}],[11,"commasep","","",180,null],[11,"commasep_cmnt","","",180,null],[11,"commasep_exprs","","",180,null],[11,"print_mod","","",180,null],[11,"print_foreign_mod","","",180,null],[11,"print_opt_lifetime","","",180,{"inputs":[{"name":"state"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_type","","",180,{"inputs":[{"name":"state"},{"name":"ty"}],"output":{"name":"result"}}],[11,"print_foreign_item","","",180,{"inputs":[{"name":"state"},{"name":"foreignitem"}],"output":{"name":"result"}}],[11,"print_item","","Pretty-print an item",180,{"inputs":[{"name":"state"},{"name":"item"}],"output":{"name":"result"}}],[11,"print_enum_def","","",180,{"inputs":[{"name":"state"},{"name":"enumdef"},{"name":"generics"},{"name":"ident"},{"name":"span"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_variants","","",180,null],[11,"print_visibility","","",180,{"inputs":[{"name":"state"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_struct","","",180,{"inputs":[{"name":"state"},{"name":"structdef"},{"name":"generics"},{"name":"ident"},{"name":"span"}],"output":{"name":"result"}}],[11,"print_tt","","This doesn't deserve to be called \"pretty\" printing, but it should be\nmeaning-preserving. A quick hack that might help would be to look at the\nspans embedded in the TTs to decide where to put spaces and newlines.\nBut it'd be better to parse these according to the grammar of the\nappropriate macro, transcribe back into the grammar we just parsed from,\nand then pretty-print the resulting AST nodes (so, e.g., we print\nexpression arguments as expressions). It can be done! I think.",180,{"inputs":[{"name":"state"},{"name":"tokentree"}],"output":{"name":"result"}}],[11,"print_tts","","",180,null],[11,"print_variant","","",180,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_method_sig","","",180,{"inputs":[{"name":"state"},{"name":"ident"},{"name":"methodsig"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_trait_item","","",180,{"inputs":[{"name":"state"},{"name":"traititem"}],"output":{"name":"result"}}],[11,"print_impl_item","","",180,{"inputs":[{"name":"state"},{"name":"implitem"}],"output":{"name":"result"}}],[11,"print_outer_attributes","","",180,null],[11,"print_inner_attributes","","",180,null],[11,"print_attribute","","",180,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_stmt","","",180,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_block","","",180,{"inputs":[{"name":"state"},{"name":"block"}],"output":{"name":"result"}}],[11,"print_block_unclosed","","",180,{"inputs":[{"name":"state"},{"name":"block"}],"output":{"name":"result"}}],[11,"print_block_unclosed_indent","","",180,{"inputs":[{"name":"state"},{"name":"block"},{"name":"usize"}],"output":{"name":"result"}}],[11,"print_block_with_attrs","","",180,null],[11,"print_block_maybe_unclosed","","",180,null],[11,"print_if","","",180,{"inputs":[{"name":"state"},{"name":"expr"},{"name":"block"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_if_let","","",180,{"inputs":[{"name":"state"},{"name":"pat"},{"name":"expr"},{"name":"block"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_mac","","",180,{"inputs":[{"name":"state"},{"name":"spanned"},{"name":"delimtoken"}],"output":{"name":"result"}}],[11,"print_expr_maybe_paren","","",180,{"inputs":[{"name":"state"},{"name":"expr"}],"output":{"name":"result"}}],[11,"print_expr","","",180,{"inputs":[{"name":"state"},{"name":"expr"}],"output":{"name":"result"}}],[11,"print_local_decl","","",180,{"inputs":[{"name":"state"},{"name":"local"}],"output":{"name":"result"}}],[11,"print_decl","","",180,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_ident","","",180,{"inputs":[{"name":"state"},{"name":"ident"}],"output":{"name":"result"}}],[11,"print_usize","","",180,{"inputs":[{"name":"state"},{"name":"usize"}],"output":{"name":"result"}}],[11,"print_name","","",180,{"inputs":[{"name":"state"},{"name":"name"}],"output":{"name":"result"}}],[11,"print_for_decl","","",180,{"inputs":[{"name":"state"},{"name":"local"},{"name":"expr"}],"output":{"name":"result"}}],[11,"print_pat","","",180,{"inputs":[{"name":"state"},{"name":"pat"}],"output":{"name":"result"}}],[11,"print_fn","","",180,{"inputs":[{"name":"state"},{"name":"fndecl"},{"name":"unsafety"},{"name":"abi"},{"name":"option"},{"name":"generics"},{"name":"option"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_fn_args","","",180,{"inputs":[{"name":"state"},{"name":"fndecl"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_fn_args_and_ret","","",180,{"inputs":[{"name":"state"},{"name":"fndecl"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_fn_block_args","","",180,{"inputs":[{"name":"state"},{"name":"fndecl"}],"output":{"name":"result"}}],[11,"print_capture_clause","","",180,{"inputs":[{"name":"state"},{"name":"captureclause"}],"output":{"name":"result"}}],[11,"print_bounds","","",180,null],[11,"print_lifetime","","",180,{"inputs":[{"name":"state"},{"name":"lifetime"}],"output":{"name":"result"}}],[11,"print_lifetime_def","","",180,{"inputs":[{"name":"state"},{"name":"lifetimedef"}],"output":{"name":"result"}}],[11,"print_generics","","",180,{"inputs":[{"name":"state"},{"name":"generics"}],"output":{"name":"result"}}],[11,"print_ty_param","","",180,{"inputs":[{"name":"state"},{"name":"typaram"}],"output":{"name":"result"}}],[11,"print_where_clause","","",180,{"inputs":[{"name":"state"},{"name":"whereclause"}],"output":{"name":"result"}}],[11,"print_meta_item","","",180,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_view_path","","",180,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"print_mutability","","",180,{"inputs":[{"name":"state"},{"name":"mutability"}],"output":{"name":"result"}}],[11,"print_mt","","",180,{"inputs":[{"name":"state"},{"name":"mutty"}],"output":{"name":"result"}}],[11,"print_arg","","",180,{"inputs":[{"name":"state"},{"name":"arg"}],"output":{"name":"result"}}],[11,"print_fn_output","","",180,{"inputs":[{"name":"state"},{"name":"fndecl"}],"output":{"name":"result"}}],[11,"print_ty_fn","","",180,{"inputs":[{"name":"state"},{"name":"abi"},{"name":"unsafety"},{"name":"fndecl"},{"name":"option"},{"name":"generics"},{"name":"option"}],"output":{"name":"result"}}],[11,"maybe_print_trailing_comment","","",180,{"inputs":[{"name":"state"},{"name":"span"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_remaining_comments","","",180,{"inputs":[{"name":"state"}],"output":{"name":"result"}}],[11,"print_literal","","",180,{"inputs":[{"name":"state"},{"name":"spanned"}],"output":{"name":"result"}}],[11,"next_lit","","",180,{"inputs":[{"name":"state"},{"name":"bytepos"}],"output":{"name":"option"}}],[11,"maybe_print_comment","","",180,{"inputs":[{"name":"state"},{"name":"bytepos"}],"output":{"name":"result"}}],[11,"print_comment","","",180,{"inputs":[{"name":"state"},{"name":"comment"}],"output":{"name":"result"}}],[11,"print_string","","",180,{"inputs":[{"name":"state"},{"name":"str"},{"name":"strstyle"}],"output":{"name":"result"}}],[11,"next_comment","","",180,{"inputs":[{"name":"state"}],"output":{"name":"option"}}],[11,"print_opt_abi_and_extern_if_nondefault","","",180,{"inputs":[{"name":"state"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_extern_opt_abi","","",180,{"inputs":[{"name":"state"},{"name":"option"}],"output":{"name":"result"}}],[11,"print_fn_header_info","","",180,{"inputs":[{"name":"state"},{"name":"unsafety"},{"name":"abi"},{"name":"visibility"}],"output":{"name":"result"}}],[11,"print_unsafety","","",180,{"inputs":[{"name":"state"},{"name":"unsafety"}],"output":{"name":"result"}}]],"paths":[[3,"Ident"],[3,"Interner"],[3,"RcStr"],[3,"StrInterner"],[3,"SmallVector"],[3,"IntoIter"],[3,"Registry"],[3,"ErrorMetadata"],[3,"ErrorLocation"],[3,"Name"],[3,"Lifetime"],[3,"LifetimeDef"],[3,"Path"],[3,"PathSegment"],[4,"PathParameters"],[3,"AngleBracketedParameterData"],[3,"ParenthesizedParameterData"],[3,"DefId"],[4,"TyParamBound"],[4,"TraitBoundModifier"],[3,"TyParam"],[3,"Generics"],[3,"WhereClause"],[4,"WherePredicate"],[3,"WhereBoundPredicate"],[3,"WhereRegionPredicate"],[3,"WhereEqPredicate"],[3,"Crate"],[4,"MetaItem_"],[3,"Block"],[3,"Pat"],[3,"FieldPat"],[4,"BindingMode"],[4,"PatWildKind"],[4,"Pat_"],[4,"Mutability"],[4,"BinOp_"],[4,"UnOp"],[4,"Stmt_"],[4,"MacStmtStyle"],[4,"LocalSource"],[3,"Local"],[4,"Decl_"],[3,"Arm"],[3,"Field"],[4,"BlockCheckMode"],[4,"UnsafeSource"],[3,"Expr"],[4,"Expr_"],[3,"QSelf"],[4,"MatchSource"],[4,"CaptureClause"],[3,"Delimited"],[3,"SequenceRepetition"],[4,"KleeneOp"],[4,"TokenTree"],[4,"Mac_"],[4,"StrStyle"],[4,"Sign"],[4,"LitIntType"],[4,"Lit_"],[3,"MutTy"],[3,"TypeField"],[3,"MethodSig"],[3,"TraitItem"],[4,"TraitItem_"],[3,"ImplItem"],[4,"ImplItem_"],[4,"IntTy"],[4,"UintTy"],[4,"FloatTy"],[3,"TypeBinding"],[3,"Ty"],[4,"PrimTy"],[3,"BareFnTy"],[4,"Ty_"],[4,"AsmDialect"],[3,"InlineAsm"],[3,"Arg"],[3,"FnDecl"],[4,"Unsafety"],[4,"ImplPolarity"],[4,"FunctionRetTy"],[4,"ExplicitSelf_"],[3,"Mod"],[3,"ForeignMod"],[3,"VariantArg"],[4,"VariantKind"],[3,"EnumDef"],[3,"Variant_"],[4,"PathListItem_"],[4,"ViewPath_"],[4,"AttrStyle"],[3,"AttrId"],[3,"Attribute_"],[3,"TraitRef"],[3,"PolyTraitRef"],[4,"Visibility"],[3,"StructField_"],[4,"StructFieldKind"],[3,"StructDef"],[3,"Item"],[4,"Item_"],[3,"ForeignItem"],[4,"ForeignItem_"],[4,"InlinedItem"],[3,"MacroDef"],[3,"Restrictions"],[4,"PathParsingMode"],[4,"BoundParsingMode"],[4,"TokenType"],[3,"Parser"],[4,"CommentStyle"],[3,"Comment"],[3,"Literal"],[3,"TokenAndSpan"],[3,"StringReader"],[3,"TtReader"],[4,"BinOpToken"],[4,"DelimToken"],[4,"IdentStyle"],[4,"SpecialMacroVar"],[4,"Lit"],[4,"Token"],[4,"Nonterminal"],[4,"Keyword"],[3,"InternedString"],[4,"ObsoleteSyntax"],[3,"ParseSess"],[4,"Annotatable"],[3,"MacEager"],[3,"DummyResult"],[3,"BlockInfo"],[3,"ExtCtxt"],[3,"SyntaxEnv"],[4,"OrderingOp"],[4,"PtrTy"],[3,"Path"],[4,"Ty"],[3,"LifetimeBounds"],[3,"TraitDef"],[4,"StructType"],[3,"PatIdentFinder"],[3,"IdentRenamer"],[3,"PatIdentRenamer"],[3,"MacroExpander"],[3,"ExpansionConfig"],[3,"Marker"],[3,"MacroExterminator"],[4,"ArgumentType"],[4,"SyntaxContext_"],[3,"Vec"],[3,"Spanned"],[4,"Option"],[3,"P"],[3,"TtFrame"],[4,"LockstepIterSize"],[4,"TokenTreeOrTokenTreeVec"],[3,"MatcherTtFrame"],[3,"MatcherPos"],[3,"ParserAnyMacro"],[3,"MacroRulesMacroExpander"],[4,"Os"],[4,"Abi"],[4,"Architecture"],[3,"AbiData"],[4,"AbiArchitecture"],[3,"FnLikeNode"],[4,"Code"],[4,"PathElem"],[3,"LinkedPathNode"],[3,"LinkedPath"],[4,"Node"],[4,"MapEntry"],[3,"InlinedParent"],[3,"Forest"],[3,"Map"],[3,"NodesMatchingSuffix"],[3,"IdAndSpanUpdater"],[3,"NodeCollector"],[3,"State"],[3,"IdRange"],[3,"IdVisitor"],[3,"IdRangeComputingVisitor"],[4,"InlineAttr"],[3,"Stability"],[4,"StabilityLevel"],[4,"ReprAttr"],[4,"IntType"],[3,"BytePos"],[3,"CharPos"],[3,"Span"],[3,"Loc"],[3,"LocWithOpt"],[3,"FileMapAndLine"],[3,"FileMapAndBytePos"],[4,"MacroFormat"],[3,"NameAndSpan"],[3,"ExpnInfo"],[3,"ExpnId"],[3,"LineInfo"],[3,"MultiByteChar"],[3,"FileMap"],[3,"CodeMap"],[4,"SpanLinesError"],[4,"SpanSnippetError"],[3,"DistinctSources"],[3,"MalformedCodemapPositions"],[3,"Context"],[3,"CfgAttrFolder"],[4,"RenderSpan"],[4,"ColorConfig"],[3,"FatalError"],[3,"ExplicitBug"],[3,"SpanHandler"],[3,"Handler"],[4,"Level"],[3,"EmitterWriter"],[4,"Destination"],[4,"AttributeType"],[3,"Features"],[3,"MacroVisitor"],[3,"PostExpansionVisitor"],[3,"OwnedSlice"],[4,"Mode"],[3,"ShowSpanVisitor"],[3,"StandardLibraryInjector"],[3,"PreludeInjector"],[3,"TestHarnessGenerator"],[4,"HasTestSignature"],[4,"FnKind"],[4,"Breaks"],[3,"BreakToken"],[3,"BeginToken"],[4,"Token"],[4,"PrintStackBreak"],[3,"PrintStackElem"],[3,"Printer"],[3,"NoAnn"],[3,"CurrentCommentAndLiteral"]]};
searchIndex['gl_generator'] = {"items":[[0,"","gl_generator","# gl_generator",null,null],[5,"generate_bindings","","Public function that generates Rust source code.",null,null],[0,"generators","","",null,null],[5,"gen_enum_item","gl_generator::generators","This function generates a `const name: type = value;` item.",null,{"inputs":[{"name":"enum"},{"name":"str"},{"name":"w"}],"output":{"name":"result"}}],[5,"gen_type_aliases","","Generates all the type aliases for a namespace.",null,{"inputs":[{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[5,"gen_parameters","","Generates the list of Rust `Arg`s that a `Cmd` requires.",null,{"inputs":[{"name":"cmd"},{"name":"bool"},{"name":"bool"}],"output":{"name":"vec"}}],[5,"gen_return_type","","Generates the Rust return type of a `Cmd`.",null,{"inputs":[{"name":"cmd"}],"output":{"name":"string"}}],[5,"gen_symbol_name","","Generates the native symbol name of a `Cmd`.",null,{"inputs":[{"name":"ns"},{"name":"str"}],"output":{"name":"string"}}],[0,"debug_struct_gen","","",null,null],[3,"DebugStructGenerator","gl_generator::generators::debug_struct_gen","",null,null],[11,"write","","",0,{"inputs":[{"name":"debugstructgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"global_gen","gl_generator::generators","",null,null],[3,"GlobalGenerator","gl_generator::generators::global_gen","",null,null],[11,"write","","",1,{"inputs":[{"name":"globalgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"static_gen","gl_generator::generators","",null,null],[3,"StaticGenerator","gl_generator::generators::static_gen","",null,null],[11,"write","","",2,{"inputs":[{"name":"staticgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"struct_gen","gl_generator::generators","",null,null],[3,"StructGenerator","gl_generator::generators::struct_gen","",null,null],[11,"write","","",3,{"inputs":[{"name":"structgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"static_struct_gen","gl_generator::generators","",null,null],[3,"StaticStructGenerator","gl_generator::generators::static_struct_gen","",null,null],[11,"write","","",4,{"inputs":[{"name":"staticstructgenerator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[8,"Generator","gl_generator::generators","Trait for a bindings generator.",null,null],[10,"write","","Builds the GL bindings.",5,{"inputs":[{"name":"generator"},{"name":"registry"},{"name":"ns"},{"name":"w"}],"output":{"name":"result"}}],[0,"registry","gl_generator","",null,null],[3,"Registry","gl_generator::registry","",null,null],[12,"groups","","",6,null],[12,"enums","","",6,null],[12,"cmds","","",6,null],[12,"features","","",6,null],[12,"extensions","","",6,null],[12,"aliases","","",6,null],[3,"EnumIterator","","",null,null],[3,"CmdIterator","","",null,null],[3,"Group","","",null,null],[12,"name","","",7,null],[12,"enums","","",7,null],[3,"EnumNs","","",null,null],[12,"namespace","","",8,null],[12,"group","","",8,null],[12,"ty","","",8,null],[12,"start","","",8,null],[12,"end","","",8,null],[12,"vendor","","",8,null],[12,"comment","","",8,null],[12,"defs","","",8,null],[3,"Enum","","",null,null],[12,"ident","","",9,null],[12,"value","","",9,null],[12,"alias","","",9,null],[12,"ty","","",9,null],[3,"CmdNs","","",null,null],[12,"namespace","","",10,null],[12,"defs","","",10,null],[3,"Binding","","",null,null],[12,"ident","","",11,null],[12,"ty","","",11,null],[12,"group","","",11,null],[3,"Cmd","","",null,null],[12,"proto","","",12,null],[12,"params","","",12,null],[12,"is_safe","","True if this command doesn't take any pointers.",12,null],[12,"alias","","",12,null],[12,"vecequiv","","",12,null],[12,"glx","","",12,null],[3,"Feature","","",null,null],[12,"api","","",13,null],[12,"name","","",13,null],[12,"number","","",13,null],[12,"requires","","",13,null],[12,"removes","","",13,null],[3,"Require","","",null,null],[12,"comment","","",14,null],[12,"enums","","A reference to the earlier types, by name",14,null],[12,"commands","","A reference to the earlier types, by name",14,null],[3,"Remove","","",null,null],[12,"profile","","",15,null],[12,"comment","","",15,null],[12,"enums","","A reference to the earlier types, by name",15,null],[12,"commands","","A reference to the earlier types, by name",15,null],[3,"Extension","","",null,null],[12,"name","","",16,null],[12,"supported","","which apis this extension is defined for (see Feature.api)",16,null],[12,"requires","","",16,null],[3,"GlxOpcode","","",null,null],[12,"ty","","",17,null],[12,"opcode","","",17,null],[12,"name","","",17,null],[12,"comment","","",17,null],[3,"Filter","","",null,null],[12,"fallbacks","","",18,null],[12,"extensions","","",18,null],[12,"profile","","",18,null],[12,"version","","",18,null],[12,"api","","",18,null],[4,"Ns","","",null,null],[13,"Gl","","",19,null],[13,"Glx","","",19,null],[13,"Wgl","","",19,null],[13,"Egl","","",19,null],[13,"Gles1","","",19,null],[13,"Gles2","","",19,null],[4,"Fallbacks","","",null,null],[13,"All","","",20,null],[13,"None","","",20,null],[11,"clone","","",19,{"inputs":[{"name":"ns"}],"output":{"name":"ns"}}],[11,"fmt_struct_name","","",19,{"inputs":[{"name":"ns"}],"output":{"name":"str"}}],[6,"Err","","",null,null],[11,"from_str","","",19,{"inputs":[{"name":"ns"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"ns"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_xml","","Generate a registry from the supplied XML string",6,{"inputs":[{"name":"registry"},{"name":"r"},{"name":"ns"},{"name":"option"}],"output":{"name":"registry"}}],[11,"get_tys","","Returns a set of all the types used in the supplied registry. This is useful\nfor working out what conversions are needed for the specific registry.",6,{"inputs":[{"name":"registry"}],"output":{"name":"btreeset"}}],[11,"enum_iter","","",6,{"inputs":[{"name":"registry"}],"output":{"name":"enumiterator"}}],[11,"cmd_iter","","",6,{"inputs":[{"name":"registry"}],"output":{"name":"cmditerator"}}],[6,"Output","","",null,null],[11,"add","","",6,{"inputs":[{"name":"registry"},{"name":"registry"}],"output":{"name":"registry"}}],[6,"Item","","",null,null],[11,"next","","",21,{"inputs":[{"name":"enumiterator"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",22,{"inputs":[{"name":"cmditerator"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"feature"}],"output":{"name":"feature"}}],[11,"clone","","",14,{"inputs":[{"name":"require"}],"output":{"name":"require"}}],[11,"clone","","",15,{"inputs":[{"name":"remove"}],"output":{"name":"remove"}}],[11,"clone","","",16,{"inputs":[{"name":"extension"}],"output":{"name":"extension"}}]],"paths":[[3,"DebugStructGenerator"],[3,"GlobalGenerator"],[3,"StaticGenerator"],[3,"StructGenerator"],[3,"StaticStructGenerator"],[8,"Generator"],[3,"Registry"],[3,"Group"],[3,"EnumNs"],[3,"Enum"],[3,"CmdNs"],[3,"Binding"],[3,"Cmd"],[3,"Feature"],[3,"Require"],[3,"Remove"],[3,"Extension"],[3,"GlxOpcode"],[3,"Filter"],[4,"Ns"],[4,"Fallbacks"],[3,"EnumIterator"],[3,"CmdIterator"]]};
searchIndex['num'] = {"items":[[0,"","num","Simple numerics.",null,null],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[0,"bigint","","A Big integer (signed version: `BigInt`, unsigned version: `BigUint`).",null,null],[3,"BigUint","num::bigint","A big unsigned integer type.",null,null],[3,"RadixFmt","","",null,null],[3,"BigInt","","A big signed integer type.",null,null],[4,"Sign","","A Sign is a `BigInt`'s composing element.",null,null],[13,"Minus","","",0,null],[13,"NoSign","","",0,null],[13,"Plus","","",0,null],[4,"ParseBigIntError","","",null,null],[13,"ParseInt","","",1,null],[13,"Other","","",1,null],[0,"big_digit","","",null,null],[5,"from_doublebigdigit","num::bigint::big_digit","Split one `DoubleBigDigit` into two `BigDigit`s.",null,null],[5,"to_doublebigdigit","","Join two `BigDigit`s into one `DoubleBigDigit`",null,{"inputs":[{"name":"bigdigit"},{"name":"bigdigit"}],"output":{"name":"doublebigdigit"}}],[17,"BITS","","",null,null],[17,"BASE","","",null,null],[6,"BigDigit","num::bigint","A `BigDigit` is a `BigUint`'s composing element.",null,null],[6,"DoubleBigDigit","","A `DoubleBigDigit` is the internal type used to do the computations.  Its\nsize is the double of the size of `BigDigit`.",null,null],[17,"ZERO_BIG_DIGIT","","",null,null],[8,"ToBigUint","","A generic trait for converting a value to a `BigUint`.",null,null],[10,"to_biguint","","Converts the value of `self` to a `BigUint`.",2,{"inputs":[{"name":"tobiguint"}],"output":{"name":"option"}}],[8,"ToBigInt","","A generic trait for converting a value to a `BigInt`.",null,null],[10,"to_bigint","","Converts the value of `self` to a `BigInt`.",3,{"inputs":[{"name":"tobigint"}],"output":{"name":"option"}}],[8,"RandBigInt","","",null,null],[10,"gen_biguint","","Generate a random `BigUint` of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"biguint"}}],[10,"gen_bigint","","Generate a random BigInt of the given bit size.",4,{"inputs":[{"name":"randbigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[10,"gen_biguint_below","","Generate a random `BigUint` less than the given bound. Fails\nwhen the bound is zero.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_biguint_range","","Generate a random `BigUint` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[10,"gen_bigint_range","","Generate a random `BigInt` within the given range. The lower\nbound is inclusive; the upper bound is exclusive. Fails when\nthe upper bound is not greater than the lower bound.",4,{"inputs":[{"name":"randbigint"},{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"biguint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",5,{"inputs":[{"name":"biguint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"eq","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"cmp","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"hash","","",5,{"inputs":[{"name":"biguint"},{"name":"h"}],"output":null}],[11,"fmt","","",5,{"inputs":[{"name":"biguint"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",5,{"inputs":[{"name":"biguint"},{"name":"str"}],"output":{"name":"result"}}],[6,"FromStrRadixErr","","",null,null],[11,"from_str_radix","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[6,"Output","","",null,null],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitand","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"bitxor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"shl","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"shr","","",5,{"inputs":[{"name":"biguint"},{"name":"usize"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[11,"zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"is_zero","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"one","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"neg","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"biguint"}}],[6,"Output","","",null,null],[11,"checked_add","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_sub","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_mul","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"checked_div","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"option"}}],[11,"div_rem","","",5,null],[11,"div_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"mod_floor","","",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"div_mod_floor","","",5,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"biguint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",5,{"inputs":[{"name":"biguint"},{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"bool"}}],[11,"to_i64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"to_u64","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"from_i64","","",5,{"inputs":[{"name":"biguint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",5,{"inputs":[{"name":"biguint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_biguint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_biguint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",7,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates and initializes a `BigUint`.",5,{"inputs":[{"name":"biguint"},{"name":"vec"}],"output":{"name":"biguint"}}],[11,"from_slice","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_be","","Creates and initializes a `BigUint`.",5,null],[11,"from_bytes_le","","Creates and initializes a `BigUint`.",5,null],[11,"to_bytes_le","","Returns the byte representation of the `BigUint` in little-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"to_bytes_be","","Returns the byte representation of the `BigUint` in big-endian byte order.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"vec"}}],[11,"parse_bytes","","Creates and initializes a `BigUint`.",5,null],[11,"bits","","Determines the fewest bits necessary to express the `BigUint`.",5,{"inputs":[{"name":"biguint"}],"output":{"name":"usize"}}],[11,"decode","","",0,{"inputs":[{"name":"sign"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",0,{"inputs":[{"name":"sign"},{"name":"__s"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[6,"Output","","",null,null],[11,"neg","","Negate Sign value.",0,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",6,{"inputs":[{"name":"bigint"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",6,{"inputs":[{"name":"bigint"},{"name":"__s"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"eq","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"cmp","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"fmt","","",6,{"inputs":[{"name":"bigint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",6,{"inputs":[{"name":"bigint"},{"name":"h"}],"output":null}],[6,"Err","","",null,null],[11,"from_str","","",6,{"inputs":[{"name":"bigint"},{"name":"str"}],"output":{"name":"result"}}],[6,"FromStrRadixErr","","",null,null],[11,"from_str_radix","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[6,"Output","","",null,null],[11,"shl","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"shr","","",6,{"inputs":[{"name":"bigint"},{"name":"usize"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[11,"zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_zero","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"one","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"abs_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"signum","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"is_positive","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_negative","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[6,"Output","","",null,null],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"neg","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bigint"}}],[6,"Output","","",null,null],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"div_rem","","",6,null],[11,"div_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"mod_floor","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"div_mod_floor","","",6,null],[11,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bigint"}}],[11,"divides","","Deprecated, use `is_multiple_of` instead.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_multiple_of","","Returns `true` if the number is a multiple of `other`.",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_even","","Returns `true` if the number is divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"is_odd","","Returns `true` if the number is not divisible by `2`.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"bool"}}],[11,"to_i64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_u64","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"from_i64","","",6,{"inputs":[{"name":"bigint"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",6,{"inputs":[{"name":"bigint"},{"name":"u64"}],"output":{"name":"option"}}],[11,"to_bigint","","",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"to_bigint","","",5,{"inputs":[{"name":"biguint"}],"output":{"name":"option"}}],[11,"new","","Creates and initializes a BigInt.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"vec"}],"output":{"name":"bigint"}}],[11,"from_biguint","","Creates and initializes a `BigInt`.",6,{"inputs":[{"name":"bigint"},{"name":"sign"},{"name":"biguint"}],"output":{"name":"bigint"}}],[11,"from_slice","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_be","","Creates and initializes a `BigInt`.",6,null],[11,"from_bytes_le","","Creates and initializes a `BigInt`.",6,null],[11,"to_bytes_le","","Returns the sign and the byte representation of the `BigInt` in little-endian byte order.",6,null],[11,"to_bytes_be","","Returns the sign and the byte representation of the `BigInt` in big-endian byte order.",6,null],[11,"parse_bytes","","Creates and initializes a `BigInt`.",6,null],[11,"to_biguint","","Converts this `BigInt` into a `BigUint`, if it's not negative.",6,{"inputs":[{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_add","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_sub","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_mul","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"checked_div","","",6,{"inputs":[{"name":"bigint"},{"name":"bigint"}],"output":{"name":"option"}}],[11,"eq","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parsebiginterror"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",1,{"inputs":[{"name":"parsebiginterror"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"parsebiginterror"},{"name":"parseinterror"}],"output":{"name":"parsebiginterror"}}],[0,"complex","num","Complex numbers.",null,null],[3,"Complex","num::complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",8,null],[12,"im","","Imaginary portion of the complex number",8,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"complex"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",8,{"inputs":[{"name":"complex"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"clone","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"eq","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"bool"}}],[11,"new","","Create a new Complex",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't necessarily\nhave a sqrt function), i.e. `re^2 + im^2`.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"scale","","Multiplies `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"unscale","","Divides `self` by the scalar `t`.",8,{"inputs":[{"name":"complex"},{"name":"t"}],"output":{"name":"complex"}}],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"inv","","Returns `1/self`",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"norm","","Calculate |self|",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"arg","","Calculate the principal Arg of self.",8,{"inputs":[{"name":"complex"}],"output":{"name":"t"}}],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r * exp(i\n* theta)`",8,null],[11,"from_polar","","Convert a polar representation into a complex number.",8,{"inputs":[{"name":"complex"},{"name":"t"},{"name":"t"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",8,{"inputs":[{"name":"complex"},{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"neg","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[6,"Output","","",null,null],[11,"zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"is_zero","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"bool"}}],[11,"one","","",8,{"inputs":[{"name":"complex"}],"output":{"name":"complex"}}],[11,"fmt","","",8,{"inputs":[{"name":"complex"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"integer","num","Integer trait and functions.",null,null],[5,"div_rem","num::integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"mod_floor","","Floored integer modulo, satisfying:",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"gcd","","Greatest Common Divisor (GCD).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"lcm","","Lowest Common Multiple (LCM).",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"self"}}],[10,"divides","","Deprecated, use `is_multiple_of` instead.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",9,{"inputs":[{"name":"integer"},{"name":"self"}],"output":{"name":"bool"}}],[10,"is_even","","Returns `true` if the number is even.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"is_odd","","Returns `true` if the number is odd.",9,{"inputs":[{"name":"integer"}],"output":{"name":"bool"}}],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",9,null],[0,"iter","num","External iterators for generic mathematics",null,null],[3,"Range","num::iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",10,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[6,"Item","","",null,null],[11,"next","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",10,null],[11,"next_back","","",10,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[6,"Item","","",null,null],[11,"next","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",11,null],[11,"next_back","","",11,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"clone","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"rangestep"}}],[6,"Item","","",null,null],[11,"next","","",12,{"inputs":[{"name":"rangestep"}],"output":{"name":"option"}}],[11,"clone","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"rangestepinclusive"}}],[6,"Item","","",null,null],[11,"next","","",13,{"inputs":[{"name":"rangestepinclusive"}],"output":{"name":"option"}}],[0,"traits","num","Numeric traits for generic mathematics",null,null],[3,"ParseFloatError","num::traits","",null,null],[12,"kind","","",14,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",15,null],[13,"Invalid","","",15,null],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","Parse error for `from_str_radix`",16,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",16,{"inputs":[{"name":"num"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",17,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",17,{"inputs":[{"name":"zero"}],"output":{"name":"bool"}}],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",18,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",19,{"inputs":[{"name":"signed"},{"name":"self"}],"output":{"name":"self"}}],[10,"signum","","Returns the sign of the number.",19,{"inputs":[{"name":"signed"}],"output":{"name":"self"}}],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",19,{"inputs":[{"name":"signed"}],"output":{"name":"bool"}}],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",20,{"inputs":[{"name":"bounded"}],"output":{"name":"self"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",21,{"inputs":[{"name":"saturating"},{"name":"self"}],"output":{"name":"self"}}],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",22,{"inputs":[{"name":"checkedadd"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",23,{"inputs":[{"name":"checkedsub"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",24,{"inputs":[{"name":"checkedmul"},{"name":"self"}],"output":{"name":"option"}}],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",25,{"inputs":[{"name":"checkeddiv"},{"name":"self"}],"output":{"name":"option"}}],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",26,{"inputs":[{"name":"primint"}],"output":{"name":"u32"}}],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[10,"swap_bytes","","Reverses the byte order of the integer.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"from_be","","Convert an integer from big endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target's endianness.",26,{"inputs":[{"name":"primint"},{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"to_le","","Convert `self` to little endian from the target's endianness.",26,{"inputs":[{"name":"primint"}],"output":{"name":"self"}}],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",26,{"inputs":[{"name":"primint"},{"name":"u32"}],"output":{"name":"self"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i8","","Converts the value of `self` to an `i8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i16","","Converts the value of `self` to an `i16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_i32","","Converts the value of `self` to an `i32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_i64","","Converts the value of `self` to an `i64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_usize","","Converts the value of `self` to a `usize`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u8","","Converts the value of `self` to an `u8`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u16","","Converts the value of `self` to an `u16`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_u32","","Converts the value of `self` to an `u32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[10,"to_u64","","Converts the value of `self` to an `u64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f32","","Converts the value of `self` to an `f32`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[11,"to_f64","","Converts the value of `self` to an `f64`.",27,{"inputs":[{"name":"toprimitive"}],"output":{"name":"option"}}],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",28,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",29,{"inputs":[{"name":"numcast"},{"name":"t"}],"output":{"name":"option"}}],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",30,{"inputs":[{"name":"float"}],"output":{"name":"fpcategory"}}],[10,"floor","","Returns the largest integer less than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"trunc","","Return the integer part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"fract","","Returns the fractional part of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"signum","","Returns a number that represents the sign of `self`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",30,{"inputs":[{"name":"float"}],"output":{"name":"bool"}}],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",30,{"inputs":[{"name":"float"},{"name":"self"},{"name":"self"}],"output":{"name":"self"}}],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"powi","","Raise a number to an integer power.",30,{"inputs":[{"name":"float"},{"name":"i32"}],"output":{"name":"self"}}],[10,"powf","","Raise a number to a floating point power.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sqrt","","Take the square root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp","","Returns `e^(self)`, (the exponential function).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"exp2","","Returns `2^(self)`.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln","","Returns the natural logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"log2","","Returns the base 2 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"log10","","Returns the base 10 logarithm of the number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"max","","Returns the maximum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"min","","Returns the minimum of the two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"abs_sub","","The positive difference of two numbers.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"cbrt","","Take the cubic root of a number.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin","","Computes the sine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cos","","Computes the cosine of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tan","","Computes the tangent of a number (in radians).",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",30,{"inputs":[{"name":"float"},{"name":"self"}],"output":{"name":"self"}}],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",30,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"sinh","","Hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"cosh","","Hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"tanh","","Hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"asinh","","Inverse hyperbolic sine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"acosh","","Inverse hyperbolic cosine function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"atanh","","Inverse hyperbolic tangent function.",30,{"inputs":[{"name":"float"}],"output":{"name":"self"}}],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",30,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[6,"FromStrRadixErr","","",null,null],[0,"rational","num","Rational numbers",null,null],[3,"Ratio","num::rational","Represents the ratio between 2 numbers.",null,null],[3,"ParseRatioError","","",null,null],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",null,null],[6,"Rational32","","",null,null],[6,"Rational64","","",null,null],[6,"BigRational","","Alias for arbitrary precision rationals.",null,null],[11,"fmt","","",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"decode","","",31,{"inputs":[{"name":"ratio"},{"name":"__d"}],"output":{"name":"result"}}],[11,"encode","","",31,{"inputs":[{"name":"ratio"},{"name":"__s"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_integer","","Creates a ratio representing the integer `t`.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new_raw","","Creates a ratio without checking for `denom == 0` or reducing.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"new","","Create a new Ratio. Fails if `denom == 0`.",31,{"inputs":[{"name":"ratio"},{"name":"t"},{"name":"t"}],"output":{"name":"ratio"}}],[11,"to_integer","","Converts to an integer.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"numer","","Gets an immutable reference to the numerator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"denom","","Gets an immutable reference to the denominator.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"t"}}],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"reduced","","Returns a `reduce`d copy of self.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"recip","","Returns the reciprocal.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"floor","","Rounds towards minus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"ceil","","Rounds towards plus infinity.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"trunc","","Rounds towards zero.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"fract","","Returns the fractional part of a number.",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"from_float","","Converts a float into a rational number.",31,{"inputs":[{"name":"ratio"},{"name":"t"}],"output":{"name":"option"}}],[11,"eq","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"lt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ordering"}}],[6,"Output","","",null,null],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"mul","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"div","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"add","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"rem","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"neg","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"Output","","",null,null],[11,"zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_zero","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"one","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[6,"FromStrRadixErr","","",null,null],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",31,{"inputs":[{"name":"ratio"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"abs","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"abs_sub","","",31,{"inputs":[{"name":"ratio"},{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"signum","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"ratio"}}],[11,"is_positive","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"is_negative","","",31,{"inputs":[{"name":"ratio"}],"output":{"name":"bool"}}],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",31,{"inputs":[{"name":"ratio"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","Parses `numer/denom` or just `numer`.",31,{"inputs":[{"name":"ratio"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"parseratioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"parseratioerror"}}],[11,"fmt","","",32,{"inputs":[{"name":"parseratioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",32,{"inputs":[{"name":"parseratioerror"}],"output":{"name":"str"}}]],"paths":[[4,"Sign"],[4,"ParseBigIntError"],[8,"ToBigUint"],[8,"ToBigInt"],[8,"RandBigInt"],[3,"BigUint"],[3,"BigInt"],[3,"RadixFmt"],[3,"Complex"],[8,"Integer"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"Float"],[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex['graphics'] = {"items":[[0,"","graphics","A library for 2D graphics that works with multiple back-ends.",null,null],[8,"ImageSize","","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",0,null],[11,"get_width","","Gets the image width.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[11,"get_height","","Gets the image height.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[0,"draw_state","","",null,null],[0,"state","graphics::draw_state","Fixed-function hardware state.",null,null],[11,"fmt","draw_state::state","",1,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",1,null],[11,"partial_cmp","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"fmt","","",2,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"fmt","","",3,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"fmt","","",4,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"fmt","","",5,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",5,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",5,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"fmt","","",6,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"fmt","","",7,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"hash","","",7,null],[11,"partial_cmp","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"fmt","","",8,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"hash","","",8,null],[11,"partial_cmp","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"fmt","","",9,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"hash","","",9,null],[11,"partial_cmp","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"eq","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"default","","",9,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"fmt","","",10,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"hash","","",10,null],[11,"partial_cmp","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"fmt","","",11,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"hash","","",11,null],[11,"partial_cmp","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"cmp","","",11,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"default","","",11,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"fmt","","",12,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"hash","","",12,null],[11,"partial_cmp","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"cmp","","",12,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"fmt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"hash","","",13,null],[11,"partial_cmp","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"fmt","","",14,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"hash","","",14,null],[11,"partial_cmp","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"eq","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"cmp","","",14,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"fmt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",15,null],[11,"partial_cmp","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",15,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"default","","",16,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"eq","","",16,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",16,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"cmp","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitor","draw_state::state","Returns the union of the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitxor","draw_state::state","Returns the left flags, but with all the right flags toggled.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitand","draw_state::state","Returns the intersection between the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"sub","draw_state::state","Returns the set difference of the two sets of flags.",17,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"not","draw_state::state","Returns the complement of this set of flags.",17,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"fmt","","",17,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","draw_state::target","",18,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",19,null],[11,"cmp","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",19,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",19,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",19,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",19,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",19,null],[11,"remove","","Removes the specified flags in-place.",19,null],[11,"toggle","","Toggles the specified flags in-place.",19,null],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitor","draw_state::target","Returns the union of the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitxor","draw_state::target","Returns the left flags, but with all the right flags toggled.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitand","draw_state::target","Returns the intersection between the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"sub","draw_state::target","Returns the set difference of the two sets of flags.",19,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"not","draw_state::target","Returns the complement of this set of flags.",19,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"fmt","","",19,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",20,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,null],[11,"remove","","Removes the specified flags in-place.",20,null],[11,"toggle","","Toggles the specified flags in-place.",20,null],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitor","draw_state::target","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitxor","draw_state::target","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"bitand","draw_state::target","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"sub","draw_state::target","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[6,"Output","graphics::draw_state::state","",null,null],[11,"not","draw_state::target","Returns the complement of this set of flags.",20,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"clone","","",21,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",21,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","draw_state","",22,{"inputs":[{"name":"drawstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"hash","","",23,null],[11,"fmt","","",23,{"inputs":[{"name":"blendpreset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"blendpreset"}],"output":{"name":"blendpreset"}}],[11,"new","","Create a default `DrawState`. Uses counter-clockwise winding, culls the backface of each\nprimitive, and does no scissor/stencil/depth/blend/color masking.",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"get_target_mask","","Return a target mask that contains all the planes required by this state.",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"mask"}}],[11,"multi_sample","","Enable multi-sampled rasterization",22,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"stencil","","Set the stencil test to a simple expression",22,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"u8"}],"output":{"name":"drawstate"}}],[11,"depth","","Set the depth test with the mask",22,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"bool"}],"output":{"name":"drawstate"}}],[11,"scissor","","Set the scissor",22,{"inputs":[{"name":"drawstate"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"drawstate"}}],[11,"blend","","Set the blend mode to one of the presets",22,{"inputs":[{"name":"drawstate"},{"name":"blendpreset"}],"output":{"name":"drawstate"}}],[4,"FrontFace","graphics::draw_state::state","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",1,null],[13,"CounterClockwise","","Counter-clockwise winding order.",1,null],[6,"LineWidth","","",null,null],[6,"OffsetFactor","","",null,null],[6,"OffsetUnits","","",null,null],[3,"Offset","","How to offset vertices in screen space, if at all.",null,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",3,null],[13,"Front","","",3,null],[13,"Back","","",3,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",4,null],[13,"Line","","Rasterize as a line with the given width.",4,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",4,null],[3,"Primitive","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",5,null],[12,"method","","How to rasterize this primitive.",5,null],[12,"offset","","Any polygon offset to apply.",5,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",7,null],[13,"Less","","`x < y`",7,null],[13,"LessEqual","","`x <= y`",7,null],[13,"Equal","","`x == y`",7,null],[13,"GreaterEqual","","`x >= y`",7,null],[13,"Greater","","`x > y`",7,null],[13,"NotEqual","","`x != y`",7,null],[13,"Always","","`true`",7,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",8,null],[13,"Zero","","Set the value in the stencil buffer to zero.",8,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",8,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",8,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",8,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",8,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",8,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",8,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",9,null],[12,"value","","Reference value to compare the value in the stencil buffer with.",9,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",9,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",9,null],[12,"op_fail","","What operation to do if the stencil test fails.",9,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",9,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",9,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",10,null],[12,"back","","",10,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",11,null],[12,"write","","Specify whether to write to the depth buffer or not.",11,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",12,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",12,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",12,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",12,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",13,null],[13,"SourceAlpha","","",13,null],[13,"DestColor","","",13,null],[13,"DestAlpha","","",13,null],[13,"ConstColor","","",13,null],[13,"ConstAlpha","","",13,null],[4,"Factor","","",null,null],[13,"Zero","","",14,null],[13,"One","","",14,null],[13,"SourceAlphaSaturated","","",14,null],[13,"ZeroPlus","","",14,null],[13,"OneMinus","","",14,null],[3,"BlendChannel","","",null,null],[12,"equation","","",15,null],[12,"source","","",15,null],[12,"destination","","",15,null],[3,"Blend","","",null,null],[12,"color","","",16,null],[12,"alpha","","",16,null],[12,"value","","",16,null],[3,"ColorMask","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[0,"target","graphics::draw_state","Render target specification.",null,null],[6,"Layer","graphics::draw_state::target","",null,null],[6,"Level","","",null,null],[6,"Depth","","",null,null],[6,"Stencil","","",null,null],[3,"Rect","","A screen space rectangle",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[12,"w","","",18,null],[12,"h","","",18,null],[6,"ColorValue","","",null,null],[3,"Mask","","/// Output mask, used for blitting and clearing",null,null],[17,"COLOR","","",null,null],[17,"COLOR0","","",null,null],[17,"COLOR1","","",null,null],[17,"COLOR2","","",null,null],[17,"COLOR3","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[3,"Mirror","","/// Mirroring flags, used for blitting",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[3,"ClearData","","How to clear a frame.",null,null],[12,"color","","The color to clear the frame with",21,null],[12,"depth","","The depth value to clear the frame with",21,null],[12,"stencil","","The stencil value to clear the frame with",21,null],[3,"DrawState","graphics::draw_state","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",22,null],[12,"multi_sample","","Multi-sampling mode",22,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",22,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",22,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",22,null],[12,"blend","","Blend function to use. If None, no blending is done.",22,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",22,null],[4,"BlendPreset","","Blend function presets for ease of use.",null,null],[13,"Add","","When combining two fragments, add their values together, saturating at 1.0",23,null],[13,"Multiply","","When combining two fragments, multiply their values together.",23,null],[13,"Alpha","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",23,null],[13,"Invert","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",23,null],[3,"DrawState","graphics","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",22,null],[12,"multi_sample","","Multi-sampling mode",22,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",22,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",22,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",22,null],[12,"blend","","Blend function to use. If None, no blending is done.",22,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",22,null],[11,"abs_transform","viewport","Computes absolute transform for 2D graphics,\nwhich uses a row major 2x3 matrix.\nThe origin is in the upper left corner of the viewport rectangle.\nThe x axis points to the right, and the y axis points down.\nThe units are in points (window coordinates).",24,null],[11,"clone","","",24,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[3,"Viewport","graphics","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels.\n```[x, y, width height]``` where ```(x, y)``` is lower left corner.",24,null],[12,"draw_size","","The size of frame buffer in pixels.",24,null],[12,"window_size","","The size of window in points.",24,null],[5,"default_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"clip_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"inside_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"outside_draw_state","","Returns a default draw state that does additive blending and no culling.",null,{"inputs":[],"output":{"name":"drawstate"}}],[5,"clear","","Clears the screen.",null,{"inputs":[{"name":"color"},{"name":"g"}],"output":null}],[5,"image","","Draws image.",null,null],[5,"ellipse","","Draws ellipse.",null,{"inputs":[{"name":"color"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"rectangle","","Draws rectangle.",null,{"inputs":[{"name":"color"},{"name":"r"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[5,"polygon","","Draws polygon.",null,{"inputs":[{"name":"color"},{"name":"polygon"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"character","","A text character",null,null],[3,"Character","graphics::character","Holds rendered character data.",null,null],[12,"offset","","The offset of character.",25,null],[12,"size","","The size of character, including space.",25,null],[12,"texture","","The texture of the character.",25,null],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",null,null],[16,"Texture","","The textyre type associated with the character cache.",26,null],[10,"character","","Get reference to character.",26,{"inputs":[{"name":"charactercache"},{"name":"fontsize"},{"name":"char"}],"output":{"name":"character"}}],[11,"width","","Return the width for some given text.",26,{"inputs":[{"name":"charactercache"},{"name":"fontsize"},{"name":"str"}],"output":{"name":"scalar"}}],[11,"clone","","",25,{"inputs":[{"name":"character"}],"output":{"name":"character"}}],[11,"left","","The left offset.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"top","","The top offset.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"width","","Gets width of character, including space to the next one.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[11,"height","","Sets height of character, including space to the next one.",25,{"inputs":[{"name":"character"}],"output":{"name":"f64"}}],[0,"context","graphics","Transformation context",null,null],[3,"Context","graphics::context","Drawing 2d context.",null,null],[12,"viewport","","Viewport information.",27,null],[12,"view","","View transformation.",27,null],[12,"transform","","Current transformation.",27,null],[12,"draw_state","","Current draw state settings.",27,null],[11,"clone","","",27,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new","","Creates a new drawing context.",27,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"new_viewport","","Creates a new context with absolute transform in point coordinates.",27,{"inputs":[{"name":"context"},{"name":"viewport"}],"output":{"name":"context"}}],[11,"abs","","Creates a new drawing context in absolute coordinates.",27,{"inputs":[{"name":"context"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"context"}}],[11,"view","","Moves the current transform to the view coordinate system.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"reset","","Moves the current transform to the default coordinate system.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"store_view","","Stores the current transform as new view.",27,{"inputs":[{"name":"context"}],"output":{"name":"self"}}],[11,"get_view_size","","Computes the current view size.",27,{"inputs":[{"name":"context"}],"output":{"name":"vec2d"}}],[0,"color","graphics","Helper methods for colors",null,null],[5,"grey","graphics::color","Returns a grey color",null,{"inputs":[{"name":"colorcomponent"}],"output":{"name":"color"}}],[5,"alpha","","Returns a semi-transparent white color",null,{"inputs":[{"name":"colorcomponent"}],"output":{"name":"color"}}],[5,"hex","","Converts from hexadecimal color format",null,{"inputs":[{"name":"str"}],"output":{"name":"color"}}],[17,"WHITE","","",null,null],[17,"BLACK","","",null,null],[17,"TRANSPARENT","","",null,null],[0,"polygon","graphics","Draw polygon",null,null],[3,"Polygon","graphics::polygon","A polygon",null,null],[12,"color","","The color of the polygon",28,null],[11,"clone","","",28,{"inputs":[{"name":"polygon"}],"output":{"name":"polygon"}}],[11,"new","","Creates new polygon",28,{"inputs":[{"name":"polygon"},{"name":"color"}],"output":{"name":"polygon"}}],[11,"color","","Sets color.",28,{"inputs":[{"name":"polygon"},{"name":"color"}],"output":{"name":"self"}}],[11,"draw","","Draws polygon",28,{"inputs":[{"name":"polygon"},{"name":"polygon"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation",28,{"inputs":[{"name":"polygon"},{"name":"polygons"},{"name":"scalar"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"line","graphics","Draw Line",null,null],[3,"Line","graphics::line","A colored line with a default border radius",null,null],[12,"color","","The line color",29,null],[12,"radius","","The line radius",29,null],[12,"shape","","The line shape",29,null],[4,"Shape","","The shape of the line",null,null],[13,"Square","","Square edges",30,null],[13,"Round","","Round edges",30,null],[13,"Bevel","","Bevel edges",30,null],[11,"clone","","",30,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"clone","","",29,{"inputs":[{"name":"line"}],"output":{"name":"line"}}],[11,"new","","Creates a new line",29,{"inputs":[{"name":"line"},{"name":"color"},{"name":"radius"}],"output":{"name":"line"}}],[11,"new_round","","Creates a new line",29,{"inputs":[{"name":"line"},{"name":"color"},{"name":"radius"}],"output":{"name":"line"}}],[11,"color","","Sets color.",29,{"inputs":[{"name":"line"},{"name":"color"}],"output":{"name":"self"}}],[11,"radius","","Sets radius.",29,{"inputs":[{"name":"line"},{"name":"radius"}],"output":{"name":"self"}}],[11,"width","","Sets width.",29,{"inputs":[{"name":"line"},{"name":"width"}],"output":{"name":"self"}}],[11,"shape","","Sets shape.",29,{"inputs":[{"name":"line"},{"name":"shape"}],"output":{"name":"self"}}],[11,"draw","","Draw the line.",29,{"inputs":[{"name":"line"},{"name":"l"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_arrow","","Draws an arrow",29,{"inputs":[{"name":"line"},{"name":"l"},{"name":"scalar"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"ellipse","graphics","Draw ellipse",null,null],[3,"Border","graphics::ellipse","Ellipse border",null,null],[12,"color","","The border color",31,null],[12,"radius","","The border radius",31,null],[3,"Ellipse","","An ellipse with filled color",null,null],[12,"color","","The ellipse color",32,null],[12,"border","","The ellipse border",32,null],[12,"resolution","","The resolution for the shape, 360 degrees.",32,null],[11,"clone","","",31,{"inputs":[{"name":"border"}],"output":{"name":"border"}}],[11,"clone","","",32,{"inputs":[{"name":"ellipse"}],"output":{"name":"ellipse"}}],[11,"new","","Creates a new ellipse",32,{"inputs":[{"name":"ellipse"},{"name":"color"}],"output":{"name":"ellipse"}}],[11,"new_border","","Creates a new ellipse border",32,{"inputs":[{"name":"ellipse"},{"name":"color"},{"name":"radius"}],"output":{"name":"ellipse"}}],[11,"color","","Sets ellipse color.",32,{"inputs":[{"name":"ellipse"},{"name":"color"}],"output":{"name":"self"}}],[11,"border","","Sets ellipse border.",32,{"inputs":[{"name":"ellipse"},{"name":"border"}],"output":{"name":"self"}}],[11,"maybe_border","","Sets optional ellipse border.",32,{"inputs":[{"name":"ellipse"},{"name":"option"}],"output":{"name":"self"}}],[11,"resolution","","Sets resolution of the ellipse smoothness.",32,{"inputs":[{"name":"ellipse"},{"name":"resolution"}],"output":{"name":"self"}}],[11,"draw","","Draws the ellipse.",32,{"inputs":[{"name":"ellipse"},{"name":"r"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"rectangle","graphics","Draw rectangle",null,null],[3,"Border","graphics::rectangle","The border of the rectangle",null,null],[12,"color","","The color of the border",33,null],[12,"radius","","The radius of the border",33,null],[3,"Rectangle","","A filled rectangle",null,null],[12,"color","","The rectangle color",34,null],[12,"shape","","The roundness of the rectangle",34,null],[12,"border","","The border",34,null],[4,"Shape","","The shape of the rectangle",null,null],[13,"Square","","Square corners",35,null],[13,"Round","","Round corners, with resolution per corner.",35,null],[13,"Bevel","","Bevel corners",35,null],[5,"centered","","Use x, y, half-width, half-height",null,{"inputs":[{"name":"rectangle"}],"output":{"name":"rectangle"}}],[5,"centered_square","","Use centered square",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[5,"square","","Use square with x, y in upper left corner",null,{"inputs":[{"name":"scalar"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[11,"clone","","",35,{"inputs":[{"name":"shape"}],"output":{"name":"shape"}}],[11,"clone","","",33,{"inputs":[{"name":"border"}],"output":{"name":"border"}}],[11,"clone","","",34,{"inputs":[{"name":"rectangle"}],"output":{"name":"rectangle"}}],[11,"new","","Creates a new rectangle.",34,{"inputs":[{"name":"rectangle"},{"name":"color"}],"output":{"name":"rectangle"}}],[11,"new_round","","Creates a new round rectangle.",34,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"new_border","","Creates a new rectangle border.",34,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"new_round_border","","Creates a new round rectangle border.",34,{"inputs":[{"name":"rectangle"},{"name":"color"},{"name":"radius"},{"name":"radius"}],"output":{"name":"rectangle"}}],[11,"color","","Sets color.",34,{"inputs":[{"name":"rectangle"},{"name":"color"}],"output":{"name":"self"}}],[11,"shape","","Sets shape.",34,{"inputs":[{"name":"rectangle"},{"name":"shape"}],"output":{"name":"self"}}],[11,"border","","Sets border.",34,{"inputs":[{"name":"rectangle"},{"name":"border"}],"output":{"name":"self"}}],[11,"maybe_border","","Sets optional border.",34,{"inputs":[{"name":"rectangle"},{"name":"option"}],"output":{"name":"self"}}],[11,"draw","","Draws the rectangle",34,{"inputs":[{"name":"rectangle"},{"name":"r"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"image","graphics","Draw an image",null,null],[3,"Image","graphics::image","An image",null,null],[12,"color","","The color",36,null],[12,"rectangle","","The rectangle to draw image inside",36,null],[12,"source_rectangle","","The image source rectangle",36,null],[11,"clone","","",36,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"new","","Creates a new image",36,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"new_colored","","Creates a new colored image",36,{"inputs":[{"name":"image"},{"name":"color"}],"output":{"name":"image"}}],[11,"color","","Sets color.",36,{"inputs":[{"name":"image"},{"name":"color"}],"output":{"name":"self"}}],[11,"maybe_color","","Sets optional color.",36,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"rect","","Sets rectangle.",36,{"inputs":[{"name":"image"},{"name":"r"}],"output":{"name":"self"}}],[11,"maybe_rect","","Sets optional rectangle.",36,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"src_rect","","Sets source rectangle.",36,{"inputs":[{"name":"image"},{"name":"sourcerectangle"}],"output":{"name":"self"}}],[11,"maybe_src_rect","","Sets optional source rectangle.",36,{"inputs":[{"name":"image"},{"name":"option"}],"output":{"name":"self"}}],[11,"draw","","Draws the image.",36,null],[0,"types","graphics","Contains type aliases used in this library",null,null],[6,"Area","graphics::types","The type used for area.",null,null],[6,"Color","","[red, green, blue, alpha]",null,null],[6,"ColorComponent","","The type used for color component.",null,null],[6,"Line","","[x1, y1, x2, y2]",null,null],[6,"SourceRectangle","","[x, y, w, h]",null,null],[6,"Polygon","","[p0, p1, ...]",null,null],[6,"Polygons","","A slice of polygons.",null,null],[6,"Radius","","The type used for radius.",null,null],[6,"Resolution","","The type used for resolution.",null,null],[6,"Ray","","[x, y, dir_x, dir_y]",null,null],[6,"Rectangle","","[x, y, w, h]",null,null],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]",null,null],[6,"Width","","The type used for width.",null,null],[6,"FontSize","","The type used for font size.",null,null],[0,"modular_index","graphics","Helper functions for computing modular index safely.",null,null],[5,"offset","graphics::modular_index","Computes modular offset safely for indices.",null,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"isize"}],"output":{"name":"usize"}}],[5,"previous","","Computes previous modular index safely.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[5,"next","","Computes next modular index safely.",null,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"usize"}}],[0,"text","graphics","Draw text",null,null],[3,"Text","graphics::text","Renders text",null,null],[12,"color","","The color",37,null],[12,"font_size","","The font size",37,null],[11,"clone","","",37,{"inputs":[{"name":"text"}],"output":{"name":"text"}}],[11,"new","","Creates a new text with black color",37,{"inputs":[{"name":"text"},{"name":"fontsize"}],"output":{"name":"text"}}],[11,"colored","","Creates a new colored text",37,{"inputs":[{"name":"text"},{"name":"color"},{"name":"fontsize"}],"output":{"name":"text"}}],[11,"draw","","Draws text with a character cache",37,{"inputs":[{"name":"text"},{"name":"str"},{"name":"c"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[0,"triangulation","graphics","Methods for converting shapes into triangles.",null,null],[5,"tx","graphics::triangulation","Transformed x coordinate as f32.",null,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"f32"}}],[5,"ty","","Transformed y coordinate as f32.",null,{"inputs":[{"name":"matrix2d"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"f32"}}],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation.",null,{"inputs":[{"name":"matrix2d"},{"name":"polygons"},{"name":"scalar"},{"name":"f"}],"output":null}],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"f"}],"output":null}],[5,"with_round_border_line_tri_list","","Streams a round border line.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"line"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_round_rectangle_tri_list","","Streams a round rectangle.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"stream_polygon_tri_list","","Streams a polygon into tri list.\nUses buffers that fit inside L1 cache.",null,{"inputs":[{"name":"matrix2d"},{"name":"e"},{"name":"f"}],"output":null}],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border.",null,{"inputs":[{"name":"resolution"},{"name":"matrix2d"},{"name":"rectangle"},{"name":"radius"},{"name":"radius"},{"name":"f"}],"output":null}],[5,"stream_quad_tri_list","","Streams a quad into tri list.",null,{"inputs":[{"name":"matrix2d"},{"name":"e"},{"name":"f"}],"output":null}],[5,"with_polygon_tri_list","","Splits polygon into convex segments.\nCreate a buffer that fits into L1 cache with 1KB overhead.",null,{"inputs":[{"name":"matrix2d"},{"name":"polygon"},{"name":"f"}],"output":null}],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle.",null,null],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle.",null,null],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image.",null,null],[0,"math","graphics","Various methods for computing with vectors.",null,null],[5,"multiply","graphics::math","Multiplies two matrices.",null,null],[5,"dot","","Computes the dot product.",null,null],[5,"cross","","Computes the cross product.",null,null],[5,"add","","Adds two vectors.",null,null],[5,"sub","","Subtracts 'b' from 'a'.",null,null],[5,"cast","","Converts to another vector type.",null,null],[5,"mul","","Multiplies two vectors component wise.",null,null],[5,"mul_scalar","","Multiplies the vector with a scalar.",null,null],[5,"square_len","","Computes the square length of a vector.",null,null],[5,"transform_pos","","Transforms a 2D position through matrix.",null,null],[5,"transform_vec","","Transforms a 2D vector through matrix.",null,null],[5,"perp","","Creates a perpendicular vector.",null,null],[5,"abs_transform","","Transforms from normalized to absolute coordinates.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"translate","","Creates a translation matrix.",null,{"inputs":[{"name":"vec2d"}],"output":{"name":"matrix2d"}}],[5,"rotate_radians","","Creates a rotation matrix.",null,{"inputs":[{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"orient","","Orients x axis to look at point.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"scale","","Create a scale matrix.",null,{"inputs":[{"name":"scalar"},{"name":"scalar"}],"output":{"name":"matrix2d"}}],[5,"shear","","Create a shear matrix.",null,{"inputs":[{"name":"vec2d"}],"output":{"name":"matrix2d"}}],[5,"identity","","Create an identity matrix.",null,{"inputs":[],"output":{"name":"matrix2d"}}],[5,"get_scale","","Extract scale information from matrix.",null,{"inputs":[{"name":"matrix2d"}],"output":{"name":"vec2d"}}],[5,"separation","","Compute the shortest vector from point to ray.\nA ray stores starting point and directional vector.",null,{"inputs":[{"name":"ray"},{"name":"vec2d"}],"output":{"name":"vec2d"}}],[5,"least_separation_4","","Returns the least separation out of four.\nEach seperation can be computed using `separation` function.\nThe separation returned can be used\nto solve collision of rectangles.",null,{"inputs":[{"name":"vec2d"},{"name":"vec2d"},{"name":"vec2d"},{"name":"vec2d"}],"output":{"name":"vec2d"}}],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides.",null,{"inputs":[{"name":"rectangle"},{"name":"scalar"}],"output":{"name":"rectangle"}}],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile.",null,{"inputs":[{"name":"rectangle"},{"name":"vec2d"}],"output":{"name":"rectangle"}}],[5,"relative_source_rectangle","","Computes a relative source rectangle using\nthe source rectangle as a tile.",null,{"inputs":[{"name":"sourcerectangle"},{"name":"i32"},{"name":"i32"}],"output":{"name":"sourcerectangle"}}],[5,"modular_offset","","Computes modular offset safely for numbers.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"area_centroid","","Computes the area and centroid of a simple polygon.",null,null],[5,"area","","Computes area of a simple polygon.",null,{"inputs":[{"name":"polygon"}],"output":{"name":"scalar"}}],[5,"centroid","","Computes centroid of a simple polygon.",null,{"inputs":[{"name":"polygon"}],"output":{"name":"vec2d"}}],[5,"line_side","","Returns a number that tells which side it is relative to a line.",null,{"inputs":[{"name":"line"},{"name":"vec2d"}],"output":{"name":"scalar"}}],[5,"inside_triangle","","Returns true if point is inside triangle.",null,{"inputs":[{"name":"triangle"},{"name":"vec2d"}],"output":{"name":"bool"}}],[5,"triangle_face","","Returns true if triangle is clockwise.",null,{"inputs":[{"name":"triangle"}],"output":{"name":"bool"}}],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric.",null,{"inputs":[{"name":"triangle"},{"name":"vec2d"}],"output":{"name":"vec3d"}}],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian.",null,{"inputs":[{"name":"triangle"},{"name":"vec3d"}],"output":{"name":"vec2d"}}],[5,"hsv","","Transform color with hue, saturation and value.",null,{"inputs":[{"name":"color"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"color"}}],[6,"Scalar","","The type used for scalars.",null,null],[6,"Matrix2d","","The type used for matrices.",null,null],[6,"Vec2d","","The type used for 2D vectors.",null,null],[6,"Vec3d","","The type used for 3D vectors.",null,null],[0,"deform","graphics","Least square deforming of a 2D grid.",null,null],[3,"DeformGrid","graphics::deform","Represents a deformed grid.",null,null],[12,"cols","","The number of columns in the grid.",38,null],[12,"rows","","The number of rows in the grid.",38,null],[12,"rect","","The grid undeformed, which is a plain rectangle.",38,null],[12,"vertices","","The vertices, deformed.",38,null],[12,"indices","","The triangle indices.",38,null],[12,"texture_coords","","The texture coordinates.",38,null],[12,"ps","","Initial position of control points.",38,null],[12,"qs","","The current position of control points.",38,null],[12,"wis","","A weight computation buffer, one for each control point.",38,null],[11,"clone","","",38,{"inputs":[{"name":"deformgrid"}],"output":{"name":"deformgrid"}}],[11,"new","","Creates a new DeformGrid.",38,{"inputs":[{"name":"deformgrid"},{"name":"rectangle"},{"name":"usize"},{"name":"usize"}],"output":{"name":"deformgrid"}}],[11,"set_current","","Sets current control position.",38,{"inputs":[{"name":"deformgrid"},{"name":"usize"},{"name":"vec2d"}],"output":null}],[11,"set_original","","Sets original control position.",38,{"inputs":[{"name":"deformgrid"},{"name":"usize"},{"name":"vec2d"}],"output":null}],[11,"reset_control_points","","Removes all control points.",38,{"inputs":[{"name":"deformgrid"}],"output":null}],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",38,{"inputs":[{"name":"deformgrid"}],"output":null}],[11,"hit","","Finds original coordinate.\nIf the deformed grid is overlapping itself, multiple hits might occur.\nReturns the first hit it finds.",38,{"inputs":[{"name":"deformgrid"},{"name":"vec2d"}],"output":{"name":"option"}}],[11,"draw_image","","Draws deformed image.",38,null],[11,"add_control_point","","Adds a control point, in original coordinates.",38,{"inputs":[{"name":"deformgrid"},{"name":"vec2d"}],"output":null}],[11,"draw_vertical_lines","","Draw vertical grid lines.",38,{"inputs":[{"name":"deformgrid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",38,{"inputs":[{"name":"deformgrid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"update","","Updates the grid, by deforming the vertices.",38,{"inputs":[{"name":"deformgrid"}],"output":null}],[0,"grid","graphics","A flat grid with square cells.",null,null],[3,"Grid","graphics::grid","Represents a flat grid with square cells.",null,null],[12,"cols","","Number of columns.",39,null],[12,"rows","","Number of rows.",39,null],[12,"units","","The width and height of each grid cell.",39,null],[3,"GridCells","","Iterates through the cells of a grid as (u32, u32).",null,null],[11,"clone","","",39,{"inputs":[{"name":"grid"}],"output":{"name":"grid"}}],[11,"clone","","",40,{"inputs":[{"name":"gridcells"}],"output":{"name":"gridcells"}}],[11,"draw","","Draws the grid.",39,{"inputs":[{"name":"grid"},{"name":"line"},{"name":"drawstate"},{"name":"matrix2d"},{"name":"g"}],"output":null}],[11,"cells","","Get a GridIterator for the grid",39,{"inputs":[{"name":"grid"}],"output":{"name":"gridcells"}}],[6,"Item","","",null,null],[11,"next","","",40,{"inputs":[{"name":"gridcells"}],"output":{"name":"option"}}],[0,"radians","graphics","Reexport radians helper trait from vecmath",null,null],[8,"Radians","graphics::radians","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"rad_to_deg","","Convert a value to degrees from radians.\nEquivalent to ```value * (180 / π)```.",41,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[7,"BACK_END_MAX_VERTEX_COUNT","graphics","Any triangulation method called on the back-end\nnever exceeds this number of vertices.\nThis can be used to initialize buffers that fit the chunk size.",null,null],[8,"Graphics","","Implemented by all graphics back-ends.",null,null],[16,"Texture","","The texture type associated with the back-end.",42,null],[10,"clear_color","","Clears background with a color.",42,null],[10,"clear_stencil","","Clears stencil buffer with a value.",42,{"inputs":[{"name":"graphics"},{"name":"u8"}],"output":null}],[10,"tri_list","","Renders list of 2d triangles.",42,null],[10,"tri_list_uv","","Renders list of 2d triangles.",42,null],[8,"SourceRectangled","","Should be implemented by contexts that\nhave source rectangle information.",null,null],[10,"src_rect","","Adds a source rectangle.",43,{"inputs":[{"name":"sourcerectangled"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[10,"src_rel","","Moves to a relative source rectangle using\nthe current source rectangle as tile.",43,{"inputs":[{"name":"sourcerectangled"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[10,"src_flip_h","","Flips the source rectangle horizontally.",43,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[10,"src_flip_v","","Flips the source rectangle vertically.",43,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",43,{"inputs":[{"name":"sourcerectangled"}],"output":{"name":"self"}}],[8,"Rectangled","","Should be implemented by contexts that have rectangle information.",null,null],[10,"margin","","Shrinks the current rectangle equally by all sides.",44,{"inputs":[{"name":"rectangled"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"expand","","Expands the current rectangle equally by all sides.",44,{"inputs":[{"name":"rectangled"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"rel","","Moves to a relative rectangle using the current rectangle as tile.",44,{"inputs":[{"name":"rectangled"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[8,"Transformed","","Implemented by contexts that can transform.",null,null],[10,"append_transform","","Appends transform to the current one.",45,{"inputs":[{"name":"transformed"},{"name":"matrix2d"}],"output":{"name":"self"}}],[10,"prepend_transform","","Prepends transform to the current one.",45,{"inputs":[{"name":"transformed"},{"name":"matrix2d"}],"output":{"name":"self"}}],[10,"trans","","Translate x an y in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"rot_deg","","Rotates degrees in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"rot_rad","","Rotate radians in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"orient","","Orients x axis to look at point locally.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[10,"scale","","Scales in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"zoom","","Scales in both directions in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"scalar"}],"output":{"name":"self"}}],[11,"flip_v","","Flips vertically in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_h","","Flips horizontally in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",45,{"inputs":[{"name":"transformed"}],"output":{"name":"self"}}],[10,"shear","","Shears in local coordinates.",45,{"inputs":[{"name":"transformed"},{"name":"vec2d"}],"output":{"name":"self"}}],[8,"Colored","","Implemented by contexts that contains color.",null,null],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"tint","","Mixes the current color with white.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"shade","","Mixes the current color with black.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"hue_deg","","Rotates hue by degrees.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[10,"hue_rad","","Rotates hue by radians.",46,{"inputs":[{"name":"colored"},{"name":"colorcomponent"}],"output":{"name":"self"}}],[11,"src_rect","graphics::types","",47,null],[11,"src_rel","","",47,null],[11,"src_flip_h","","",47,null],[11,"src_flip_v","","",47,null],[11,"src_flip_hv","","",47,null],[11,"expand","graphics","Expands the current rectangle equally by all sides.",44,null],[11,"margin","graphics::types","",48,null],[11,"rel","","",48,null],[11,"rot_deg","graphics","Rotates degrees in local coordinates.",45,null],[11,"zoom","","Scales in both directions in local coordinates.",45,null],[11,"flip_v","","Flips vertically in local coordinates.",45,null],[11,"flip_h","","Flips horizontally in local coordinates.",45,null],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",45,null],[11,"append_transform","graphics::math","",49,null],[11,"prepend_transform","","",49,null],[11,"trans","","",49,null],[11,"rot_rad","","",49,null],[11,"orient","","",49,null],[11,"scale","","",49,null],[11,"shear","","",49,null],[11,"append_transform","graphics::context","",27,null],[11,"prepend_transform","","",27,null],[11,"trans","","",27,null],[11,"rot_rad","","",27,null],[11,"orient","","",27,null],[11,"scale","","",27,null],[11,"shear","","",27,null],[11,"tint","graphics","Mixes the current color with white.",46,null],[11,"shade","","Mixes the current color with black.",46,null],[11,"hue_deg","","Rotates hue by degrees.",46,null],[11,"mul_rgba","graphics::types","",50,null],[11,"hue_rad","","",50,null],[11,"mul_rgba","graphics::line","",29,null],[11,"hue_rad","","",29,null],[11,"mul_rgba","graphics::ellipse","",32,null],[11,"hue_rad","","",32,null],[11,"mul_rgba","graphics::rectangle","",34,null],[11,"hue_rad","","",34,null]],"paths":[[8,"ImageSize"],[4,"FrontFace"],[3,"Offset"],[4,"CullFace"],[4,"RasterMethod"],[3,"Primitive"],[3,"MultiSample"],[4,"Comparison"],[4,"StencilOp"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"BlendChannel"],[3,"Blend"],[3,"ColorMask"],[3,"Rect"],[3,"Mask"],[3,"Mirror"],[3,"ClearData"],[3,"DrawState"],[4,"BlendPreset"],[3,"Viewport"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[3,"Line"],[4,"Shape"],[3,"Border"],[3,"Ellipse"],[3,"Border"],[3,"Rectangle"],[4,"Shape"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GridCells"],[8,"Radians"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]};
searchIndex['rustc_serialize'] = {"items":[[0,"","rustc_serialize","Support code for encoding and decoding types.",null,null],[11,"encode","collections::string","",0,{"inputs":[{"name":"string"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"string"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",1,{"inputs":[{"name":"box"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",1,{"inputs":[{"name":"box"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",2,{"inputs":[{"name":"rc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",2,{"inputs":[{"name":"rc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",3,{"inputs":[{"name":"vec"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",3,{"inputs":[{"name":"vec"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",4,{"inputs":[{"name":"option"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",4,{"inputs":[{"name":"option"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",5,{"inputs":[{"name":"phantomdata"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",5,{"inputs":[{"name":"phantomdata"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",6,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"result"}}],[11,"encode","","",7,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",7,{"inputs":[{"name":"pathbuf"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",8,{"inputs":[{"name":"cell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"cell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",9,{"inputs":[{"name":"refcell"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",9,{"inputs":[{"name":"refcell"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",10,{"inputs":[{"name":"arc"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",10,{"inputs":[{"name":"arc"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",11,{"inputs":[{"name":"linkedlist"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",11,{"inputs":[{"name":"linkedlist"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",12,{"inputs":[{"name":"vecdeque"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",12,{"inputs":[{"name":"vecdeque"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",13,{"inputs":[{"name":"btreemap"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",13,{"inputs":[{"name":"btreemap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",14,{"inputs":[{"name":"btreeset"},{"name":"s"}],"output":{"name":"result"}}],[11,"decode","","",14,{"inputs":[{"name":"btreeset"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",15,{"inputs":[{"name":"hashmap"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",15,{"inputs":[{"name":"hashmap"},{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",16,{"inputs":[{"name":"hashset"},{"name":"e"}],"output":{"name":"result"}}],[11,"decode","","",16,{"inputs":[{"name":"hashset"},{"name":"d"}],"output":{"name":"result"}}],[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",17,null],[12,"newline","","Newline to use",17,null],[12,"pad","","True to pad output with `=` characters",17,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",17,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",18,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",18,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",19,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",19,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",20,null],[13,"InvalidBase64Length","","The input had an invalid length",20,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",21,{"inputs":[{"name":"tobase64"},{"name":"config"}],"output":{"name":"string"}}],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",22,{"inputs":[{"name":"frombase64"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"characterset"}],"output":{"name":"characterset"}}],[11,"clone","","",19,{"inputs":[{"name":"newline"}],"output":{"name":"newline"}}],[11,"clone","","",17,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"clone","","",20,{"inputs":[{"name":"frombase64error"}],"output":{"name":"frombase64error"}}],[11,"fmt","","",20,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",20,{"inputs":[{"name":"frombase64error"}],"output":{"name":"str"}}],[11,"fmt","","",20,{"inputs":[{"name":"frombase64error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",23,null],[13,"InvalidHexLength","","The input had an invalid length",23,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",24,{"inputs":[{"name":"tohex"}],"output":{"name":"string"}}],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",25,{"inputs":[{"name":"fromhex"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"fromhexerror"}}],[11,"fmt","","",23,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"str"}}],[11,"fmt","","",23,{"inputs":[{"name":"fromhexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",26,null],[13,"U64","","",26,null],[13,"F64","","",26,null],[13,"String","","",26,null],[13,"Boolean","","",26,null],[13,"Array","","",26,null],[13,"Object","","",26,null],[13,"Null","","",26,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",27,null],[13,"InvalidNumber","","",27,null],[13,"EOFWhileParsingObject","","",27,null],[13,"EOFWhileParsingArray","","",27,null],[13,"EOFWhileParsingValue","","",27,null],[13,"EOFWhileParsingString","","",27,null],[13,"KeyMustBeAString","","",27,null],[13,"ExpectedColon","","",27,null],[13,"TrailingCharacters","","",27,null],[13,"TrailingComma","","",27,null],[13,"InvalidEscape","","",27,null],[13,"InvalidUnicodeCodePoint","","",27,null],[13,"LoneLeadingSurrogateInHexEscape","","",27,null],[13,"UnexpectedEndOfHexEscape","","",27,null],[13,"UnrecognizedHex","","",27,null],[13,"NotFourDigit","","",27,null],[13,"ControlCharacterInString","","",27,null],[13,"NotUtf8","","",27,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",28,null],[13,"IoError","","",28,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",29,null],[13,"ExpectedError","","",29,null],[13,"MissingFieldError","","",29,null],[13,"UnknownVariantError","","",29,null],[13,"ApplicationError","","",29,null],[13,"EOF","","",29,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",30,null],[13,"BadHashmapKey","","",30,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",31,null],[13,"ObjectEnd","","",31,null],[13,"ArrayStart","","",31,null],[13,"ArrayEnd","","",31,null],[13,"BooleanValue","","",31,null],[13,"I64Value","","",31,null],[13,"U64Value","","",31,null],[13,"F64Value","","",31,null],[13,"StringValue","","",31,null],[13,"NullValue","","",31,null],[13,"Error","","",31,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(\"foo\"), Key(\"bar\"), Index(3) and Key(\"x\") are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",32,null],[13,"Key","","",32,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",33,{"inputs":[{"name":"tojson"}],"output":{"name":"json"}}],[11,"fmt","","",26,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"eq","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"json"},{"name":"json"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"eq","","",27,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"errorcode"},{"name":"errorcode"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"errorcode"}],"output":{"name":"errorcode"}}],[11,"fmt","","",28,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"parsererror"},{"name":"parsererror"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"decodererror"},{"name":"decodererror"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"encodererror"}],"output":{"name":"self"}}],[11,"fmt","","",27,{"inputs":[{"name":"errorcode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",29,{"inputs":[{"name":"decodererror"}],"output":{"name":"str"}}],[11,"cause","","",29,{"inputs":[{"name":"decodererror"}],"output":{"name":"option"}}],[11,"fmt","","",29,{"inputs":[{"name":"decodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",28,{"inputs":[{"name":"parsererror"}],"output":{"name":"str"}}],[11,"fmt","","",28,{"inputs":[{"name":"parsererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"encodererror"}],"output":{"name":"str"}}],[11,"fmt","","",30,{"inputs":[{"name":"encodererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",30,{"inputs":[{"name":"encodererror"},{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",34,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",34,{"inputs":[{"name":"encoder"},{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[6,"Error","","",null,null],[11,"emit_nil","","",34,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_usize","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"encoderesult"}}],[11,"emit_u64","","",34,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"encoderesult"}}],[11,"emit_u32","","",34,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"encoderesult"}}],[11,"emit_u16","","",34,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"encoderesult"}}],[11,"emit_u8","","",34,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"encoderesult"}}],[11,"emit_isize","","",34,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"encoderesult"}}],[11,"emit_i64","","",34,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"encoderesult"}}],[11,"emit_i32","","",34,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"encoderesult"}}],[11,"emit_i16","","",34,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"encoderesult"}}],[11,"emit_i8","","",34,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"encoderesult"}}],[11,"emit_bool","","",34,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"encoderesult"}}],[11,"emit_f64","","",34,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"encoderesult"}}],[11,"emit_f32","","",34,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"encoderesult"}}],[11,"emit_char","","",34,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"encoderesult"}}],[11,"emit_str","","",34,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"encoderesult"}}],[11,"emit_enum","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_variant_arg","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_enum_struct_variant_field","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_struct_field","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_arg","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct","","",34,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_tuple_struct_arg","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option","","",34,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_option_none","","",34,{"inputs":[{"name":"encoder"}],"output":{"name":"encoderesult"}}],[11,"emit_option_some","","",34,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_seq_elt","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_key","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"emit_map_elt_val","","",34,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"encoderesult"}}],[11,"encode","","",26,{"inputs":[{"name":"json"},{"name":"s"}],"output":{"name":"result"}}],[11,"from_reader","","Decodes a json value from an `&mut io::Read`",26,{"inputs":[{"name":"json"},{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",26,{"inputs":[{"name":"json"}],"output":{"name":"prettyjson"}}],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",26,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"bool"}}],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",26,{"inputs":[{"name":"json"}],"output":{"name":"option"}}],[6,"Output","","",null,null],[11,"index","","",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"json"}}],[6,"Output","","",null,null],[11,"index","","",26,{"inputs":[{"name":"json"},{"name":"usize"}],"output":{"name":"json"}}],[11,"fmt","","",31,{"inputs":[{"name":"jsonevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"jsonevent"},{"name":"jsonevent"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"stackelement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"stackelement"}],"output":{"name":"stackelement"}}],[11,"eq","","",32,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"stackelement"},{"name":"stackelement"}],"output":{"name":"bool"}}],[11,"new","","",35,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",35,{"inputs":[{"name":"stack"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the stack is empty.",35,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",35,{"inputs":[{"name":"stack"},{"name":"usize"}],"output":{"name":"stackelement"}}],[11,"is_equal_to","","Compares this stack with an array of StackElements.",35,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",35,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",35,null],[11,"top","","Returns the top-most element (if any).",35,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",36,{"inputs":[{"name":"parser"}],"output":{"name":"option"}}],[11,"new","","Creates the JSON parser.",36,{"inputs":[{"name":"parser"},{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",36,{"inputs":[{"name":"parser"}],"output":{"name":"stack"}}],[11,"new","","Create a JSON Builder.",37,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",37,{"inputs":[{"name":"builder"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",38,{"inputs":[{"name":"decoder"},{"name":"json"}],"output":{"name":"decoder"}}],[6,"Error","","",null,null],[11,"read_nil","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_usize","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u8","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u16","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u32","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_u64","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_isize","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i8","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i16","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i32","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_i64","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f32","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_f64","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_bool","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_char","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_str","","",38,{"inputs":[{"name":"decoder"}],"output":{"name":"decoderesult"}}],[11,"read_enum","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_variant","","",38,null],[11,"read_enum_variant_arg","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_enum_struct_variant","","",38,null],[11,"read_enum_struct_variant_field","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_struct_field","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_arg","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct","","",38,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_tuple_struct_arg","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_option","","",38,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq","","",38,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_seq_elt","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map","","",38,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_key","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"read_map_elt_val","","",38,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"decoderesult"}}],[11,"error","","",38,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"decodererror"}}],[11,"to_json","","",26,{"inputs":[{"name":"json"}],"output":{"name":"json"}}],[11,"to_json","collections::string","",0,{"inputs":[{"name":"string"}],"output":{"name":"json"}}],[11,"to_json","collections::vec","",3,{"inputs":[{"name":"vec"}],"output":{"name":"json"}}],[11,"to_json","collections::btree::map","",13,{"inputs":[{"name":"btreemap"}],"output":{"name":"json"}}],[11,"to_json","std::collections::hash::map","",15,{"inputs":[{"name":"hashmap"}],"output":{"name":"json"}}],[11,"to_json","core::option","",4,{"inputs":[{"name":"option"}],"output":{"name":"json"}}],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",26,{"inputs":[{"name":"json"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",39,{"inputs":[{"name":"prettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","Encodes a json value into a string",40,{"inputs":[{"name":"asjson"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"indent","","Set the indentation level for the emitted JSON",41,{"inputs":[{"name":"asprettyjson"},{"name":"u32"}],"output":{"name":"asprettyjson"}}],[11,"fmt","","Encodes a json value into a string",41,{"inputs":[{"name":"asprettyjson"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","","",null,null],[11,"from_str","","",26,{"inputs":[{"name":"json"},{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","",null,null],[16,"Error","","",42,null],[10,"read_nil","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_usize","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u64","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u32","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u16","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_u8","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_isize","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i64","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i32","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i16","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_i8","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_bool","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f64","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_f32","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_char","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_str","","",42,{"inputs":[{"name":"decoder"}],"output":{"name":"result"}}],[10,"read_enum","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_variant","","",42,null],[10,"read_enum_variant_arg","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_enum_struct_variant","","",42,null],[10,"read_enum_struct_variant_field","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_struct_field","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_arg","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct","","",42,{"inputs":[{"name":"decoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_tuple_struct_arg","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_option","","",42,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq","","",42,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_seq_elt","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map","","",42,{"inputs":[{"name":"decoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_key","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"read_map_elt_val","","",42,{"inputs":[{"name":"decoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"error","","",42,{"inputs":[{"name":"decoder"},{"name":"str"}],"output":{"name":"error"}}],[8,"Encoder","","",null,null],[16,"Error","","",43,null],[10,"emit_nil","","",43,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_usize","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"}],"output":{"name":"result"}}],[10,"emit_u64","","",43,{"inputs":[{"name":"encoder"},{"name":"u64"}],"output":{"name":"result"}}],[10,"emit_u32","","",43,{"inputs":[{"name":"encoder"},{"name":"u32"}],"output":{"name":"result"}}],[10,"emit_u16","","",43,{"inputs":[{"name":"encoder"},{"name":"u16"}],"output":{"name":"result"}}],[10,"emit_u8","","",43,{"inputs":[{"name":"encoder"},{"name":"u8"}],"output":{"name":"result"}}],[10,"emit_isize","","",43,{"inputs":[{"name":"encoder"},{"name":"isize"}],"output":{"name":"result"}}],[10,"emit_i64","","",43,{"inputs":[{"name":"encoder"},{"name":"i64"}],"output":{"name":"result"}}],[10,"emit_i32","","",43,{"inputs":[{"name":"encoder"},{"name":"i32"}],"output":{"name":"result"}}],[10,"emit_i16","","",43,{"inputs":[{"name":"encoder"},{"name":"i16"}],"output":{"name":"result"}}],[10,"emit_i8","","",43,{"inputs":[{"name":"encoder"},{"name":"i8"}],"output":{"name":"result"}}],[10,"emit_bool","","",43,{"inputs":[{"name":"encoder"},{"name":"bool"}],"output":{"name":"result"}}],[10,"emit_f64","","",43,{"inputs":[{"name":"encoder"},{"name":"f64"}],"output":{"name":"result"}}],[10,"emit_f32","","",43,{"inputs":[{"name":"encoder"},{"name":"f32"}],"output":{"name":"result"}}],[10,"emit_char","","",43,{"inputs":[{"name":"encoder"},{"name":"char"}],"output":{"name":"result"}}],[10,"emit_str","","",43,{"inputs":[{"name":"encoder"},{"name":"str"}],"output":{"name":"result"}}],[10,"emit_enum","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_variant_arg","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_enum_struct_variant_field","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_struct_field","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_arg","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct","","",43,{"inputs":[{"name":"encoder"},{"name":"str"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_tuple_struct_arg","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option","","",43,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_option_none","","",43,{"inputs":[{"name":"encoder"}],"output":{"name":"result"}}],[10,"emit_option_some","","",43,{"inputs":[{"name":"encoder"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_seq_elt","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_key","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit_map_elt_val","","",43,{"inputs":[{"name":"encoder"},{"name":"usize"},{"name":"f"}],"output":{"name":"result"}}],[8,"Decodable","","",null,null],[10,"decode","","",44,{"inputs":[{"name":"decodable"},{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","",null,null],[10,"encode","","",45,{"inputs":[{"name":"encodable"},{"name":"s"}],"output":{"name":"result"}}],[8,"DecoderHelpers","","",null,null],[10,"read_to_vec","","",46,{"inputs":[{"name":"decoderhelpers"},{"name":"f"}],"output":{"name":"result"}}],[8,"EncoderHelpers","","",null,null],[10,"emit_from_vec","","",47,null]],"paths":[[3,"String"],[3,"Box"],[3,"Rc"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex['rand'] = {"items":[[0,"","rand","Utilities for random number generation",null,null],[3,"OsRng","","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[3,"Generator","","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::<i32>()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` & `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",0,null],[12,"item","","The actual item which is being weighted",0,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low < high`, so this\nfunction doesn't have to repeat the check.",1,{"inputs":[{"name":"samplerange"},{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",1,{"inputs":[{"name":"samplerange"},{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",2,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low >= high`.",2,{"inputs":[{"name":"range"},{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",2,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"sup"}}],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",3,{"inputs":[{"name":"gamma"}],"output":{"name":"gamma"}}],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",3,{"inputs":[{"name":"gamma"},{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",3,{"inputs":[{"name":"gamma"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",4,{"inputs":[{"name":"chisquared"}],"output":{"name":"chisquared"}}],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k < 0`.",4,{"inputs":[{"name":"chisquared"},{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",4,{"inputs":[{"name":"chisquared"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",5,{"inputs":[{"name":"fisherf"}],"output":{"name":"fisherf"}}],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",5,{"inputs":[{"name":"fisherf"},{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",5,{"inputs":[{"name":"fisherf"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",6,{"inputs":[{"name":"studentt"}],"output":{"name":"studentt"}}],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n <= 0`.",6,{"inputs":[{"name":"studentt"},{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",6,{"inputs":[{"name":"studentt"},{"name":"r"}],"output":{"name":"f64"}}],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",7,{"inputs":[{"name":"standardnormal"}],"output":{"name":"standardnormal"}}],[11,"rand","","",7,{"inputs":[{"name":"standardnormal"},{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",8,{"inputs":[{"name":"normal"}],"output":{"name":"normal"}}],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",8,{"inputs":[{"name":"normal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",8,{"inputs":[{"name":"normal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"clone","","",9,{"inputs":[{"name":"lognormal"}],"output":{"name":"lognormal"}}],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",9,{"inputs":[{"name":"lognormal"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",9,{"inputs":[{"name":"lognormal"},{"name":"r"}],"output":{"name":"f64"}}],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",10,{"inputs":[{"name":"exp1"}],"output":{"name":"exp1"}}],[11,"rand","","",10,{"inputs":[{"name":"exp1"},{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",11,{"inputs":[{"name":"exp"}],"output":{"name":"exp"}}],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda <= 0`.",11,{"inputs":[{"name":"exp"},{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[11,"ind_sample","","",11,{"inputs":[{"name":"exp"},{"name":"r"}],"output":{"name":"f64"}}],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",12,{"inputs":[{"name":"sample"},{"name":"r"}],"output":{"name":"support"}}],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",13,{"inputs":[{"name":"independentsample"},{"name":"r"}],"output":{"name":"support"}}],[11,"clone","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"self"}}],[11,"sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"ind_sample","","",14,{"inputs":[{"name":"randsample"},{"name":"r"}],"output":{"name":"sup"}}],[11,"new","","",14,{"inputs":[{"name":"randsample"}],"output":{"name":"randsample"}}],[11,"clone","","",0,{"inputs":[{"name":"weighted"}],"output":{"name":"weighted"}}],[11,"new","","Create a new `WeightedChoice`.",15,null],[11,"sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[11,"ind_sample","","",15,{"inputs":[{"name":"weightedchoice"},{"name":"r"}],"output":{"name":"t"}}],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"clone","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"isaacrng"}}],[11,"next_u32","","",16,{"inputs":[{"name":"isaacrng"}],"output":{"name":"u32"}}],[11,"reseed","","",16,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",16,null],[11,"rand","","",16,{"inputs":[{"name":"isaacrng"},{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"clone","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"isaac64rng"}}],[11,"next_u32","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u32"}}],[11,"next_u64","","",17,{"inputs":[{"name":"isaac64rng"}],"output":{"name":"u64"}}],[11,"reseed","","",17,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",17,null],[11,"rand","","",17,{"inputs":[{"name":"isaac64rng"},{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",18,{"inputs":[{"name":"chacharng"},{"name":"u64"},{"name":"u64"}],"output":null}],[11,"next_u32","","",18,{"inputs":[{"name":"chacharng"}],"output":{"name":"u32"}}],[11,"reseed","","",18,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",18,null],[11,"rand","","",18,{"inputs":[{"name":"chacharng"},{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",19,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",20,{"inputs":[{"name":"reseeder"},{"name":"r"}],"output":null}],[11,"new","","Create a new `ReseedingRng` with the given parameters.",19,{"inputs":[{"name":"reseedingrng"},{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",19,{"inputs":[{"name":"reseedingrng"}],"output":null}],[11,"next_u32","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",19,{"inputs":[{"name":"reseedingrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",19,null],[11,"clone","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"reseed","","",21,{"inputs":[{"name":"reseedwithdefault"},{"name":"r"}],"output":null}],[11,"default","","",21,{"inputs":[{"name":"reseedwithdefault"}],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",22,{"inputs":[{"name":"open01"},{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",23,{"inputs":[{"name":"closed01"},{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","core::option","",24,{"inputs":[{"name":"option"},{"name":"r"}],"output":{"name":"option"}}],[0,"os","rand","Interfaces to the operating system provided random number\ngenerators.",null,null],[11,"new","","Create a new `OsRng`.",25,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",25,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",25,null],[0,"read","","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",26,{"inputs":[{"name":"readrng"},{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",26,{"inputs":[{"name":"readrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",26,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",27,{"inputs":[{"name":"rand"},{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u32"}}],[11,"next_u64","","Return the next random u64.",28,{"inputs":[{"name":"rng"}],"output":{"name":"u64"}}],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f32"}}],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",28,{"inputs":[{"name":"rng"}],"output":{"name":"f64"}}],[11,"fill_bytes","","Fill `dest` with random data.",28,null],[11,"gen","","Return a random value of a `Rand` type.",28,{"inputs":[{"name":"rng"}],"output":{"name":"t"}}],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",28,{"inputs":[{"name":"rng"}],"output":{"name":"generator"}}],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",28,{"inputs":[{"name":"rng"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",28,{"inputs":[{"name":"rng"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",28,{"inputs":[{"name":"rng"}],"output":{"name":"asciigenerator"}}],[11,"choose","","Return a random element from `values`.",28,null],[11,"shuffle","","Shuffle a mutable slice in place.",28,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":null}],[10,"from_seed","","Create a new RNG with the given seed.",29,{"inputs":[{"name":"seedablerng"},{"name":"seed"}],"output":{"name":"self"}}],[6,"Item","","",null,null],[11,"next","","",30,{"inputs":[{"name":"generator"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",31,{"inputs":[{"name":"asciigenerator"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",32,{"inputs":[{"name":"xorshiftrng"}],"output":{"name":"u32"}}],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",32,null],[11,"rand","","",32,{"inputs":[{"name":"xorshiftrng"},{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",33,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",33,null],[11,"from_seed","","",33,null],[11,"clone","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",34,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",34,null]],"paths":[[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"Open01"],[3,"Closed01"],[4,"Option"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex['wayland_client'] = {"items":[[0,"","wayland_client","This library provides a Rust interface on the Wayland client library.",null,null],[5,"is_wayland_lib_available","","Returns whether the library `libwayland-client.so` has been found and could be loaded.",null,{"inputs":[],"output":{"name":"bool"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",0,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",0,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",0,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",0,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",0,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",0,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value or returns a default.",0,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value or computes a default.",0,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",0,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",0,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",0,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",0,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",1,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",1,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",1,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",1,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",2,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"from_u64","","Makes a bignum from `u64` value.",2,{"inputs":[{"name":"big32x36"},{"name":"u64"}],"output":{"name":"big32x36"}}],[11,"is_zero","","Returns true if the bignum is zero.",2,{"inputs":[{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",2,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",2,{"inputs":[{"name":"big32x36"},{"name":"usize"}],"output":{"name":"big32x36"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",2,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",2,null],[11,"eq","","",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"option"}}],[11,"cmp","","",2,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"ordering"}}],[11,"clone","","",2,{"inputs":[{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"fmt","","",2,{"inputs":[{"name":"big32x36"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",3,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"is_zero","","Returns true if the bignum is zero.",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",3,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",3,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",3,null],[11,"eq","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",3,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",3,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",3,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",4,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",6,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",7,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",7,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",7,null],[11,"clone","","",8,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",8,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",8,null],[11,"fmt","","",9,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num","",10,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",11,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",11,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",12,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",11,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"fmt","","",11,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",13,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",14,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",15,null],[11,"fmt","","",15,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",15,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",15,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",16,null],[11,"get","","Dereferences the content.",16,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",16,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",16,null],[11,"fmt","","",16,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",18,null],[11,"eq","","",18,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",18,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",18,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",19,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",19,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",20,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",21,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",22,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",23,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",23,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",23,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","wayland_client::ffi","",24,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",24,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",24,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",24,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",24,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",24,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",24,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",25,null],[11,"fmt","","",25,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",25,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"default","core::atomic","",26,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",27,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",28,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",29,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",30,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",26,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",26,null],[11,"swap","","Stores a value into the bool, returning the old value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",26,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",27,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",27,null],[11,"swap","","Stores a value into the isize, returning the old value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",27,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",28,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",28,null],[11,"swap","","Stores a value into the usize, returning the old value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",28,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",29,null],[11,"load","","Loads a value from the pointer.",29,null],[11,"store","","Stores a value into the pointer.",29,null],[11,"swap","","Stores a value into the pointer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",29,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",31,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",31,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",31,null],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",31,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",31,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",31,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",31,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",33,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",33,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",33,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",33,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",33,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",33,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",33,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",33,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",33,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",34,null],[11,"clone","","",34,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",35,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"drop","","",36,null],[11,"deref","","",37,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",37,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",38,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",38,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",38,null],[11,"clone","core::char","",39,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",40,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",39,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",41,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",42,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",41,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",43,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",43,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",43,null],[11,"next_back","","",43,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",43,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",43,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",44,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",44,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",45,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",45,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",45,null],[11,"next_back","","",45,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",45,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",45,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",46,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",46,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"indexable","","",46,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",46,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",47,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"next_back","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",47,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",47,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",48,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",48,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"next_back","","",48,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",48,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",48,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",49,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",49,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",49,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",49,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",50,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",50,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"next_back","","",50,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",51,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",51,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"nth","","",52,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",52,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",52,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",53,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",53,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",53,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",53,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",53,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",53,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",53,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",54,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"clone","","",55,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",55,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"clone","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",56,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"indexable","","",56,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",56,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",57,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",57,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"indexable","","",57,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",57,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",58,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",59,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",60,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",60,null],[11,"next_back","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",60,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",60,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",60,null],[11,"clone","","",61,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",61,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",61,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",61,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",62,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",62,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"clone","","",63,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",21,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",20,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",63,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"clone","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",63,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next","core::ops","",20,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",20,null],[11,"next_back","","",20,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",21,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",65,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",65,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next_back","","",65,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",65,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",65,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"hash","core::option","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",0,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",0,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",66,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",66,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",67,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",68,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",0,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",70,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",71,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",72,null],[11,"fmt","","",72,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",72,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",72,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",72,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",72,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",72,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",72,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",72,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",72,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",72,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",72,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",72,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",72,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",72,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",72,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",72,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",72,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",72,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",72,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",72,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",72,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",73,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",73,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",74,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",75,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"next_back","","",75,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",72,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",76,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",77,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",78,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",79,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",80,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",81,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",82,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",83,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",84,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",85,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",86,null],[11,"next","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"count","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",86,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"indexable","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",86,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",87,null],[11,"next","","",87,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"count","","",87,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",87,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",87,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",87,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",88,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",88,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",89,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",89,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",90,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next","","",91,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next","","",92,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next","","",93,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next","","",94,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"clone","","",95,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",95,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"indexable","","",95,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"idx","","",95,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",96,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",96,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"next_back","","",96,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"indexable","","",96,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"idx","","",96,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",97,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next_back","","",97,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",98,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",98,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",99,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",100,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",99,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",99,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",99,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",101,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"eq","","",102,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"haystack","","",101,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",101,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",101,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",103,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",104,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",105,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"eq","core::str","",106,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",106,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",107,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",107,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",107,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",108,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"next_back","","",108,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",109,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",109,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"next_back","","",109,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",110,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",111,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",111,null],[11,"call_mut","","",111,null],[11,"call_once","","",111,null],[11,"next","","",110,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",110,null],[11,"next_back","","",110,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",110,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",112,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",113,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",113,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",114,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",114,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",113,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",114,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",115,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",115,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",116,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",116,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",115,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",116,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",117,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",118,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",118,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",119,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",119,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",120,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",121,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",122,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",122,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",121,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",122,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",123,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",124,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",124,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",125,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",124,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",125,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",126,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"next_back","","",126,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",127,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",128,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",128,null],[11,"call_mut","","",128,null],[11,"call_once","","",128,null],[11,"next","","",127,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"clone","","",130,{"inputs":[{"name":"oldsearcher"}],"output":{"name":"oldsearcher"}}],[11,"clone","","",131,{"inputs":[{"name":"oldmatchindices"}],"output":{"name":"oldmatchindices"}}],[11,"clone","","",132,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",133,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",133,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",133,null],[11,"finish","","",133,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",133,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",133,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",134,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",135,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",136,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",137,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",138,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",139,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",140,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",141,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",142,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Consumes the `DebugStruct`, finishing output and returning any error\nencountered.",142,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",143,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Consumes the `DebugTuple`, finishing output and returning any error\nencountered.",143,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"finish","","",144,null],[11,"entry","","Adds a new entry to the set output.",145,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",145,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the set output.",146,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",146,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",147,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"finish","","Consumes the `DebugMap`, finishing output and returning any error\nencountered.",147,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"clone","core::fmt::rt::v1","",148,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",149,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",150,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",151,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",152,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"fmt","core::fmt","",153,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",154,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",155,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",156,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",156,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",157,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",157,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",157,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",157,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",157,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",157,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",157,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",157,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",157,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",157,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",157,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",157,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",157,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",157,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"fmt","","",153,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",18,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",31,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",33,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",37,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"core","wayland_client","The core wayland protocol.",null,null],[3,"Buffer","wayland_client::core","A view into a memory pool.",null,null],[3,"Compositor","","A wayland compositor.",null,null],[3,"Display","","A wayland Display.",null,null],[3,"Keyboard","","A keyboard interface.",null,null],[3,"KeyboardId","","An opaque unique identifier to a keyboard, can be tested for equality.",null,null],[3,"Region","","Region represent a set of pixel.",null,null],[3,"Registry","","A Registry, giving access to the global wayland objects.",null,null],[3,"Output","","A physical output",null,null],[3,"OutputMode","","Representation of an output mode",null,null],[12,"width","","width of the mode in hardware units",158,null],[12,"height","","height of the mode in hardware units",158,null],[12,"refresh","","vertical refresh rate in mHz",158,null],[3,"OutputId","","An opaque unique identifier to an output, can be tested for equality.",null,null],[3,"Pointer","","A pointer interface.",null,null],[3,"PointerId","","An opaque unique identifier to a pointer, can be tested for equality.",null,null],[3,"Seat","","A global wayland Seat.",null,null],[3,"Shell","","A handle to a wayland `wl_shell`.",null,null],[3,"ShellSurface","","A wayland `shell_surface`.",null,null],[3,"Shm","","The shared memory controller.",null,null],[3,"ShmPool","","A shared memory pool.",null,null],[3,"SubCompositor","","A wayland subcompositor.",null,null],[3,"SubSurface","","A wayland subsurface.",null,null],[3,"WSurface","","A wayland Surface.",null,null],[3,"SurfaceId","","An opaque unique identifier to a surface, can be tested for equality.",null,null],[4,"ShellFullscreenMethod","","Different methods of fullscreen for a shell surface.",null,null],[13,"Default","","Default method: let the compositor decide.",159,null],[13,"Scale","","Match the sizes by scaling the content of the window to fit\nthe output dimensions.",159,null],[13,"Driver","","Match the sizes by changing the video mode of the graphic driver.\nAn optionnal framerate can be provided, if not the compositor will it.\nThe framerate is provided in mHz.",159,null],[13,"Fill","","Buffer is not scaled (but its intrisic scaling is still applied), unless\nit is bigger than the output: the compositor is then allowed to scale it down.",159,null],[4,"KeymapFormat","","",null,null],[13,"WL_KEYBOARD_KEYMAP_FORMAT_NO_KEYMAP","","",160,null],[13,"WL_KEYBOARD_KEYMAP_FORMAT_XKB_V1","","",160,null],[4,"KeyState","","",null,null],[13,"WL_KEYBOARD_KEY_STATE_RELEASED","","",161,null],[13,"WL_KEYBOARD_KEY_STATE_PRESSED","","",161,null],[4,"ScrollAxis","","",null,null],[13,"WL_POINTER_AXIS_VERTICAL_SCROLL","","",162,null],[13,"WL_POINTER_AXIS_HORIZONTAL_SCROLL","","",162,null],[4,"ButtonState","","",null,null],[13,"WL_POINTER_BUTTON_STATE_RELEASED","","",163,null],[13,"WL_POINTER_BUTTON_STATE_PRESSED","","",163,null],[4,"OutputTransform","","",null,null],[13,"WL_OUTPUT_TRANSFORM_NORMAL","","",164,null],[13,"WL_OUTPUT_TRANSFORM_90","","",164,null],[13,"WL_OUTPUT_TRANSFORM_180","","",164,null],[13,"WL_OUTPUT_TRANSFORM_270","","",164,null],[13,"WL_OUTPUT_TRANSFORM_FLIPPED","","",164,null],[13,"WL_OUTPUT_TRANSFORM_FLIPPED_90","","",164,null],[13,"WL_OUTPUT_TRANSFORM_FLIPPED_180","","",164,null],[13,"WL_OUTPUT_TRANSFORM_FLIPPED_270","","",164,null],[4,"OutputSubpixel","","",null,null],[13,"WL_OUTPUT_SUBPIXEL_UNKNOWN","","",165,null],[13,"WL_OUTPUT_SUBPIXEL_NONE","","",165,null],[13,"WL_OUTPUT_SUBPIXEL_HORIZONTAL_RGB","","",165,null],[13,"WL_OUTPUT_SUBPIXEL_HORIZONTAL_BGR","","",165,null],[13,"WL_OUTPUT_SUBPIXEL_VERTICAL_RGB","","",165,null],[13,"WL_OUTPUT_SUBPIXEL_VERTICAL_BGR","","",165,null],[4,"ShellSurfaceResize","","",null,null],[13,"WL_SHELL_SURFACE_RESIZE_NONE","","",166,null],[13,"WL_SHELL_SURFACE_RESIZE_TOP","","",166,null],[13,"WL_SHELL_SURFACE_RESIZE_BOTTOM","","",166,null],[13,"WL_SHELL_SURFACE_RESIZE_LEFT","","",166,null],[13,"WL_SHELL_SURFACE_RESIZE_TOP_LEFT","","",166,null],[13,"WL_SHELL_SURFACE_RESIZE_BOTTOM_LEFT","","",166,null],[13,"WL_SHELL_SURFACE_RESIZE_RIGHT","","",166,null],[13,"WL_SHELL_SURFACE_RESIZE_TOP_RIGHT","","",166,null],[13,"WL_SHELL_SURFACE_RESIZE_BOTTOM_RIGHT","","",166,null],[4,"ShmFormat","","",null,null],[13,"WL_SHM_FORMAT_ARGB8888","","",167,null],[13,"WL_SHM_FORMAT_XRGB8888","","",167,null],[13,"WL_SHM_FORMAT_C8","","",167,null],[13,"WL_SHM_FORMAT_RGB332","","",167,null],[13,"WL_SHM_FORMAT_BGR233","","",167,null],[13,"WL_SHM_FORMAT_XRGB4444","","",167,null],[13,"WL_SHM_FORMAT_XBGR4444","","",167,null],[13,"WL_SHM_FORMAT_RGBX4444","","",167,null],[13,"WL_SHM_FORMAT_BGRX4444","","",167,null],[13,"WL_SHM_FORMAT_ARGB4444","","",167,null],[13,"WL_SHM_FORMAT_ABGR4444","","",167,null],[13,"WL_SHM_FORMAT_RGBA4444","","",167,null],[13,"WL_SHM_FORMAT_BGRA4444","","",167,null],[13,"WL_SHM_FORMAT_XRGB1555","","",167,null],[13,"WL_SHM_FORMAT_XBGR1555","","",167,null],[13,"WL_SHM_FORMAT_RGBX5551","","",167,null],[13,"WL_SHM_FORMAT_BGRX5551","","",167,null],[13,"WL_SHM_FORMAT_ARGB1555","","",167,null],[13,"WL_SHM_FORMAT_ABGR1555","","",167,null],[13,"WL_SHM_FORMAT_RGBA5551","","",167,null],[13,"WL_SHM_FORMAT_BGRA5551","","",167,null],[13,"WL_SHM_FORMAT_RGB565","","",167,null],[13,"WL_SHM_FORMAT_BGR565","","",167,null],[13,"WL_SHM_FORMAT_RGB888","","",167,null],[13,"WL_SHM_FORMAT_BGR888","","",167,null],[13,"WL_SHM_FORMAT_XBGR8888","","",167,null],[13,"WL_SHM_FORMAT_RGBX8888","","",167,null],[13,"WL_SHM_FORMAT_BGRX8888","","",167,null],[13,"WL_SHM_FORMAT_ABGR8888","","",167,null],[13,"WL_SHM_FORMAT_RGBA8888","","",167,null],[13,"WL_SHM_FORMAT_BGRA8888","","",167,null],[13,"WL_SHM_FORMAT_XRGB2101010","","",167,null],[13,"WL_SHM_FORMAT_XBGR2101010","","",167,null],[13,"WL_SHM_FORMAT_RGBX1010102","","",167,null],[13,"WL_SHM_FORMAT_BGRX1010102","","",167,null],[13,"WL_SHM_FORMAT_ARGB2101010","","",167,null],[13,"WL_SHM_FORMAT_ABGR2101010","","",167,null],[13,"WL_SHM_FORMAT_RGBA1010102","","",167,null],[13,"WL_SHM_FORMAT_BGRA1010102","","",167,null],[13,"WL_SHM_FORMAT_YUYV","","",167,null],[13,"WL_SHM_FORMAT_YVYU","","",167,null],[13,"WL_SHM_FORMAT_UYVY","","",167,null],[13,"WL_SHM_FORMAT_VYUY","","",167,null],[13,"WL_SHM_FORMAT_AYUV","","",167,null],[13,"WL_SHM_FORMAT_NV12","","",167,null],[13,"WL_SHM_FORMAT_NV21","","",167,null],[13,"WL_SHM_FORMAT_NV16","","",167,null],[13,"WL_SHM_FORMAT_NV61","","",167,null],[13,"WL_SHM_FORMAT_YUV410","","",167,null],[13,"WL_SHM_FORMAT_YVU410","","",167,null],[13,"WL_SHM_FORMAT_YUV411","","",167,null],[13,"WL_SHM_FORMAT_YVU411","","",167,null],[13,"WL_SHM_FORMAT_YUV420","","",167,null],[13,"WL_SHM_FORMAT_YVU420","","",167,null],[13,"WL_SHM_FORMAT_YUV422","","",167,null],[13,"WL_SHM_FORMAT_YVU422","","",167,null],[13,"WL_SHM_FORMAT_YUV444","","",167,null],[13,"WL_SHM_FORMAT_YVU444","","",167,null],[5,"default_display","","Tries to connect to the default wayland display.",null,{"inputs":[],"output":{"name":"option"}}],[11,"drop","","",168,{"inputs":[{"name":"buffer"}],"output":null}],[11,"ptr","","",168,null],[11,"ptr_mut","","",168,null],[11,"clone","","",169,{"inputs":[{"name":"compositor"}],"output":{"name":"compositor"}}],[11,"create_surface","","Creates a new surface to draw on.",169,{"inputs":[{"name":"compositor"}],"output":{"name":"wsurface"}}],[11,"create_region","","Creates a new region.",169,{"inputs":[{"name":"compositor"}],"output":{"name":"region"}}],[11,"interface","","",169,{"inputs":[{"name":"compositor"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",169,null],[11,"ptr","","",169,null],[11,"ptr_mut","","",169,null],[11,"clone","","",170,{"inputs":[{"name":"display"}],"output":{"name":"display"}}],[11,"get_registry","","Creates a Registry associated to this Display and returns it.",170,{"inputs":[{"name":"display"}],"output":{"name":"registry"}}],[11,"sync_roundtrip","","Performs a blocking synchronisation of the events of the server.",170,{"inputs":[{"name":"display"}],"output":null}],[11,"dispatch_pending","","Dispatches all pending events to their appropriate callbacks.",170,{"inputs":[{"name":"display"}],"output":null}],[11,"dispatch","","Dispatches all pending events to their appropriate callbacks.",170,{"inputs":[{"name":"display"}],"output":null}],[11,"flush","","Send as much requests to the server as possible.",170,{"inputs":[{"name":"display"}],"output":{"name":"result"}}],[11,"sync","","Send a `sync` message to the server.",170,{"inputs":[{"name":"display"}],"output":null}],[11,"set_sync_callback","","Sets the callback of a `done` event.",170,{"inputs":[{"name":"display"},{"name":"f"}],"output":null}],[11,"ptr","","",170,null],[11,"ptr_mut","","",170,null],[11,"hash","","",171,null],[11,"clone","","",171,{"inputs":[{"name":"keyboardid"}],"output":{"name":"keyboardid"}}],[11,"eq","","",171,{"inputs":[{"name":"keyboardid"},{"name":"keyboardid"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"keyboardid"},{"name":"keyboardid"}],"output":{"name":"bool"}}],[11,"get_id","","Returns the unique `KeyboardId` associated to this keyboard.",172,{"inputs":[{"name":"keyboard"}],"output":{"name":"keyboardid"}}],[11,"keymap_fd","","Provides the file descriptor giving access to the keymap definition\ncurrently used by the compositor for this keyboard.",172,{"inputs":[{"name":"keyboard"}],"output":{"name":"option"}}],[11,"repeat_info","","Provides the repeat information of this keayboard.",172,{"inputs":[{"name":"keyboard"}],"output":{"name":"option"}}],[11,"release","","",172,{"inputs":[{"name":"keyboard"}],"output":null}],[11,"set_enter_action","","Defines the action to be executed when a surface gains keyboard focus.",172,{"inputs":[{"name":"keyboard"},{"name":"f"}],"output":null}],[11,"set_leave_action","","Defines the action to be executed when a surface loses keyboard focus.",172,{"inputs":[{"name":"keyboard"},{"name":"f"}],"output":null}],[11,"set_key_action","","Defines the action to be executed when a keystroke is done.",172,{"inputs":[{"name":"keyboard"},{"name":"f"}],"output":null}],[11,"set_modifiers_action","","Defines the action to be executed when a modifier is changed.",172,{"inputs":[{"name":"keyboard"},{"name":"f"}],"output":null}],[11,"drop","","",172,{"inputs":[{"name":"keyboard"}],"output":null}],[11,"ptr","","",172,null],[11,"ptr_mut","","",172,null],[11,"hash","","",173,null],[11,"eq","","",173,{"inputs":[{"name":"outputid"},{"name":"outputid"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"outputid"},{"name":"outputid"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"outputid"}],"output":{"name":"outputid"}}],[11,"clone","","",158,{"inputs":[{"name":"outputmode"}],"output":{"name":"outputmode"}}],[11,"is_current","","",158,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"is_preferred","","",158,{"inputs":[{"name":"outputmode"}],"output":{"name":"bool"}}],[11,"get_id","","The unique Id representing this output",174,{"inputs":[{"name":"output"}],"output":{"name":"outputid"}}],[11,"position","","The location of the top-left corner of this output in the\ncompositor space.",174,null],[11,"dimensions","","The dimensions (width, height) of this output, in milimeters",174,null],[11,"subpixel","","The subpixel orientation of this output",174,{"inputs":[{"name":"output"}],"output":{"name":"outputsubpixel"}}],[11,"transform","","The current transform of this output",174,{"inputs":[{"name":"output"}],"output":{"name":"outputtransform"}}],[11,"manufacturer","","The manufacturer of this output",174,{"inputs":[{"name":"output"}],"output":{"name":"string"}}],[11,"model","","The model of this output",174,{"inputs":[{"name":"output"}],"output":{"name":"string"}}],[11,"scale","","The current scaling factor of this output",174,{"inputs":[{"name":"output"}],"output":{"name":"i32"}}],[11,"modes","","The modes of this output",174,{"inputs":[{"name":"output"}],"output":{"name":"vec"}}],[11,"interface","","",174,{"inputs":[{"name":"output"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",174,null],[11,"drop","","",174,{"inputs":[{"name":"output"}],"output":null}],[11,"ptr","","",174,null],[11,"ptr_mut","","",174,null],[11,"hash","","",175,null],[11,"clone","","",175,{"inputs":[{"name":"pointerid"}],"output":{"name":"pointerid"}}],[11,"eq","","",175,{"inputs":[{"name":"pointerid"},{"name":"pointerid"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"pointerid"},{"name":"pointerid"}],"output":{"name":"bool"}}],[11,"get_id","","Returns the unique `PointerId` associated to this pointer.",176,{"inputs":[{"name":"pointer"}],"output":{"name":"pointerid"}}],[11,"set_cursor","","Change the surface for drawing the cursor.",176,null],[11,"set_cursor_hidden","","Hides or unhides the cursor image.",176,{"inputs":[{"name":"pointer"},{"name":"bool"}],"output":null}],[11,"release","","",176,{"inputs":[{"name":"pointer"}],"output":null}],[11,"get_surface","","Provides a reference to the current cursor surface.",176,{"inputs":[{"name":"pointer"}],"output":{"name":"option"}}],[11,"set_enter_action","","Defines the action to be executed when the cursor enters a surface.",176,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"set_leave_action","","Defines the action to be executed when the cursor leaves a surface.",176,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"set_motion_action","","Defines the action to be executed when the cursor moves",176,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"set_button_action","","Defines the action to be executed when a button is clicked or released",176,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"set_axis_action","","Defines the action to be executed when a scrolling is done",176,{"inputs":[{"name":"pointer"},{"name":"f"}],"output":null}],[11,"drop","","",176,{"inputs":[{"name":"pointer"}],"output":null}],[11,"ptr","","",176,null],[11,"ptr_mut","","",176,null],[11,"add","","Adds given rectangle to the region.",177,{"inputs":[{"name":"region"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"subtract","","Subtract given rectangle from the region.",177,{"inputs":[{"name":"region"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"drop","","",177,{"inputs":[{"name":"region"}],"output":null}],[11,"ptr","","",177,null],[11,"ptr_mut","","",177,null],[11,"clone","","",178,{"inputs":[{"name":"registry"}],"output":{"name":"registry"}}],[11,"get_display","","Returns a handle to the Display associated with this registry.",178,{"inputs":[{"name":"registry"}],"output":{"name":"display"}}],[11,"get_global_objects","","Returns a `Vec` of all global objects and their interface.",178,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_objects_with_interface","","Returns a `Vec` of all global objects implementing given interface.",178,{"inputs":[{"name":"registry"},{"name":"str"}],"output":{"name":"vec"}}],[11,"get_compositor","","Retrieves a handle to the global compositor",178,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_outputs","","Retrieve handles to all available outputs",178,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_seats","","Retrieve handles to all available seats",178,{"inputs":[{"name":"registry"}],"output":{"name":"vec"}}],[11,"get_shell","","Retrieves a handle to the global shell",178,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_shm","","Retrieves a handle to the global shm",178,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"get_subcompositor","","Retrieves a handle to the global subcompositor",178,{"inputs":[{"name":"registry"}],"output":{"name":"option"}}],[11,"bind","","",178,{"inputs":[{"name":"registry"},{"name":"u32"},{"name":"u32"}],"output":{"name":"t"}}],[11,"ptr","","",178,null],[11,"ptr_mut","","",178,null],[11,"clone","","",179,{"inputs":[{"name":"seat"}],"output":{"name":"seat"}}],[11,"get_pointer","","",179,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"get_keyboard","","",179,{"inputs":[{"name":"seat"}],"output":{"name":"option"}}],[11,"interface","","",179,{"inputs":[{"name":"seat"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",179,null],[11,"ptr","","",179,null],[11,"ptr_mut","","",179,null],[11,"clone","","",180,{"inputs":[{"name":"shell"}],"output":{"name":"shell"}}],[11,"get_shell_surface","","Assigns the `shell_surface` role to given surface.",180,{"inputs":[{"name":"shell"},{"name":"s"}],"output":{"name":"shellsurface"}}],[11,"interface","","",180,{"inputs":[{"name":"shell"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",180,null],[11,"ptr","","",180,null],[11,"ptr_mut","","",180,null],[11,"destroy","","Frees the `Surface` from its role of `shell_surface` and returns it.",181,{"inputs":[{"name":"shellsurface"}],"output":{"name":"s"}}],[11,"set_toplevel","","Set this shell surface as being a toplevel window.",181,{"inputs":[{"name":"shellsurface"}],"output":null}],[11,"set_fullscreen","","Set this shell surface as being fullscreen.",181,{"inputs":[{"name":"shellsurface"},{"name":"shellfullscreenmethod"},{"name":"option"}],"output":null}],[11,"set_maximised","","Set this shell surface as being maximised.",181,{"inputs":[{"name":"shellsurface"},{"name":"option"}],"output":null}],[11,"set_title","","Sets the shell surface title.",181,{"inputs":[{"name":"shellsurface"},{"name":"cstr"}],"output":null}],[11,"set_class","","Sets the shell surface class.",181,{"inputs":[{"name":"shellsurface"},{"name":"cstr"}],"output":null}],[11,"set_configure_callback","","Sets the callback to be invoked when a `configure` event is received for this shell surface.",181,{"inputs":[{"name":"shellsurface"},{"name":"f"}],"output":null}],[11,"deref","","",181,{"inputs":[{"name":"shellsurface"}],"output":{"name":"s"}}],[11,"drop","","",181,{"inputs":[{"name":"shellsurface"}],"output":null}],[11,"ptr","","",181,null],[11,"ptr_mut","","",181,null],[11,"clone","","",182,{"inputs":[{"name":"shm"}],"output":{"name":"shm"}}],[11,"pool_from_fd","","Creates a shared memory pool from given file descriptor.",182,{"inputs":[{"name":"shm"},{"name":"f"},{"name":"i32"}],"output":{"name":"shmpool"}}],[11,"interface","","",182,{"inputs":[{"name":"shm"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",182,null],[11,"ptr","","",182,null],[11,"ptr_mut","","",182,null],[11,"create_buffer","","Creates a new buffer from this memory pool.",183,{"inputs":[{"name":"shmpool"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"shmformat"}],"output":{"name":"option"}}],[11,"drop","","",183,{"inputs":[{"name":"shmpool"}],"output":null}],[11,"ptr","","",183,null],[11,"ptr_mut","","",183,null],[11,"clone","","",184,{"inputs":[{"name":"subcompositor"}],"output":{"name":"subcompositor"}}],[11,"get_subsurface","","",184,{"inputs":[{"name":"subcompositor"},{"name":"s"},{"name":"wsurface"}],"output":{"name":"subsurface"}}],[11,"interface","","",184,{"inputs":[{"name":"subcompositor"}],"output":{"name":"wl_interface"}}],[11,"wrap","","",184,null],[11,"ptr","","",184,null],[11,"ptr_mut","","",184,null],[11,"destroy","","Frees the `Surface` from its role of `subsurface` and returns it.",185,{"inputs":[{"name":"subsurface"}],"output":{"name":"s"}}],[11,"set_position","","Sets the position of the subsurface in the parent surface coordinate\nsystem.",185,{"inputs":[{"name":"subsurface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_sync","","Sets of unsets the subsurface into synchronysed mode.",185,{"inputs":[{"name":"subsurface"},{"name":"bool"}],"output":null}],[11,"deref","","",185,{"inputs":[{"name":"subsurface"}],"output":{"name":"s"}}],[11,"drop","","",185,{"inputs":[{"name":"subsurface"}],"output":null}],[11,"ptr","","",185,null],[11,"ptr_mut","","",185,null],[11,"hash","","",186,null],[11,"clone","","",186,{"inputs":[{"name":"surfaceid"}],"output":{"name":"surfaceid"}}],[11,"eq","","",186,{"inputs":[{"name":"surfaceid"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"surfaceid"},{"name":"surfaceid"}],"output":{"name":"bool"}}],[11,"attach","","Attaches given buffer to be the content of the image.",187,{"inputs":[{"name":"wsurface"},{"name":"buffer"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"commit","","Commit the changes to the server.",187,{"inputs":[{"name":"wsurface"}],"output":null}],[11,"damage","","Mark part of this surface as damaged.",187,{"inputs":[{"name":"wsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_id","","Returns the unique `SurfaceId` associated to this surface.",187,{"inputs":[{"name":"wsurface"}],"output":{"name":"surfaceid"}}],[11,"set_opaque_region","","Sets the opaque region of this surface.",187,{"inputs":[{"name":"wsurface"},{"name":"region"}],"output":null}],[11,"set_input_region","","Sets the input region of this surface.",187,{"inputs":[{"name":"wsurface"},{"name":"region"}],"output":null}],[11,"set_buffer_transform","","Sets the transformation the server will apply to the buffer.",187,{"inputs":[{"name":"wsurface"},{"name":"outputtransform"}],"output":null}],[11,"set_buffer_scale","","Sets the scale the server will apply to the buffer.",187,{"inputs":[{"name":"wsurface"},{"name":"i32"}],"output":null}],[11,"drop","","",187,{"inputs":[{"name":"wsurface"}],"output":null}],[11,"ptr","","",187,null],[11,"ptr_mut","","",187,null],[11,"get_wsurface","","",187,{"inputs":[{"name":"wsurface"}],"output":{"name":"wsurface"}}],[8,"Surface","","A trait representing whatever can be used a a surface. Protocol extentions\nsurch as EGL can define their own kind of surfaces, but they wrap a `WSurface`.",null,null],[10,"get_wsurface","","",188,{"inputs":[{"name":"surface"}],"output":{"name":"wsurface"}}],[0,"egl","wayland_client","The EGL wayland protocol.",null,null],[3,"wl_egl_window","wayland_client::egl","An opaque struct representing a native window for EGL.",null,null],[3,"EGLSurface","","",null,null],[5,"is_egl_available","","Returns whether the library `libwayland-egl.so` has been found and could be loaded.",null,{"inputs":[],"output":{"name":"bool"}}],[11,"new","","Creates a new EGL surface on a wayland surface.",189,{"inputs":[{"name":"eglsurface"},{"name":"wsurface"},{"name":"i32"},{"name":"i32"}],"output":{"name":"eglsurface"}}],[11,"destroy","","Destroys the EGL association to this `WSurface` and returns it.",189,{"inputs":[{"name":"eglsurface"}],"output":{"name":"wsurface"}}],[11,"as_native_ptr","","Provides a ptr to the native window to be used for EGL initialization.",189,null],[11,"resize","","Resizes the egl surface.",189,{"inputs":[{"name":"eglsurface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_attached_size","","The size of the EGL buffer attached to this surface.",189,null],[11,"get_wsurface","","",189,{"inputs":[{"name":"eglsurface"}],"output":{"name":"wsurface"}}],[11,"drop","","",189,{"inputs":[{"name":"eglsurface"}],"output":null}],[6,"Ptr","","",null,null],[11,"ptr","","",189,null],[11,"ptr_mut","","",189,null],[0,"internals","wayland_client","Internal types and traits provided for special cases like custom protocol extensions.",null,null],[3,"wl_interface","wayland_client::internals","Type representing an interface in the `libwayland-client.so` ABI.",null,null],[12,"name","","",190,null],[12,"version","","",190,null],[12,"method_count","","",190,null],[12,"methods","","",190,null],[12,"event_count","","",190,null],[12,"events","","",190,null],[3,"wl_message","","Type representing a message in the `libwayland-client.so` ABI.",null,null],[12,"name","","",191,null],[12,"signature","","",191,null],[12,"types","","",191,null],[8,"FFI","","A trait for structures wrapping a FFI pointer, to access the pointer.",null,null],[16,"Ptr","","",192,null],[10,"ptr","","Returns a `*const` pointer to the underlying wayland object.",192,null],[10,"ptr_mut","","Returns a `*mut` pointer to the underlying wayland object.",192,null],[8,"Bind","","A trait for structure representing global objects that can be bound\nby the registry.",null,null],[10,"interface","","The `wl_interface` used to create this object in the registry.",193,{"inputs":[{"name":"bind"}],"output":{"name":"wl_interface"}}],[10,"wrap","","Create the object by wraping the pointer returned by the registry.",193,null],[11,"eq","wayland_client::core","",161,null],[11,"ne","","",161,null],[11,"eq","","",160,null],[11,"ne","","",160,null],[11,"clone","","",165,null],[11,"clone","","",164,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"eq","","",163,null],[11,"ne","","",163,null],[11,"eq","","",166,null],[11,"ne","","",166,null],[11,"eq","","",167,null],[11,"ne","","",167,null]],"paths":[[4,"Option"],[3,"Wrapping"],[3,"Big32x36"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"BorrowRefMut"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"StrSearcher"],[4,"State"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"TwoWaySearcher"],[4,"OldSearcher"],[3,"OldMatchIndices"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[3,"OutputMode"],[4,"ShellFullscreenMethod"],[4,"KeymapFormat"],[4,"KeyState"],[4,"ScrollAxis"],[4,"ButtonState"],[4,"OutputTransform"],[4,"OutputSubpixel"],[4,"ShellSurfaceResize"],[4,"ShmFormat"],[3,"Buffer"],[3,"Compositor"],[3,"Display"],[3,"KeyboardId"],[3,"Keyboard"],[3,"OutputId"],[3,"Output"],[3,"PointerId"],[3,"Pointer"],[3,"Region"],[3,"Registry"],[3,"Seat"],[3,"Shell"],[3,"ShellSurface"],[3,"Shm"],[3,"ShmPool"],[3,"SubCompositor"],[3,"SubSurface"],[3,"SurfaceId"],[3,"WSurface"],[8,"Surface"],[3,"EGLSurface"],[3,"wl_interface"],[3,"wl_message"],[8,"FFI"],[8,"Bind"]]};
searchIndex['osmesa_sys'] = {"items":[[0,"","osmesa_sys","",null,null],[3,"OsMesa","","Symbols loaded from a shared library.",null,null],[12,"OSMesaColorClamp","","",0,null],[12,"OSMesaCreateContext","","",0,null],[12,"OSMesaCreateContextExt","","",0,null],[12,"OSMesaDestroyContext","","",0,null],[12,"OSMesaGetColorBuffer","","",0,null],[12,"OSMesaGetCurrentContext","","",0,null],[12,"OSMesaGetDepthBuffer","","",0,null],[12,"OSMesaGetIntegerv","","",0,null],[12,"OSMesaGetProcAddress","","",0,null],[12,"OSMesaMakeCurrent","","",0,null],[12,"OSMesaPixelStore","","",0,null],[3,"osmesa_context","","",null,null],[5,"OSMesaColorClamp","","",null,null],[5,"OSMesaCreateContext","","",null,{"inputs":[{"name":"c_uint"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaCreateContextExt","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_int"},{"name":"c_int"},{"name":"c_int"},{"name":"osmesacontext"}],"output":{"name":"osmesacontext"}}],[5,"OSMesaDestroyContext","","",null,null],[5,"OSMesaGetColorBuffer","","",null,null],[5,"OSMesaGetCurrentContext","","",null,{"inputs":[],"output":{"name":"osmesacontext"}}],[5,"OSMesaGetDepthBuffer","","",null,null],[5,"OSMesaGetIntegerv","","",null,null],[5,"OSMesaGetProcAddress","","",null,null],[5,"OSMesaMakeCurrent","","",null,null],[5,"OSMesaPixelStore","","",null,null],[6,"OSMesaContext","","",null,null],[6,"OSMESAproc","","",null,null],[17,"OSMESA_BGRA","","",null,null],[17,"OSMESA_ARGB","","",null,null],[17,"OSMESA_BGR","","",null,null],[17,"OSMESA_RGB_565","","",null,null],[17,"OSMESA_COLOR_INDEX","","",null,null],[17,"OSMESA_RGB","","",null,null],[17,"OSMESA_RGBA","","",null,null],[17,"OSMESA_WIDTH","","",null,null],[17,"OSMESA_HEIGHT","","",null,null],[17,"OSMESA_FORMAT","","",null,null],[17,"OSMESA_TYPE","","",null,null],[17,"OSMESA_MAX_WIDTH","","",null,null],[17,"OSMESA_MAX_HEIGHT","","",null,null],[17,"OSMESA_ROW_LENGTH","","",null,null],[17,"OSMESA_Y_UP","","",null,null],[11,"open","","Tries to open the dynamic library.",0,{"inputs":[{"name":"osmesa"},{"name":"path"}],"output":{"name":"result"}}],[11,"try_loading","","Try loading the static symbols linked to this library.",0,{"inputs":[{"name":"osmesa"}],"output":{"name":"result"}}]],"paths":[[3,"OsMesa"]]};
searchIndex['freetype'] = {"items":[[0,"","freetype","",null,null],[0,"ffi","","",null,null],[11,"clone","freetype_sys","",0,{"inputs":[{"name":"ft_vector"}],"output":{"name":"ft_vector"}}],[11,"clone","","",1,{"inputs":[{"name":"ft_bbox"}],"output":{"name":"ft_bbox"}}],[11,"clone","","",2,{"inputs":[{"name":"ft_matrix"}],"output":{"name":"ft_matrix"}}],[11,"clone","","",3,{"inputs":[{"name":"ft_unitvector"}],"output":{"name":"ft_unitvector"}}],[11,"clone","","",4,{"inputs":[{"name":"ft_size_metrics"}],"output":{"name":"ft_size_metrics"}}],[11,"clone","","",5,{"inputs":[{"name":"ft_glyph_metrics"}],"output":{"name":"ft_glyph_metrics"}}],[11,"clone","","",6,{"inputs":[{"name":"ft_parameter"}],"output":{"name":"ft_parameter"}}],[11,"clone","","",7,{"inputs":[{"name":"ft_bitmap_size"}],"output":{"name":"ft_bitmap_size"}}],[11,"clone","","",8,{"inputs":[{"name":"tt_os2"}],"output":{"name":"tt_os2"}}],[11,"clone","","",9,{"inputs":[{"name":"ft_charmaprec"}],"output":{"name":"ft_charmaprec"}}],[11,"clone","","",10,{"inputs":[{"name":"ft_listrec"}],"output":{"name":"ft_listrec"}}],[11,"clone","","",11,{"inputs":[{"name":"ft_size_requestrec"}],"output":{"name":"ft_size_requestrec"}}],[6,"FT_Byte","freetype::ffi","",null,null],[6,"FT_Bytes","","",null,null],[6,"FT_Char","","",null,null],[6,"FT_Int","","",null,null],[6,"FT_UInt","","",null,null],[6,"FT_Int16","","",null,null],[6,"FT_UInt16","","",null,null],[6,"FT_Int32","","",null,null],[6,"FT_UInt32","","",null,null],[6,"FT_Int64","","",null,null],[6,"FT_UInt64","","",null,null],[6,"FT_Short","","",null,null],[6,"FT_UShort","","",null,null],[6,"FT_Long","","",null,null],[6,"FT_ULong","","",null,null],[6,"FT_Bool","","",null,null],[6,"FT_Offset","","",null,null],[6,"FT_PtrDist","","",null,null],[6,"FT_String","","",null,null],[6,"FT_Tag","","",null,null],[6,"FT_Error","","",null,null],[6,"FT_Fixed","","",null,null],[6,"FT_Pointer","","",null,null],[6,"FT_Pos","","",null,null],[6,"FT_FWord","","",null,null],[6,"FT_UFWord","","",null,null],[6,"FT_F2Dot14","","",null,null],[6,"FT_F26Dot6","","",null,null],[6,"FT_Generic_Finalizer","","",null,null],[6,"FT_StreamDesc","","",null,null],[6,"FT_Stream_IoFunc","","",null,null],[6,"FT_Stream_CloseFunc","","",null,null],[6,"FT_Alloc_Func","","",null,null],[6,"FT_Free_Func","","",null,null],[6,"FT_Realloc_Func","","",null,null],[8,"FTErrorMethods","","",null,null],[10,"succeeded","","",12,{"inputs":[{"name":"fterrormethods"}],"output":{"name":"bool"}}],[3,"FT_Vector","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"FT_BBox","","",null,null],[12,"xMin","","",1,null],[12,"yMin","","",1,null],[12,"xMax","","",1,null],[12,"yMax","","",1,null],[3,"FT_Matrix","","",null,null],[12,"xx","","",2,null],[12,"xy","","",2,null],[12,"yx","","",2,null],[12,"yy","","",2,null],[3,"FT_UnitVector","","",null,null],[12,"x","","",3,null],[12,"y","","",3,null],[3,"FT_Bitmap","","",null,null],[12,"rows","","",13,null],[12,"width","","",13,null],[12,"pitch","","",13,null],[12,"buffer","","",13,null],[12,"num_grays","","",13,null],[12,"pixel_mode","","",13,null],[12,"palette_mode","","",13,null],[12,"palette","","",13,null],[3,"FT_Data","","",null,null],[12,"pointer","","",14,null],[12,"length","","",14,null],[3,"FT_Generic","","",null,null],[12,"data","","",15,null],[12,"finalizer","","",15,null],[3,"FT_Size_Metrics","","",null,null],[12,"x_ppem","","",4,null],[12,"y_ppem","","",4,null],[12,"x_scale","","",4,null],[12,"y_scale","","",4,null],[12,"ascender","","",4,null],[12,"descender","","",4,null],[12,"height","","",4,null],[12,"max_advance","","",4,null],[3,"FT_Outline","","",null,null],[12,"n_contours","","",16,null],[12,"n_points","","",16,null],[12,"points","","",16,null],[12,"tags","","",16,null],[12,"contours","","",16,null],[12,"flags","","",16,null],[3,"FT_Glyph_Metrics","","",null,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"horiBearingX","","",5,null],[12,"horiBearingY","","",5,null],[12,"horiAdvance","","",5,null],[12,"vertBearingX","","",5,null],[12,"vertBearingY","","",5,null],[12,"vertAdvance","","",5,null],[3,"FT_Parameter","","",null,null],[12,"tag","","",6,null],[12,"data","","",6,null],[3,"FT_Open_Args","","",null,null],[12,"flags","","",17,null],[12,"memory_base","","",17,null],[12,"memory_size","","",17,null],[12,"pathname","","",17,null],[12,"stream","","",17,null],[12,"driver","","",17,null],[12,"num_params","","",17,null],[12,"params","","",17,null],[3,"FT_Bitmap_Size","","",null,null],[12,"height","","",7,null],[12,"width","","",7,null],[12,"size","","",7,null],[12,"x_ppem","","",7,null],[12,"y_ppem","","",7,null],[3,"TT_OS2","","",null,null],[12,"version","","",8,null],[12,"xAvgCharWidth","","",8,null],[12,"usWeightClass","","",8,null],[12,"usWidthClass","","",8,null],[12,"fsType","","",8,null],[12,"ySubscriptXSize","","",8,null],[12,"ySubscriptYSize","","",8,null],[12,"ySubscriptXOffset","","",8,null],[12,"ySubscriptYOffset","","",8,null],[12,"ySuperscriptXSize","","",8,null],[12,"ySuperscriptYSize","","",8,null],[12,"ySuperscriptXOffset","","",8,null],[12,"ySuperscriptYOffset","","",8,null],[12,"yStrikeoutSize","","",8,null],[12,"yStrikeoutPosition","","",8,null],[12,"sFamilyClass","","",8,null],[12,"panose","","",8,null],[12,"ulUnicodeRange1","","",8,null],[12,"ulUnicodeRange2","","",8,null],[12,"ulUnicodeRange3","","",8,null],[12,"ulUnicodeRange4","","",8,null],[12,"ulCodePageRange1","","",8,null],[12,"ulCodePageRange2","","",8,null],[12,"sxHeight","","",8,null],[12,"sCapHeight","","",8,null],[12,"usDefaultChar","","",8,null],[12,"usBreakChar","","",8,null],[12,"usMaxContext","","",8,null],[6,"enum_FT_Sfnt_Tag_","","",null,null],[17,"ft_sfnt_head","","",null,null],[17,"ft_sfnt_maxp","","",null,null],[17,"ft_sfnt_os2","","",null,null],[17,"ft_sfnt_hhea","","",null,null],[17,"ft_sfnt_vhea","","",null,null],[17,"ft_sfnt_post","","",null,null],[17,"ft_sfnt_pclt","","",null,null],[17,"ft_sfnt_max","","",null,null],[6,"FT_Sfnt_Tag","","",null,null],[6,"FT_Pixel_Mode","","",null,null],[17,"FT_PIXEL_MODE_NONE","","",null,null],[17,"FT_PIXEL_MODE_MONO","","",null,null],[17,"FT_PIXEL_MODE_GRAY","","",null,null],[17,"FT_PIXEL_MODE_GRAY2","","",null,null],[17,"FT_PIXEL_MODE_GRAY4","","",null,null],[17,"FT_PIXEL_MODE_LCD","","",null,null],[17,"FT_PIXEL_MODE_LCD_V","","",null,null],[17,"FT_PIXEL_MODE_BGRA","","",null,null],[17,"FT_PIXEL_MODE_MAX","","",null,null],[6,"FT_Glyph_Format","","",null,null],[17,"FT_GLYPH_FORMAT_NONE","","",null,null],[17,"FT_GLYPH_FORMAT_COMPOSITE","","",null,null],[17,"FT_GLYPH_FORMAT_BITMAP","","",null,null],[17,"FT_GLYPH_FORMAT_OUTLINE","","",null,null],[17,"FT_GLYPH_FORMAT_PLOTTER","","",null,null],[6,"FT_Render_Mode","","",null,null],[17,"FT_RENDER_MODE_NORMAL","","",null,null],[17,"FT_RENDER_MODE_LIGHT","","",null,null],[17,"FT_RENDER_MODE_MONO","","",null,null],[17,"FT_RENDER_MODE_LCD","","",null,null],[17,"FT_RENDER_MODE_LCD_V","","",null,null],[17,"FT_RENDER_MODE_MAX","","",null,null],[6,"FT_Encoding","","",null,null],[17,"FT_ENCODING_NONE","","",null,null],[17,"FT_ENCODING_MS_SYMBOL","","",null,null],[17,"FT_ENCODING_UNICODE","","",null,null],[17,"FT_ENCODING_SJIS","","",null,null],[17,"FT_ENCODING_GB2312","","",null,null],[17,"FT_ENCODING_BIG5","","",null,null],[17,"FT_ENCODING_WANSUNG","","",null,null],[17,"FT_ENCODING_JOHAB","","",null,null],[17,"FT_ENCODING_MS_SJIS","","",null,null],[17,"FT_ENCODING_MS_GB2312","","",null,null],[17,"FT_ENCODING_MS_BIG5","","",null,null],[17,"FT_ENCODING_MS_WANSUNG","","",null,null],[17,"FT_ENCODING_MS_JOHAB","","",null,null],[17,"FT_ENCODING_ADOBE_STANDARD","","",null,null],[17,"FT_ENCODING_ADOBE_EXPERT","","",null,null],[17,"FT_ENCODING_ADOBE_CUSTOM","","",null,null],[17,"FT_ENCODING_ADOBE_LATIN_1","","",null,null],[17,"FT_ENCODING_OLD_LATIN_2","","",null,null],[17,"FT_ENCODING_APPLE_ROMAN","","",null,null],[6,"FT_Size_Request_Type","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_NOMINAL","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_REAL_DIM","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_BBOX","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_CELL","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_SCALES","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_MAX","","",null,null],[6,"FT_Kerning_Mode","","",null,null],[17,"FT_KERNING_DEFAULT","","",null,null],[17,"FT_KERNING_UNFITTED","","",null,null],[17,"FT_KERNING_UNSCALED","","",null,null],[6,"FT_Glyph_BBox_Mode","","",null,null],[17,"FT_GLYPH_BBOX_UNSCALED","","",null,null],[17,"FT_GLYPH_BBOX_SUBPIXELS","","",null,null],[17,"FT_GLYPH_BBOX_GRIDFIT","","",null,null],[17,"FT_GLYPH_BBOX_TRUNCATE","","",null,null],[17,"FT_GLYPH_BBOX_PIXELS","","",null,null],[17,"FT_FACE_FLAG_SCALABLE","","",null,null],[17,"FT_FACE_FLAG_FIXED_SIZES","","",null,null],[17,"FT_FACE_FLAG_FIXED_WIDTH","","",null,null],[17,"FT_FACE_FLAG_SFNT","","",null,null],[17,"FT_FACE_FLAG_HORIZONTAL","","",null,null],[17,"FT_FACE_FLAG_VERTICAL","","",null,null],[17,"FT_FACE_FLAG_KERNING","","",null,null],[17,"FT_FACE_FLAG_FAST_GLYPHS","","",null,null],[17,"FT_FACE_FLAG_MULTIPLE_MASTERS","","",null,null],[17,"FT_FACE_FLAG_GLYPH_NAMES","","",null,null],[17,"FT_FACE_FLAG_EXTERNAL_STREAM","","",null,null],[17,"FT_FACE_FLAG_HINTER","","",null,null],[17,"FT_FACE_FLAG_CID_KEYED","","",null,null],[17,"FT_FACE_FLAG_TRICKY","","",null,null],[17,"FT_FACE_FLAG_COLOR","","",null,null],[17,"FT_STYLE_FLAG_ITALIC","","",null,null],[17,"FT_STYLE_FLAG_BOLD","","",null,null],[17,"FT_OPEN_MEMORY","","",null,null],[17,"FT_OPEN_STREAM","","",null,null],[17,"FT_OPEN_PATHNAME","","",null,null],[17,"FT_OPEN_DRIVER","","",null,null],[17,"FT_OPEN_PARAMS","","",null,null],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS","","",null,null],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES","","",null,null],[17,"FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID","","",null,null],[17,"FT_SUBGLYPH_FLAG_SCALE","","",null,null],[17,"FT_SUBGLYPH_FLAG_XY_SCALE","","",null,null],[17,"FT_SUBGLYPH_FLAG_2X2","","",null,null],[17,"FT_SUBGLYPH_FLAG_USE_MY_METRICS","","",null,null],[17,"FT_LOAD_DEFAULT","","",null,null],[17,"FT_LOAD_NO_SCALE","","",null,null],[17,"FT_LOAD_NO_HINTING","","",null,null],[17,"FT_LOAD_RENDER","","",null,null],[17,"FT_LOAD_NO_BITMAP","","",null,null],[17,"FT_LOAD_VERTICAL_LAYOUT","","",null,null],[17,"FT_LOAD_FORCE_AUTOHINT","","",null,null],[17,"FT_LOAD_CROP_BITMAP","","",null,null],[17,"FT_LOAD_PEDANTIC","","",null,null],[17,"FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","","",null,null],[17,"FT_LOAD_NO_RECURSE","","",null,null],[17,"FT_LOAD_IGNORE_TRANSFORM","","",null,null],[17,"FT_LOAD_MONOCHROME","","",null,null],[17,"FT_LOAD_LINEAR_DESIGN","","",null,null],[17,"FT_LOAD_NO_AUTOHINT","","",null,null],[17,"FT_LOAD_COLOR","","",null,null],[17,"FT_LOAD_TARGET_NORMAL","","",null,null],[17,"FT_LOAD_TARGET_LIGHT","","",null,null],[17,"FT_LOAD_TARGET_MONO","","",null,null],[17,"FT_LOAD_TARGET_LCD","","",null,null],[17,"FT_LOAD_TARGET_LCD_V","","",null,null],[17,"FT_FSTYPE_INSTALLABLE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING","","",null,null],[17,"FT_FSTYPE_EDITABLE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_NO_SUBSETTING","","",null,null],[17,"FT_FSTYPE_BITMAP_EMBEDDING_ONLY","","",null,null],[17,"FT_Err_Ok","","",null,null],[17,"FT_Err_Cannot_Open_Resource","","",null,null],[17,"FT_Err_Unknown_File_Format","","",null,null],[17,"FT_Err_Invalid_File_Format","","",null,null],[17,"FT_Err_Invalid_Version","","",null,null],[17,"FT_Err_Lower_Module_Version","","",null,null],[17,"FT_Err_Invalid_Argument","","",null,null],[17,"FT_Err_Unimplemented_Feature","","",null,null],[17,"FT_Err_Invalid_Table","","",null,null],[17,"FT_Err_Invalid_Offset","","",null,null],[17,"FT_Err_Array_Too_Large","","",null,null],[17,"FT_Err_Missing_Module","","",null,null],[17,"FT_Err_Missing_Property","","",null,null],[17,"FT_Err_Invalid_Glyph_Index","","",null,null],[17,"FT_Err_Invalid_Character_Code","","",null,null],[17,"FT_Err_Invalid_Glyph_Format","","",null,null],[17,"FT_Err_Cannot_Render_Glyph","","",null,null],[17,"FT_Err_Invalid_Outline","","",null,null],[17,"FT_Err_Invalid_Composite","","",null,null],[17,"FT_Err_Too_Many_Hints","","",null,null],[17,"FT_Err_Invalid_Pixel_Size","","",null,null],[17,"FT_Err_Invalid_Handle","","",null,null],[17,"FT_Err_Invalid_Library_Handle","","",null,null],[17,"FT_Err_Invalid_Driver_Handle","","",null,null],[17,"FT_Err_Invalid_Face_Handle","","",null,null],[17,"FT_Err_Invalid_Size_Handle","","",null,null],[17,"FT_Err_Invalid_Slot_Handle","","",null,null],[17,"FT_Err_Invalid_CharMap_Handle","","",null,null],[17,"FT_Err_Invalid_Cache_Handle","","",null,null],[17,"FT_Err_Invalid_Stream_Handle","","",null,null],[17,"FT_Err_Too_Many_Drivers","","",null,null],[17,"FT_Err_Too_Many_Extensions","","",null,null],[17,"FT_Err_Out_Of_Memory","","",null,null],[17,"FT_Err_Unlisted_Object","","",null,null],[17,"FT_Err_Cannot_Open_Stream","","",null,null],[17,"FT_Err_Invalid_Stream_Seek","","",null,null],[17,"FT_Err_Invalid_Stream_Skip","","",null,null],[17,"FT_Err_Invalid_Stream_Read","","",null,null],[17,"FT_Err_Invalid_Stream_Operation","","",null,null],[17,"FT_Err_Invalid_Frame_Operation","","",null,null],[17,"FT_Err_Nested_Frame_Access","","",null,null],[17,"FT_Err_Invalid_Frame_Read","","",null,null],[17,"FT_Err_Raster_Uninitialized","","",null,null],[17,"FT_Err_Raster_Corrupted","","",null,null],[17,"FT_Err_Raster_Overflow","","",null,null],[17,"FT_Err_Raster_Negative_Height","","",null,null],[17,"FT_Err_Too_Many_Caches","","",null,null],[17,"FT_Err_Invalid_Opcode","","",null,null],[17,"FT_Err_Too_Few_Arguments","","",null,null],[17,"FT_Err_Stack_Overflow","","",null,null],[17,"FT_Err_Code_Overflow","","",null,null],[17,"FT_Err_Bad_Argument","","",null,null],[17,"FT_Err_Divide_By_Zero","","",null,null],[17,"FT_Err_Invalid_Reference","","",null,null],[17,"FT_Err_Debug_OpCode","","",null,null],[17,"FT_Err_ENDF_In_Exec_Stream","","",null,null],[17,"FT_Err_Nested_DEFS","","",null,null],[17,"FT_Err_Invalid_CodeRange","","",null,null],[17,"FT_Err_Execution_Too_Long","","",null,null],[17,"FT_Err_Too_Many_Function_Defs","","",null,null],[17,"FT_Err_Too_Many_Instruction_Defs","","",null,null],[17,"FT_Err_Table_Missing","","",null,null],[17,"FT_Err_Horiz_Header_Missing","","",null,null],[17,"FT_Err_Locations_Missing","","",null,null],[17,"FT_Err_Name_Table_Missing","","",null,null],[17,"FT_Err_CMap_Table_Missing","","",null,null],[17,"FT_Err_Hmtx_Table_Missing","","",null,null],[17,"FT_Err_Post_Table_Missing","","",null,null],[17,"FT_Err_Invalid_Horiz_Metrics","","",null,null],[17,"FT_Err_Invalid_CharMap_Format","","",null,null],[17,"FT_Err_Invalid_PPem","","",null,null],[17,"FT_Err_Invalid_Vert_Metrics","","",null,null],[17,"FT_Err_Could_Not_Find_Context","","",null,null],[17,"FT_Err_Invalid_Post_Table_Format","","",null,null],[17,"FT_Err_Invalid_Post_Table","","",null,null],[17,"FT_Err_Syntax_Error","","",null,null],[17,"FT_Err_Stack_Underflow","","",null,null],[17,"FT_Err_Ignore","","",null,null],[17,"FT_Err_No_Unicode_Glyph_Name","","",null,null],[17,"FT_Err_Missing_Startfont_Field","","",null,null],[17,"FT_Err_Missing_Font_Field","","",null,null],[17,"FT_Err_Missing_Size_Field","","",null,null],[17,"FT_Err_Missing_Fontboundingbox_Field","","",null,null],[17,"FT_Err_Missing_Chars_Field","","",null,null],[17,"FT_Err_Missing_Startchar_Field","","",null,null],[17,"FT_Err_Missing_Encoding_Field","","",null,null],[17,"FT_Err_Missing_Bbx_Field","","",null,null],[17,"FT_Err_Bbx_Too_Big","","",null,null],[17,"FT_Err_Corrupted_Font_Header","","",null,null],[17,"FT_Err_Corrupted_Font_Glyphs","","",null,null],[17,"FT_Err_Max","","",null,null],[6,"FT_Library","","",null,null],[6,"FT_Face","","",null,null],[6,"FT_Size","","",null,null],[6,"FT_GlyphSlot","","",null,null],[6,"FT_CharMap","","",null,null],[6,"FT_Module","","",null,null],[6,"FT_Driver","","",null,null],[6,"FT_Renderer","","",null,null],[6,"FT_Size_Internal","","",null,null],[6,"FT_SubGlyph","","",null,null],[6,"FT_Slot_Internal","","",null,null],[6,"FT_Size_Request","","",null,null],[6,"FT_Face_Internal","","",null,null],[6,"FT_Stream","","",null,null],[6,"FT_Memory","","",null,null],[6,"FT_ListNode","","",null,null],[6,"FT_Glyph","","",null,null],[6,"FT_BitmapGlyph","","",null,null],[6,"FT_OutlineGlyph","","",null,null],[6,"TT_OS2_Internal","","",null,null],[6,"FT_LibraryRec","","",null,null],[6,"FT_ModuleRec","","",null,null],[6,"FT_DriverRec","","",null,null],[6,"FT_RendererRec","","",null,null],[6,"FT_Size_InternalRec","","",null,null],[6,"FT_SubGlyphRec","","",null,null],[6,"FT_Slot_InternalRec","","",null,null],[6,"FT_Face_InternalRec","","",null,null],[3,"FT_CharMapRec","","",null,null],[12,"face","","",9,null],[12,"encoding","","",9,null],[12,"platform_id","","",9,null],[12,"encoding_id","","",9,null],[3,"FT_FaceRec","","",null,null],[12,"num_faces","","",18,null],[12,"face_index","","",18,null],[12,"face_flags","","",18,null],[12,"style_flags","","",18,null],[12,"num_glyphs","","",18,null],[12,"family_name","","",18,null],[12,"style_name","","",18,null],[12,"num_fixed_sizes","","",18,null],[12,"available_sizes","","",18,null],[12,"num_charmaps","","",18,null],[12,"charmaps","","",18,null],[12,"generic","","",18,null],[12,"bbox","","",18,null],[12,"units_per_EM","","",18,null],[12,"ascender","","",18,null],[12,"descender","","",18,null],[12,"height","","",18,null],[12,"max_advance_width","","",18,null],[12,"max_advance_height","","",18,null],[12,"underline_position","","",18,null],[12,"underline_thickness","","",18,null],[12,"glyph","","",18,null],[12,"size","","",18,null],[12,"charmap","","",18,null],[12,"driver","","",18,null],[12,"memory","","",18,null],[12,"stream","","",18,null],[12,"sizes_list","","",18,null],[12,"autohint","","",18,null],[12,"extensions","","",18,null],[12,"internal","","",18,null],[3,"FT_GlyphSlotRec","","",null,null],[12,"library","","",19,null],[12,"face","","",19,null],[12,"next","","",19,null],[12,"reserved","","",19,null],[12,"generic","","",19,null],[12,"metrics","","",19,null],[12,"linearHoriAdvance","","",19,null],[12,"linearVertAdvance","","",19,null],[12,"advance","","",19,null],[12,"format","","",19,null],[12,"bitmap","","",19,null],[12,"bitmap_left","","",19,null],[12,"bitmap_top","","",19,null],[12,"outline","","",19,null],[12,"num_subglyphs","","",19,null],[12,"subglyphs","","",19,null],[12,"control_data","","",19,null],[12,"control_len","","",19,null],[12,"lsb_delta","","",19,null],[12,"rsb_delta","","",19,null],[12,"other","","",19,null],[12,"internal","","",19,null],[3,"FT_SizeRec","","",null,null],[12,"face","","",20,null],[12,"generic","","",20,null],[12,"metrics","","",20,null],[12,"internal","","",20,null],[3,"FT_StreamRec","","",null,null],[12,"base","","",21,null],[12,"size","","",21,null],[12,"pos","","",21,null],[12,"descriptor","","",21,null],[12,"pathname","","",21,null],[12,"read","","",21,null],[12,"close","","",21,null],[12,"memory","","",21,null],[12,"cursor","","",21,null],[12,"limit","","",21,null],[3,"FT_MemoryRec","","",null,null],[12,"user","","",22,null],[12,"alloc","","",22,null],[12,"free","","",22,null],[12,"realloc","","",22,null],[3,"FT_ListRec","","",null,null],[12,"head","","",10,null],[12,"tail","","",10,null],[3,"FT_ListNodeRec","","",null,null],[12,"prev","","",23,null],[12,"next","","",23,null],[12,"data","","",23,null],[3,"FT_Size_RequestRec","","",null,null],[12,"size_request_type","","",11,null],[12,"width","","",11,null],[12,"height","","",11,null],[12,"horiResolution","","",11,null],[12,"vertResolution","","",11,null],[3,"FT_GlyphRec","","",null,null],[12,"library","","",24,null],[12,"clazz","","",24,null],[12,"format","","",24,null],[12,"advance","","",24,null],[3,"FT_BitmapGlyphRec","","",null,null],[12,"root","","",25,null],[12,"left","","",25,null],[12,"top","","",25,null],[12,"bitmap","","",25,null],[3,"FT_OutlineGlyphRec","","",null,null],[12,"root","","",26,null],[12,"outline","","",26,null],[5,"FT_HAS_HORIZONTAL","","",null,null],[5,"FT_HAS_VERTICAL","","",null,null],[5,"FT_HAS_KERNING","","",null,null],[5,"FT_IS_SCALABLE","","",null,null],[5,"FT_IS_SFNT","","",null,null],[5,"FT_IS_FIXED_WIDTH","","",null,null],[5,"FT_HAS_FIXED_SIZES","","",null,null],[5,"FT_HAS_GLYPH_NAMES","","",null,null],[5,"FT_HAS_MULTIPLE_MASTERS","","",null,null],[5,"FT_IS_CID_KEYED","","",null,null],[5,"FT_IS_TRICKY","","",null,null],[5,"FT_HAS_COLOR","","",null,null],[5,"FT_Get_Sfnt_Table","","",null,null],[5,"FT_Init_FreeType","","",null,null],[5,"FT_Done_FreeType","","",null,null],[5,"FT_New_Library","","",null,null],[5,"FT_Done_Library","","",null,null],[5,"FT_Reference_Library","","",null,null],[5,"FT_Add_Default_Modules","","",null,null],[5,"FT_New_Face","","",null,null],[5,"FT_New_Memory_Face","","",null,null],[5,"FT_Open_Face","","",null,null],[5,"FT_Attach_File","","",null,null],[5,"FT_Attach_Stream","","",null,null],[5,"FT_Reference_Face","","",null,null],[5,"FT_Done_Face","","",null,null],[5,"FT_Select_Size","","",null,null],[5,"FT_Request_Size","","",null,null],[5,"FT_Set_Char_Size","","",null,null],[5,"FT_Set_Pixel_Sizes","","",null,null],[5,"FT_Load_Glyph","","",null,null],[5,"FT_Load_Char","","",null,null],[5,"FT_Set_Transform","","",null,null],[5,"FT_Render_Glyph","","",null,null],[5,"FT_Get_Kerning","","",null,null],[5,"FT_Get_Track_Kerning","","",null,null],[5,"FT_Get_Glyph_Name","","",null,null],[5,"FT_Get_Postscript_Name","","",null,null],[5,"FT_Select_CharMap","","",null,null],[5,"FT_Set_Charmap","","",null,null],[5,"FT_Get_Charmap_Index","","",null,null],[5,"FT_Get_Char_Index","","",null,null],[5,"FT_Get_First_Char","","",null,null],[5,"FT_Get_Next_Char","","",null,null],[5,"FT_Get_Name_Index","","",null,null],[5,"FT_Get_SubGlyph_Info","","",null,null],[5,"FT_Get_FSType_Flags","","",null,null],[5,"FT_Get_Glyph","","",null,null],[5,"FT_Glyph_Copy","","",null,null],[5,"FT_Glyph_Transform","","",null,null],[5,"FT_Glyph_Get_CBox","","",null,null],[5,"FT_Glyph_To_Bitmap","","",null,null],[5,"FT_Done_Glyph","","",null,null],[0,"bitmap","freetype","",null,null],[3,"Bitmap","freetype::bitmap","",null,null],[4,"PixelMode","","An enumeration type used to describe the format of pixels in a given bitmap. Note that\nadditional formats may be added in the future.",null,null],[13,"None","","This value is reserved.",27,null],[13,"Mono","","A monochrome bitmap, using 1 bit per pixel. Note that pixels are\nstored in most-significant order (MSB), which means that the left-most\npixel in a byte has value 128.",27,null],[13,"Gray","","An 8-bit bitmap, generally used to represent anti-aliased glyph images.\nEach pixel is stored in one byte. Note that the number of `gray`\nlevels is stored in the `num_grays` field of the FT_Bitmap structure\n(it generally is 256).",27,null],[13,"Gray2","","A 2-bit per pixel bitmap, used to represent embedded anti-aliased\nbitmaps in font files according to the OpenType specification. We\nhaven't found a single font using this format, however.",27,null],[13,"Gray4","","A 4-bit per pixel bitmap, representing embedded anti-aliased bitmaps in\nfont files according to the OpenType specification. We haven't found a\nsingle font using this format, however.",27,null],[13,"Lcd","","An 8-bit bitmap, representing RGB or BGR decimated glyph images used\nfor display on LCD displays; the bitmap is three times wider than the\noriginal glyph image. See also FT_RENDER_MODE_LCD.",27,null],[13,"LcdV","","An 8-bit bitmap, representing RGB or BGR decimated glyph images used for\ndisplay on rotated LCD displays; the bitmap is three times taller than\nthe original glyph image. See also FT_RENDER_MODE_LCD_V.",27,null],[13,"Bgra","","An image with four 8-bit channels per pixel, representing a color image\n(such as emoticons) with alpha channel. For each pixel, the format is\nBGRA, which means, the blue channel comes first in memory. The color\nchannels are pre-multiplied and in the sRGB colorspace. For example,\nfull red at half-translucent opacity will be represented as\n`00,00,80,80`, not `00,00,FF,80`. See also FT_LOAD_COLOR.",27,null],[11,"fmt","","",27,{"inputs":[{"name":"pixelmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"pixelmode"}],"output":{"name":"pixelmode"}}],[11,"from_raw","","",28,null],[11,"buffer","","A typeless pointer to the bitmap buffer. This value should be aligned\non 32-bit boundaries in most cases.",28,null],[11,"width","","The number of pixels in bitmap row.",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"i32"}}],[11,"rows","","The number of bitmap rows.",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"i32"}}],[11,"raw","","",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"ft_bitmap"}}],[11,"pixel_mode","","The pixel mode, i.e., how pixel bits are stored. See `PixelMode` for\npossible values.",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"ftresult"}}],[11,"pitch","","The pitch's absolute value is the number of bytes taken by one bitmap row, including\npadding. However, the pitch is positive when the bitmap has a ‘down’ flow, and negative\nwhen it has an ‘up’ flow. In all cases, the pitch is an offset to add to a bitmap pointer\nin order to go down one row.",28,{"inputs":[{"name":"bitmap"}],"output":{"name":"i32"}}],[0,"bitmap_glyph","freetype","",null,null],[3,"BitmapGlyph","freetype::bitmap_glyph","",null,null],[11,"clone","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"bitmapglyph"}}],[11,"from_raw","","",29,{"inputs":[{"name":"bitmapglyph"},{"name":"ft_bitmapglyph"}],"output":{"name":"self"}}],[11,"left","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"i32"}}],[11,"top","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"i32"}}],[11,"bitmap","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"bitmap"}}],[11,"raw","","",29,{"inputs":[{"name":"bitmapglyph"}],"output":{"name":"ft_bitmapglyphrec"}}],[0,"error","freetype","",null,null],[4,"Error","freetype::error","",null,null],[13,"Ok","","",30,null],[13,"CannotOpenResource","","",30,null],[13,"UnknownFileFormat","","",30,null],[13,"InvalidFileFormat","","",30,null],[13,"InvalidVersion","","",30,null],[13,"LowerModuleVersion","","",30,null],[13,"InvalidArgument","","",30,null],[13,"UnimplementedFeature","","",30,null],[13,"InvalidTable","","",30,null],[13,"InvalidOffset","","",30,null],[13,"ArrayTooLarge","","",30,null],[13,"MissingModule","","",30,null],[13,"MissingProperty","","",30,null],[13,"InvalidGlyphIndex","","",30,null],[13,"InvalidCharacterCode","","",30,null],[13,"InvalidGlyphFormat","","",30,null],[13,"CannotRenderGlyph","","",30,null],[13,"InvalidOutline","","",30,null],[13,"InvalidComposite","","",30,null],[13,"TooManyHints","","",30,null],[13,"InvalidPixelSize","","",30,null],[13,"InvalidHandle","","",30,null],[13,"InvalidLibraryHandle","","",30,null],[13,"InvalidDriverHandle","","",30,null],[13,"InvalidFaceHandle","","",30,null],[13,"InvalidSizeHandle","","",30,null],[13,"InvalidSlotHandle","","",30,null],[13,"InvalidCharMapHandle","","",30,null],[13,"InvalidCacheHandle","","",30,null],[13,"InvalidStreamHandle","","",30,null],[13,"TooManyDrivers","","",30,null],[13,"TooManyExtensions","","",30,null],[13,"OutOfMemory","","",30,null],[13,"UnlistedObject","","",30,null],[13,"CannotOpenStream","","",30,null],[13,"InvalidStreamSeek","","",30,null],[13,"InvalidStreamSkip","","",30,null],[13,"InvalidStreamRead","","",30,null],[13,"InvalidStreamOperation","","",30,null],[13,"InvalidFrameOperation","","",30,null],[13,"NestedFrameAccess","","",30,null],[13,"InvalidFrameRead","","",30,null],[13,"RasterUninitialized","","",30,null],[13,"RasterCorrupted","","",30,null],[13,"RasterOverflow","","",30,null],[13,"RasterNegativeHeight","","",30,null],[13,"TooManyCaches","","",30,null],[13,"InvalidOpcode","","",30,null],[13,"TooFewArguments","","",30,null],[13,"StackOverflow","","",30,null],[13,"CodeOverflow","","",30,null],[13,"BadArgument","","",30,null],[13,"DivideByZero","","",30,null],[13,"InvalidReference","","",30,null],[13,"DebugOpCode","","",30,null],[13,"ENDFInExecStream","","",30,null],[13,"NestedDEFS","","",30,null],[13,"InvalidCodeRange","","",30,null],[13,"ExecutionTooLong","","",30,null],[13,"TooManyFunctionDefs","","",30,null],[13,"TooManyInstructionDefs","","",30,null],[13,"TableMissing","","",30,null],[13,"HorizHeaderMissing","","",30,null],[13,"LocationsMissing","","",30,null],[13,"NameTableMissing","","",30,null],[13,"CMapTableMissing","","",30,null],[13,"HmtxTableMissing","","",30,null],[13,"PostTableMissing","","",30,null],[13,"InvalidHorizMetrics","","",30,null],[13,"InvalidCharMapFormat","","",30,null],[13,"InvalidPPem","","",30,null],[13,"InvalidVertMetrics","","",30,null],[13,"CouldNotFindContext","","",30,null],[13,"InvalidPostTableFormat","","",30,null],[13,"InvalidPostTable","","",30,null],[13,"Syntax","","",30,null],[13,"StackUnderflow","","",30,null],[13,"Ignore","","",30,null],[13,"NoUnicodeGlyphName","","",30,null],[13,"MissingStartfontField","","",30,null],[13,"MissingFontField","","",30,null],[13,"MissingSizeField","","",30,null],[13,"MissingFontboundingboxField","","",30,null],[13,"MissingCharsField","","",30,null],[13,"MissingStartcharField","","",30,null],[13,"MissingEncodingField","","",30,null],[13,"MissingBbxField","","",30,null],[13,"BbxTooBig","","",30,null],[13,"CorruptedFontHeader","","",30,null],[13,"CorruptedFontGlyphs","","",30,null],[13,"Max","","",30,null],[13,"UnexpectedPixelMode","","",30,null],[13,"InvalidPath","","",30,null],[13,"Unknown","","",30,null],[6,"FtResult","","",null,null],[11,"fmt","","",30,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",30,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"self"}}],[11,"fmt","","",30,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"face","freetype","",null,null],[3,"LoadFlag","freetype::face","",null,null],[3,"Face","","",null,null],[4,"KerningMode","","",null,null],[13,"KerningDefault","","",31,null],[13,"KerningUnfitted","","",31,null],[13,"KerningUnscaled","","",31,null],[17,"DEFAULT","","",null,null],[17,"NO_SCALE","","",null,null],[17,"NO_HINTING","","",null,null],[17,"RENDER","","",null,null],[17,"NO_BITMAP","","",null,null],[17,"VERTICAL_LAYOUT","","",null,null],[17,"FORCE_AUTOHINT","","",null,null],[17,"CROP_BITMAP","","",null,null],[17,"PEDANTIC","","",null,null],[17,"IGNORE_GLOBAL_ADVANCE_WITH","","",null,null],[17,"NO_RECURSE","","",null,null],[17,"IGNORE_TRANSFORM","","",null,null],[17,"MONOCHROME","","",null,null],[17,"LINEAR_DESIGN","","",null,null],[17,"NO_AUTOHINT","","",null,null],[17,"TARGET_NORMAL","","",null,null],[17,"TARGET_LIGHT","","",null,null],[17,"TARGET_MONO","","",null,null],[17,"TARGET_LCD","","",null,null],[17,"TARGET_LCD_V","","",null,null],[17,"COLOR","","",null,null],[11,"clone","","",31,{"inputs":[{"name":"kerningmode"}],"output":{"name":"kerningmode"}}],[11,"hash","","",32,null],[11,"cmp","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"eq","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"all","","Returns the set containing all flags.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",32,{"inputs":[{"name":"loadflag"},{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",32,{"inputs":[{"name":"loadflag"},{"name":"i32"}],"output":{"name":"loadflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"loadflag"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"loadflag"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"loadflag"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",32,{"inputs":[{"name":"loadflag"},{"name":"loadflag"}],"output":{"name":"loadflag"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",32,{"inputs":[{"name":"loadflag"}],"output":{"name":"loadflag"}}],[11,"hash","","",33,null],[11,"eq","","",33,{"inputs":[{"name":"face"},{"name":"face"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"face"},{"name":"face"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"face"}],"output":{"name":"self"}}],[11,"from_raw","","",33,{"inputs":[{"name":"face"},{"name":"ft_library"},{"name":"ft_face"}],"output":{"name":"self"}}],[11,"attach_file","","",33,{"inputs":[{"name":"face"},{"name":"str"}],"output":{"name":"ftresult"}}],[11,"reference","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ftresult"}}],[11,"set_char_size","","",33,{"inputs":[{"name":"face"},{"name":"isize"},{"name":"isize"},{"name":"u32"},{"name":"u32"}],"output":{"name":"ftresult"}}],[11,"set_pixel_sizes","","",33,{"inputs":[{"name":"face"},{"name":"u32"},{"name":"u32"}],"output":{"name":"ftresult"}}],[11,"load_glyph","","",33,{"inputs":[{"name":"face"},{"name":"u32"},{"name":"loadflag"}],"output":{"name":"ftresult"}}],[11,"load_char","","",33,{"inputs":[{"name":"face"},{"name":"usize"},{"name":"loadflag"}],"output":{"name":"ftresult"}}],[11,"set_transform","","",33,{"inputs":[{"name":"face"},{"name":"matrix"},{"name":"vector"}],"output":null}],[11,"get_char_index","","",33,{"inputs":[{"name":"face"},{"name":"usize"}],"output":{"name":"u32"}}],[11,"get_kerning","","",33,{"inputs":[{"name":"face"},{"name":"u32"},{"name":"u32"},{"name":"kerningmode"}],"output":{"name":"ftresult"}}],[11,"glyph","","",33,{"inputs":[{"name":"face"}],"output":{"name":"glyphslot"}}],[11,"has_horizontal","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_vertical","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_kerning","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_scalable","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_sfnt","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_fixed_width","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_fixed_sizes","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_glyph_names","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_cid_keyed","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"is_tricky","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"has_color","","",33,{"inputs":[{"name":"face"}],"output":{"name":"bool"}}],[11,"raw","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_facerec"}}],[11,"raw_mut","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_facerec"}}],[11,"ascender","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"descender","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"height","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"max_advance_width","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"max_advance_height","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"underline_position","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"underline_thickness","","",33,{"inputs":[{"name":"face"}],"output":{"name":"ft_short"}}],[11,"family_name","","",33,{"inputs":[{"name":"face"}],"output":{"name":"option"}}],[11,"style_name","","",33,{"inputs":[{"name":"face"}],"output":{"name":"option"}}],[11,"size_metrics","","",33,{"inputs":[{"name":"face"}],"output":{"name":"option"}}],[11,"fmt","","",33,{"inputs":[{"name":"face"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",33,{"inputs":[{"name":"face"}],"output":null}],[0,"glyph","freetype","",null,null],[3,"Glyph","freetype::glyph","",null,null],[11,"from_raw","","",34,{"inputs":[{"name":"glyph"},{"name":"ft_library"},{"name":"ft_glyph"}],"output":{"name":"self"}}],[11,"transform","","",34,{"inputs":[{"name":"glyph"},{"name":"option"},{"name":"option"}],"output":{"name":"ftresult"}}],[11,"get_cbox","","",34,{"inputs":[{"name":"glyph"},{"name":"ft_glyph_bbox_mode"}],"output":{"name":"bbox"}}],[11,"to_bitmap","","",34,{"inputs":[{"name":"glyph"},{"name":"rendermode"},{"name":"option"}],"output":{"name":"ftresult"}}],[11,"advance_x","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"isize"}}],[11,"advance_y","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"isize"}}],[11,"advance","","DEPRECATED: use advance_x and advance_y instead",34,{"inputs":[{"name":"glyph"}],"output":{"name":"ft_vector"}}],[11,"format","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"ft_glyph_format"}}],[11,"raw","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"ft_glyphrec"}}],[11,"clone","","",34,{"inputs":[{"name":"glyph"}],"output":{"name":"self"}}],[11,"drop","","",34,{"inputs":[{"name":"glyph"}],"output":null}],[0,"glyph_slot","freetype","",null,null],[3,"GlyphSlot","freetype::glyph_slot","",null,null],[11,"hash","","",35,null],[11,"eq","","",35,{"inputs":[{"name":"glyphslot"},{"name":"glyphslot"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"glyphslot"},{"name":"glyphslot"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"glyphslot"}}],[11,"from_raw","","",35,{"inputs":[{"name":"glyphslot"},{"name":"ft_library"},{"name":"ft_glyphslot"}],"output":{"name":"self"}}],[11,"render_glyph","","",35,{"inputs":[{"name":"glyphslot"},{"name":"rendermode"}],"output":{"name":"ftresult"}}],[11,"get_subglyph_info","","",35,{"inputs":[{"name":"glyphslot"},{"name":"u32"}],"output":{"name":"ftresult"}}],[11,"get_glyph","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"ftresult"}}],[11,"outline","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"option"}}],[11,"bitmap","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"bitmap"}}],[11,"bitmap_left","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"i32"}}],[11,"bitmap_top","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"i32"}}],[11,"advance","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"vector"}}],[11,"linear_hori_advance","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"ft_fixed"}}],[11,"linear_vert_advance","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"ft_fixed"}}],[11,"metrics","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"glyphmetrics"}}],[11,"raw","","",35,{"inputs":[{"name":"glyphslot"}],"output":{"name":"ft_glyphslotrec"}}],[0,"library","freetype","",null,null],[3,"Library","freetype::library","",null,null],[11,"init","","",36,{"inputs":[{"name":"library"}],"output":{"name":"ftresult"}}],[11,"new_face","","",36,{"inputs":[{"name":"library"},{"name":"p"},{"name":"isize"}],"output":{"name":"ftresult"}}],[11,"new_memory_face","","",36,null],[11,"raw","","",36,{"inputs":[{"name":"library"}],"output":{"name":"ft_library"}}],[11,"drop","","",36,{"inputs":[{"name":"library"}],"output":null}],[0,"outline","freetype","",null,null],[3,"Outline","freetype::outline","",null,null],[3,"CurveIterator","","",null,null],[3,"ContourIterator","","",null,null],[4,"Curve","","",null,null],[13,"Line","","",37,null],[13,"Bezier2","","",37,null],[13,"Bezier3","","",37,null],[11,"clone","","",37,{"inputs":[{"name":"curve"}],"output":{"name":"curve"}}],[11,"from_raw","","",38,{"inputs":[{"name":"outline"},{"name":"ft_outline"}],"output":{"name":"self"}}],[11,"points","","",38,null],[11,"tags","","",38,null],[11,"contours","","",38,null],[11,"contours_iter","","",38,{"inputs":[{"name":"outline"}],"output":{"name":"contouriterator"}}],[11,"from_raw","","",39,{"inputs":[{"name":"curveiterator"},{"name":"ft_outline"},{"name":"isize"},{"name":"isize"}],"output":{"name":"self"}}],[11,"start","","",39,{"inputs":[{"name":"curveiterator"}],"output":{"name":"vector"}}],[6,"Item","","",null,null],[11,"next","","",39,{"inputs":[{"name":"curveiterator"}],"output":{"name":"option"}}],[11,"from_raw","","",40,{"inputs":[{"name":"contouriterator"},{"name":"ft_outline"}],"output":{"name":"self"}}],[6,"Item","","",null,null],[11,"next","","",40,{"inputs":[{"name":"contouriterator"}],"output":{"name":"option"}}],[0,"render_mode","freetype","",null,null],[4,"RenderMode","freetype::render_mode","",null,null],[13,"Normal","","",41,null],[13,"Light","","",41,null],[13,"Mono","","",41,null],[13,"Lcd","","",41,null],[13,"LcdV","","",41,null],[13,"Max","","",41,null],[11,"clone","","",41,{"inputs":[{"name":"rendermode"}],"output":{"name":"rendermode"}}],[0,"tt_os2","freetype","",null,null],[3,"TrueTypeOS2Table","freetype::tt_os2","",null,null],[11,"clone","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"truetypeos2table"}}],[11,"version","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_ushort"}}],[11,"avg_char_width","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"us_weight_class","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_ushort"}}],[11,"us_width_class","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_ushort"}}],[11,"fs_type","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_subscript_x_size","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_subscript_y_size","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_subscript_x_offset","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_subscript_y_offset","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_superscript_x_size","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_superscript_y_size","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_superscript_x_offset","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_superscript_y_offset","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_strikeout_size","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"y_strikeout_position","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[11,"s_family_class","","",42,{"inputs":[{"name":"truetypeos2table"}],"output":{"name":"ft_short"}}],[6,"BBox","freetype","",null,null],[6,"GlyphMetrics","","",null,null],[6,"Matrix","","",null,null],[6,"Vector","","",null,null]],"paths":[[3,"FT_Vector"],[3,"FT_BBox"],[3,"FT_Matrix"],[3,"FT_UnitVector"],[3,"FT_Size_Metrics"],[3,"FT_Glyph_Metrics"],[3,"FT_Parameter"],[3,"FT_Bitmap_Size"],[3,"TT_OS2"],[3,"FT_CharMapRec"],[3,"FT_ListRec"],[3,"FT_Size_RequestRec"],[8,"FTErrorMethods"],[3,"FT_Bitmap"],[3,"FT_Data"],[3,"FT_Generic"],[3,"FT_Outline"],[3,"FT_Open_Args"],[3,"FT_FaceRec"],[3,"FT_GlyphSlotRec"],[3,"FT_SizeRec"],[3,"FT_StreamRec"],[3,"FT_MemoryRec"],[3,"FT_ListNodeRec"],[3,"FT_GlyphRec"],[3,"FT_BitmapGlyphRec"],[3,"FT_OutlineGlyphRec"],[4,"PixelMode"],[3,"Bitmap"],[3,"BitmapGlyph"],[4,"Error"],[4,"KerningMode"],[3,"LoadFlag"],[3,"Face"],[3,"Glyph"],[3,"GlyphSlot"],[3,"Library"],[4,"Curve"],[3,"Outline"],[3,"CurveIterator"],[3,"ContourIterator"],[4,"RenderMode"],[3,"TrueTypeOS2Table"]]};
searchIndex['xml'] = {"items":[[0,"","xml","This crate currently provides almost XML 1.0/1.1-compliant pull parser.",null,null],[0,"macros","","Contains several macros used in this crate.",null,null],[0,"name","","",null,null],[3,"Name","xml::name","Represents a qualified XML name.",null,null],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",0,null],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",0,null],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",0,null],[3,"OwnedName","","An owned variant of `Name`.",null,null],[12,"local_name","","A local name, e.g. `string` in `xsi:string`.",1,null],[12,"namespace","","A namespace URI, e.g. `http://www.w3.org/2000/xmlns/`.",1,null],[12,"prefix","","A name prefix, e.g. `xsi` in `xsi:string`.",1,null],[11,"fmt","","",0,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"eq","","",0,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"name"},{"name":"name"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"name"}],"output":{"name":"name"}}],[11,"fmt","","",0,{"inputs":[{"name":"name"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_owned","","Returns an owned variant of the qualified name.",0,{"inputs":[{"name":"name"}],"output":{"name":"ownedname"}}],[11,"local","","Returns a new `Name` instance representing plain local name.",0,{"inputs":[{"name":"name"},{"name":"str"}],"output":{"name":"name"}}],[11,"qualified","","Returns a new `Name` instance representing a qualified name with or without a prefix and\nwith a namespace URI.",0,{"inputs":[{"name":"name"},{"name":"str"},{"name":"str"},{"name":"option"}],"output":{"name":"name"}}],[11,"to_repr","","Returns correct XML representation of this local name and prefix.",0,{"inputs":[{"name":"name"}],"output":{"name":"string"}}],[11,"fmt","","",1,{"inputs":[{"name":"ownedname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"ownedname"},{"name":"ownedname"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"ownedname"},{"name":"ownedname"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"ownedname"}}],[11,"fmt","","",1,{"inputs":[{"name":"ownedname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","Constructs a borrowed `Name` based on this owned name.",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"name"}}],[11,"local","","Returns a new `OwnedName` instance representing a plain local name.",1,{"inputs":[{"name":"ownedname"},{"name":"s"}],"output":{"name":"ownedname"}}],[11,"qualified","","Returns a new `OwnedName` instance representing a qualified name with or without\na prefix and with a namespace URI.",1,{"inputs":[{"name":"ownedname"},{"name":"s1"},{"name":"s2"},{"name":"option"}],"output":{"name":"ownedname"}}],[11,"prefix_as_ref","","Returns an optional prefix by reference, equivalent to `self.borrow().prefix`\nbut avoids extra work.",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"option"}}],[11,"namespace_as_ref","","Returns an optional namespace by reference, equivalen to `self.borrow().namespace`\nbut avoids extra work.",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"option"}}],[11,"to_repr","","See `Name::to_repr()` for details.",1,{"inputs":[{"name":"ownedname"}],"output":{"name":"string"}}],[6,"Err","","",null,null],[11,"from_str","","Parses the given string slice into a qualified name.",1,{"inputs":[{"name":"ownedname"},{"name":"str"}],"output":{"name":"result"}}],[0,"attribute","xml","",null,null],[3,"Attribute","xml::attribute","A borrowed version of an XML attribute.",null,null],[12,"name","","Attribute name.",2,null],[12,"value","","Attribute value.",2,null],[3,"OwnedAttribute","","",null,null],[12,"name","","",3,null],[12,"value","","",3,null],[11,"fmt","","",2,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",2,null],[11,"eq","","",2,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"attribute"},{"name":"attribute"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"attribute"}],"output":{"name":"attribute"}}],[11,"fmt","","",2,{"inputs":[{"name":"attribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_owned","","",2,{"inputs":[{"name":"attribute"}],"output":{"name":"ownedattribute"}}],[11,"new","","",2,{"inputs":[{"name":"attribute"},{"name":"name"},{"name":"str"}],"output":{"name":"attribute"}}],[11,"fmt","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"eq","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"ownedattribute"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"ownedattribute"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"ownedattribute"}],"output":{"name":"ownedattribute"}}],[11,"borrow","","",3,{"inputs":[{"name":"ownedattribute"}],"output":{"name":"attribute"}}],[11,"new","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"ownedname"},{"name":"string"}],"output":{"name":"ownedattribute"}}],[11,"fmt","","",3,{"inputs":[{"name":"ownedattribute"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"common","xml","Contains several types used throughout the library.",null,null],[3,"TextPosition","xml::common","Represents a position inside some textual document.",null,null],[12,"row","","Row, counting from 0",4,null],[12,"column","","Column, counting from 0",4,null],[3,"Error","","XML parsing error.",null,null],[4,"XmlVersion","","XML version enumeration.",null,null],[13,"Version10","","XML version 1.0.",5,null],[13,"Version11","","XML version 1.1.",5,null],[5,"is_whitespace_char","","Checks whether the given character is a white space character (`S`)\nas is defined by XML 1.1 specification, [section 2.3][1].",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[5,"is_name_start_char","","Checks whether the given character is a name start character (`NameStartChar`)\nas is defined by XML 1.1 specification, [section 2.3][1].",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[5,"is_name_char","","Checks whether the given character is a name character (`NameChar`)\nas is defined by XML 1.1 specification, [section 2.3][1].",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[8,"Position","","Get the position in the document corresponding to the object",null,null],[10,"position","","Returns the current position or a position corresponding to the object.",6,{"inputs":[{"name":"position"}],"output":{"name":"textposition"}}],[11,"eq","","",4,{"inputs":[{"name":"textposition"},{"name":"textposition"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"textposition"},{"name":"textposition"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"textposition"}],"output":{"name":"textposition"}}],[11,"new","","Creates a new position initialized to the beginning of the document",4,{"inputs":[{"name":"textposition"}],"output":{"name":"textposition"}}],[11,"advance","","Advances the position in a line",4,{"inputs":[{"name":"textposition"},{"name":"u8"}],"output":null}],[11,"advance_to_tab","","Advances the position in a line to the next tab position",4,{"inputs":[{"name":"textposition"},{"name":"u8"}],"output":null}],[11,"new_line","","Advances the position to the beginning of the next line",4,{"inputs":[{"name":"textposition"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"textposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"textposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"position","","",4,{"inputs":[{"name":"textposition"}],"output":{"name":"textposition"}}],[11,"fmt","","",7,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",7,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"position","","",7,{"inputs":[{"name":"error"}],"output":{"name":"textposition"}}],[11,"new","","Creates a new error using position information from the provided\n`Position` object and a message.",7,{"inputs":[{"name":"error"},{"name":"o"},{"name":"string"}],"output":{"name":"error"}}],[11,"msg","","Returns a reference to a message which is contained inside this error.",7,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"description","","",7,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"eq","","",5,{"inputs":[{"name":"xmlversion"},{"name":"xmlversion"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"xmlversion"},{"name":"xmlversion"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"xmlversion"}],"output":{"name":"xmlversion"}}],[11,"fmt","","",5,{"inputs":[{"name":"xmlversion"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"escape","xml","",null,null],[5,"escape_str","xml::escape","Performs escaping of common XML characters.",null,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[0,"namespace","xml","",null,null],[3,"Namespace","xml::namespace","Namespace is a map from prefixes to namespace URIs.",null,null],[3,"NamespaceMappings","","An iterator over mappings from prefixes to URIs in a namespace.",null,null],[3,"NamespaceStack","","Namespace stack is a sequence of namespaces.",null,null],[3,"NamespaceStackMappings","","An iterator over mappings from prefixes to URIs in a namespace stack.",null,null],[6,"UriMapping","","",null,null],[17,"NS_XMLNS_PREFIX","","",null,null],[17,"NS_XMLNS_URI","","",null,null],[17,"NS_XML_PREFIX","","",null,null],[17,"NS_XML_URI","","",null,null],[17,"NS_EMPTY_URI","","",null,null],[8,"NamespaceIterable","","Denotes something which contains namespace URI mappings.",null,null],[16,"Iter","","",8,null],[10,"uri_mappings","","",8,{"inputs":[{"name":"namespaceiterable"}],"output":{"name":"iter"}}],[11,"clone","","",9,{"inputs":[{"name":"namespace"}],"output":{"name":"namespace"}}],[11,"eq","","",9,{"inputs":[{"name":"namespace"},{"name":"namespace"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"namespace"},{"name":"namespace"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty namespace.",9,{"inputs":[{"name":"namespace"}],"output":{"name":"namespace"}}],[11,"is_empty","","Checks whether this namespace is empty.",9,{"inputs":[{"name":"namespace"}],"output":{"name":"bool"}}],[11,"is_essentially_empty","","Checks whether this namespace is essentially empty, that is, it does not contain\nanything but the default mappings.",9,{"inputs":[{"name":"namespace"}],"output":{"name":"bool"}}],[11,"put","","Puts a mapping into this namespace.",9,{"inputs":[{"name":"namespace"},{"name":"option"},{"name":"s2"}],"output":{"name":"bool"}}],[11,"force_put","","Puts a mapping into this namespace forcefully.",9,{"inputs":[{"name":"namespace"},{"name":"option"},{"name":"s2"}],"output":{"name":"option"}}],[11,"get","","Queries the namespace for the given prefix.",9,{"inputs":[{"name":"namespace"},{"name":"option"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",10,{"inputs":[{"name":"namespacemappings"}],"output":{"name":"option"}}],[6,"Iter","","",null,null],[11,"uri_mappings","","",9,{"inputs":[{"name":"namespace"}],"output":{"name":"namespacemappings"}}],[11,"eq","","",11,{"inputs":[{"name":"namespacestack"},{"name":"namespacestack"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"namespacestack"},{"name":"namespacestack"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespacestack"}}],[11,"empty","","Returns an empty namespace stack.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespacestack"}}],[11,"default","","Returns a namespace stack with default items in it.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespacestack"}}],[11,"push_empty","","Adds an empty namespace to the top of this stack.",11,{"inputs":[{"name":"namespacestack"}],"output":null}],[11,"pop","","Removes a namespace at the top of the stack.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespace"}}],[11,"peek","","Returns a namespace at the top of the stack, leaving the stack intact.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespace"}}],[11,"put","","Puts a mapping into the topmost namespace in this stack.",11,{"inputs":[{"name":"namespacestack"},{"name":"option"},{"name":"string"}],"output":{"name":"bool"}}],[11,"get","","Performs a search for the given prefix in the whole stack.",11,{"inputs":[{"name":"namespacestack"},{"name":"option"}],"output":{"name":"option"}}],[11,"squash","","Combines this stack of namespaces into a single namespace.",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespace"}}],[6,"Item","","",null,null],[11,"next","","",12,{"inputs":[{"name":"namespacestackmappings"}],"output":{"name":"option"}}],[6,"Iter","","",null,null],[11,"uri_mappings","","",11,{"inputs":[{"name":"namespacestack"}],"output":{"name":"namespacestackmappings"}}],[0,"reader","xml","Contains high-level interface for a pull-based XML parser.",null,null],[3,"EventReader","xml::reader","Simple wrapper around an `std::io::BufReader` which provides pull-based XML parsing.",null,null],[3,"Events","","XML events iterator, created by `events()` method on `Parser`.",null,null],[0,"config","","Contains parser configuration structure.",null,null],[3,"ParserConfig","xml::reader::config","Parser configuration structure.",null,null],[12,"trim_whitespace","","Whether or not should whitespace be removed. Default is false.",13,null],[12,"whitespace_to_characters","","Whether or not should whitespace be converted to characters.\nDefault is false.",13,null],[12,"cdata_to_characters","","Whether or not should CDATA be converted to characters.\nDefault is false.",13,null],[12,"ignore_comments","","Whether or not should comments be omitted. Default is true.",13,null],[12,"coalesce_characters","","Whether or not should sequential `Characters` events be merged.\nDefault is true.",13,null],[11,"new","","Returns a new config with default values.",13,{"inputs":[{"name":"parserconfig"}],"output":{"name":"parserconfig"}}],[11,"trim_whitespace","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[11,"whitespace_to_characters","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[11,"ignore_comments","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[11,"coalesce_characters","","Sets the field to the provided value and returns updated config object.",13,{"inputs":[{"name":"parserconfig"},{"name":"bool"}],"output":{"name":"parserconfig"}}],[0,"events","xml::reader","Contains `XmlEvent` datatype, instances of which are emitted by the parser.",null,null],[4,"XmlEvent","xml::reader::events","An element of an XML input stream.",null,null],[13,"StartDocument","","Corresponds to XML document declaration.",14,null],[12,"version","xml::reader::events::XmlEvent","XML version.",14,null],[12,"encoding","","XML document encoding.",14,null],[12,"standalone","","XML standalone declaration.",14,null],[13,"EndDocument","xml::reader::events","Denotes to the end of the document stream.",14,null],[13,"ProcessingInstruction","","Denotes an XML processing instruction.",14,null],[12,"name","xml::reader::events::XmlEvent","Processing instruction target.",14,null],[12,"data","","Processing instruction content.",14,null],[13,"StartElement","xml::reader::events","Denotes a beginning of an XML element.",14,null],[12,"name","xml::reader::events::XmlEvent","Qualified name of the element.",14,null],[12,"attributes","","A list of attributes associated with the element.",14,null],[12,"namespace","","Contents of the namespace mapping at this point of the document.",14,null],[13,"EndElement","xml::reader::events","Denotes an end of an XML document.",14,null],[12,"name","xml::reader::events::XmlEvent","Qualified name of the element.",14,null],[13,"CData","xml::reader::events","Denotes CDATA content.",14,null],[13,"Comment","","Denotes a comment.",14,null],[13,"Characters","","Denotes character data outside of tags.",14,null],[13,"Whitespace","","Denotes a chunk of whitespace outside of tags.",14,null],[13,"Error","","Denotes parsing error.",14,null],[11,"clone","","",14,{"inputs":[{"name":"xmlevent"}],"output":{"name":"xmlevent"}}],[11,"eq","","",14,{"inputs":[{"name":"xmlevent"},{"name":"xmlevent"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"xmlevent"},{"name":"xmlevent"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"xmlevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_writer_event","","",14,{"inputs":[{"name":"xmlevent"}],"output":{"name":"option"}}],[11,"new","xml::reader","Creates a new parser, consuming given stream.",15,{"inputs":[{"name":"eventreader"},{"name":"b"}],"output":{"name":"eventreader"}}],[11,"with_config","","Creates a new parser with the provded configuration, consuming given `Buffer`.",15,{"inputs":[{"name":"eventreader"},{"name":"b"},{"name":"parserconfig"}],"output":{"name":"eventreader"}}],[11,"next","","Pulls and returns next XML event from the stream.",15,{"inputs":[{"name":"eventreader"}],"output":{"name":"xmlevent"}}],[11,"events","","Returns an iterator over XML events.",15,{"inputs":[{"name":"eventreader"}],"output":{"name":"events"}}],[11,"position","","Returns the position of the last event produced by the parser",15,{"inputs":[{"name":"eventreader"}],"output":{"name":"textposition"}}],[6,"Item","","",null,null],[11,"next","","",16,{"inputs":[{"name":"events"}],"output":{"name":"option"}}],[11,"from_str","","Convenience method to create a reader from a string slice.",15,{"inputs":[{"name":"eventreader"},{"name":"str"}],"output":{"name":"eventreader"}}],[0,"writer","xml","",null,null],[3,"EventWriter","xml::writer","",null,null],[0,"config","","Contains emitter configuration structure.",null,null],[3,"EmitterConfig","xml::writer::config","Emitter configuration structure.",null,null],[12,"line_separator","","Line separator used to separate lines in formatted output. Default is `\"\\n\"`.",17,null],[12,"indent_string","","A string which will be used for a single level of indentation. Default is `\"  \"`\n(two spaces).",17,null],[12,"perform_indent","","Whether or not the emitted document should be indented. Default is false.",17,null],[12,"write_document_declaration","","Whether or not to write XML document declaration at the beginning of a document.\nDefault is true.",17,null],[12,"normalize_empty_elements","","Whether or not to convert elements with empty content to empty elements. Default is true.",17,null],[12,"cdata_to_characters","","Whether or not to emit CDATA events as plain characters. Default is false.",17,null],[11,"new","","Creates an emitter configuration with default values.",17,{"inputs":[{"name":"emitterconfig"}],"output":{"name":"emitterconfig"}}],[11,"line_separator","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"string"}],"output":{"name":"emitterconfig"}}],[11,"indent_string","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"string"}],"output":{"name":"emitterconfig"}}],[11,"perform_indent","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"bool"}],"output":{"name":"emitterconfig"}}],[11,"write_document_declaration","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"bool"}],"output":{"name":"emitterconfig"}}],[11,"normalize_empty_elements","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"bool"}],"output":{"name":"emitterconfig"}}],[11,"cdata_to_characters","","Sets the field to the provided value and returns updated config object.",17,{"inputs":[{"name":"emitterconfig"},{"name":"bool"}],"output":{"name":"emitterconfig"}}],[0,"events","xml::writer","",null,null],[4,"XmlEvent","xml::writer::events","An element of an XML output stream.",null,null],[13,"StartDocument","","Corresponds to XML document declaration.",18,null],[12,"version","xml::writer::events::XmlEvent","XML version.",18,null],[12,"encoding","","XML document encoding.",18,null],[12,"standalone","","XML standalone declaration.",18,null],[13,"ProcessingInstruction","xml::writer::events","Denotes an XML processing instruction.",18,null],[12,"name","xml::writer::events::XmlEvent","Processing instruction target.",18,null],[12,"data","","Processing instruction content.",18,null],[13,"StartElement","xml::writer::events","Denotes a beginning of an XML element.",18,null],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",18,null],[12,"attributes","","A list of attributes associated with the element.",18,null],[12,"namespace","","Contents of the namespace mapping at this point of the document.",18,null],[13,"EndElement","xml::writer::events","Denotes an end of an XML document.",18,null],[12,"name","xml::writer::events::XmlEvent","Qualified name of the element.",18,null],[13,"CData","xml::writer::events","Denotes CDATA content.",18,null],[13,"Comment","","Denotes a comment.",18,null],[13,"Characters","","Denotes character data outside of tags.",18,null],[6,"EventWriterResult","xml::writer","",null,null],[11,"new","","",19,{"inputs":[{"name":"eventwriter"},{"name":"w"}],"output":{"name":"eventwriter"}}],[11,"new_with_config","","",19,{"inputs":[{"name":"eventwriter"},{"name":"w"},{"name":"emitterconfig"}],"output":{"name":"eventwriter"}}],[11,"write","","",19,{"inputs":[{"name":"eventwriter"},{"name":"xmlevent"}],"output":{"name":"eventwriterresult"}}],[11,"new_into_mem","","",19,{"inputs":[{"name":"eventwriter"},{"name":"vec"}],"output":{"name":"eventwriter"}}],[11,"new_into_mem_config","","",19,{"inputs":[{"name":"eventwriter"},{"name":"vec"},{"name":"emitterconfig"}],"output":{"name":"eventwriter"}}],[0,"util","xml","",null,null],[3,"ClonedPairwise","xml::util","",null,null],[8,"OptionBorrowExt","","",null,null],[10,"borrow_internals","","",20,{"inputs":[{"name":"optionborrowext"}],"output":{"name":"option"}}],[8,"IteratorClonedPairwiseExt","","",null,null],[10,"cloned_pairwise","","",21,{"inputs":[{"name":"iteratorclonedpairwiseext"}],"output":{"name":"clonedpairwise"}}],[11,"borrow_internals","core::option","",22,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[6,"Item","xml::util","",null,null],[11,"next","","",23,{"inputs":[{"name":"clonedpairwise"}],"output":{"name":"option"}}]],"paths":[[3,"Name"],[3,"OwnedName"],[3,"Attribute"],[3,"OwnedAttribute"],[3,"TextPosition"],[4,"XmlVersion"],[8,"Position"],[3,"Error"],[8,"NamespaceIterable"],[3,"Namespace"],[3,"NamespaceMappings"],[3,"NamespaceStack"],[3,"NamespaceStackMappings"],[3,"ParserConfig"],[4,"XmlEvent"],[3,"EventReader"],[3,"Events"],[3,"EmitterConfig"],[4,"XmlEvent"],[3,"EventWriter"],[8,"OptionBorrowExt"],[8,"IteratorClonedPairwiseExt"],[4,"Option"],[3,"ClonedPairwise"]]};
searchIndex['shared_library'] = {"items":[[0,"","shared_library","",null,null],[4,"LoadingError","","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"mutex"},{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"box"},{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",5,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","","",6,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",8,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"is","shared_library::dynamic_library","Returns true if the boxed type is the same as `T`",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",9,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",9,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"into_ascii_uppercase","collections::string","",10,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"into_ascii_lowercase","","",10,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"into_ascii_uppercase","collections::vec","",11,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"into_ascii_lowercase","","",11,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"next","std::ascii","",12,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",12,null],[11,"next_back","","",12,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"shl","core::num","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr","","",13,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"not","","",13,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand","","",13,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"clone","std::thread::local","",14,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",14,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",15,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",15,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"get","std::thread::local::imp","",16,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",17,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",17,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",17,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",18,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",18,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",18,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",18,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"scoped","","Spawns a new child thread that must be joined within a given\nscope, and returns a `JoinGuard`.",18,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle's token available if it is not already.",19,null],[11,"name","","Gets the thread's name.",19,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",19,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",19,{"inputs":[{"name":"thread"},{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",20,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",20,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"thread","","Extracts a handle to the thread this guard will join on.",21,{"inputs":[{"name":"joinguard"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish, returning the result of the\nthread's calculation.",21,{"inputs":[{"name":"joinguard"}],"output":{"name":"t"}}],[11,"drop","","",21,null],[11,"clone","std::collections::hash::table","",22,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",23,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",24,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",24,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",24,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",23,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",23,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",23,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",23,{"inputs":[{"name":"bucket"},{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",23,{"inputs":[{"name":"bucket"},{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit's initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",23,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",23,null],[11,"next","","",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",26,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key's hash,\ninto this bucket in the hashtable. Note how `self` is 'moved' into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",26,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the 'ideal' location\nas determined by the key's hash stored in it.",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",25,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",25,null],[11,"take","","Removes this bucket's key and value from the hashtable.",25,null],[11,"replace","","",25,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",25,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",25,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",25,null],[11,"expect_full","","",27,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",28,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",28,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",29,{"inputs":[{"name":"rawtable"},{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable's capacity, similar to a vector's.",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",30,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",30,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",31,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"len","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",33,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",33,null],[11,"len","","",33,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",34,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",34,null],[11,"len","","",34,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",35,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[11,"len","","",35,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",35,null],[11,"clone","","",29,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",29,null],[11,"clone","std::collections::hash::map","",36,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",37,{"inputs":[{"name":"hashmap"},{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Creates an empty hashmap which will use the given hasher to hash keys.",37,{"inputs":[{"name":"hashmap"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",37,{"inputs":[{"name":"hashmap"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",37,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",37,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&'a K`.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&'a V`.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&'a K, &'a V)`.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&'a K, &'a mut V)`.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",37,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",37,null],[11,"get","","Returns a reference to the value corresponding to the key.",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",37,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",37,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"index","","",37,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",38,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",39,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",40,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",37,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",38,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"len","","",38,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",41,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"len","","",41,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",42,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",42,null],[11,"len","","",42,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",39,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"len","","",39,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",40,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"len","","",40,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",43,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",43,null],[11,"len","","",43,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",44,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",44,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",44,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",45,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",45,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",45,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry's old value",45,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",45,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it",46,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",37,{"inputs":[{"name":"hashmap"},{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",37,null],[11,"clone","","",47,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",47,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"hasher","","",47,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",47,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",48,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",48,{"inputs":[{"name":"hashset"},{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hash_state","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",48,{"inputs":[{"name":"hashset"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",48,{"inputs":[{"name":"hashset"},{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",48,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",48,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &'a T.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",48,null],[11,"contains","","Returns `true` if the set contains a value.",48,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",48,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",48,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"eq","","",48,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",48,{"inputs":[{"name":"hashset"},{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",48,null],[11,"default","","",48,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",48,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"len","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",50,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"len","","",50,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",51,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"len","","",51,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",52,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",52,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",52,null],[11,"clone","","",53,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",53,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",53,null],[11,"clone","","",54,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",54,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"clone","","",55,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",55,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"hasher","std::collections::hash::state","",56,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",56,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",56,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"clone","collections::vec_deque","",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",57,null],[11,"default","","",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",57,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",57,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`Ringbuf`. The collection may reserve more space to avoid frequent reallocations.",57,null],[11,"shrink_to_fit","","Shrinks the capacity of the ringbuf as much as possible.",57,null],[11,"truncate","","Shortens a ringbuf, dropping excess elements from the back.",57,null],[11,"iter","","Returns a front-to-back iterator.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",57,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",57,null],[11,"len","","Returns the number of elements in the `VecDeque`.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",57,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",57,null],[11,"push_back","","Appends an element to the back of a buffer",57,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the last\nelement.",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the first\nelement.",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at position `i` within the ringbuf. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",57,null],[11,"remove","","Removes and returns the element at position `i` from the ringbuf.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `i` is out of bounds.",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",57,null],[11,"retain","","Retains only the elements specified by the predicate.",57,null],[11,"resize","","Modifies the ringbuf in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",57,null],[11,"clone","","",58,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",58,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next_back","","",58,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",58,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",58,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",60,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",60,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"next_back","","",60,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",61,null],[11,"next","","",61,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",57,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",57,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",57,null],[11,"index","","",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",57,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",57,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",57,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",57,null],[11,"fmt","","",57,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","collections::binary_heap","",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",62,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",62,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",62,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",62,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",62,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",62,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",62,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",62,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",62,null],[11,"clone","","",63,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",63,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"next_back","","",63,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",65,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next_back","","",65,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",62,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",62,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",62,null],[11,"default","collections::vec_map","",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone","","",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone_from","","",66,null],[11,"hash","","",66,null],[11,"new","","Creates an empty `VecMap`.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",66,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",66,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `usize`.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"values"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(usize, &'r V)`.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(usize, &'r mut V)`.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",66,null],[11,"split_off","","Splits the collection into two at the given key.",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"drain"}}],[11,"len","","Returns the number of elements in the map.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",66,null],[11,"get","","Returns a reference to the value corresponding to the key.",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",66,{"inputs":[{"name":"vecmap"},{"name":"usize"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"entry"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",67,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",67,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",67,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",68,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",69,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",69,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",69,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",69,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",69,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"eq","","",66,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"option"}}],[11,"cmp","","",66,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"ordering"}}],[11,"fmt","","",66,{"inputs":[{"name":"vecmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",66,{"inputs":[{"name":"vecmap"},{"name":"i"}],"output":{"name":"vecmap"}}],[11,"into_iter","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`.",66,{"inputs":[{"name":"vecmap"}],"output":{"name":"intoiter"}}],[11,"extend","","",66,null],[11,"index","","",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index","","",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",66,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"clone","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",71,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"next_back","","",71,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",72,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",73,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",74,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"next","","",72,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"next_back","","",72,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"next","","",73,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"next","","",75,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"next_back","","",75,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","collections::linked_list","",76,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"clone","","",78,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",79,null],[11,"iter","","Provides a forward iterator.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",79,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",79,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",79,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",79,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",79,null],[11,"next","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",80,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next_back","","",80,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",80,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",80,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",79,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",79,null],[11,"eq","","",79,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",79,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",79,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",79,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",79,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",79,null],[11,"drop","std::dynamic_lib","",81,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",81,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",81,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",81,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",81,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",81,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",81,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",82,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next","","",83,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"clone","","",84,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",84,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",84,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",85,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"fmt","","",86,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",86,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",86,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",87,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"len","","",87,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",88,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"len","","",88,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"hash","std::ffi::c_str","",89,null],[11,"cmp","","",89,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",89,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",90,null],[11,"fmt","","",91,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",91,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",89,{"inputs":[{"name":"cstring"},{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",89,{"inputs":[{"name":"cstring"},{"name":"vec"}],"output":{"name":"cstring"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",89,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",89,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",90,null],[11,"as_ptr","","Returns the inner pointer to this C string.",90,null],[11,"to_bytes","","Converts this C string to a byte slice.",90,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",90,null],[11,"deref","","",89,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",89,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",91,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",91,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",91,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",91,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",92,{"inputs":[{"name":"error"},{"name":"nulerror"}],"output":{"name":"error"}}],[11,"eq","std::ffi::c_str","",90,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",90,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"clone","std::ffi::os_str","",93,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",93,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",93,{"inputs":[{"name":"osstring"},{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",93,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",93,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&OsStr` slice.",93,null],[11,"from","","",93,{"inputs":[{"name":"osstring"},{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",93,{"inputs":[{"name":"osstring"},{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",93,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",94,{"inputs":[{"name":"osstr"},{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `OsStr` is valid unicode.",94,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow<str>`.",94,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",94,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",94,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",94,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"deref","","",93,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",93,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",93,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",93,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",93,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",93,null],[11,"eq","","",94,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",94,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",94,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"hash","","",94,null],[11,"fmt","","",94,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",93,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",94,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",94,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",93,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",10,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",95,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",96,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",97,null],[11,"eq","","",97,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",98,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",98,{"inputs":[{"name":"file"},{"name":"p"}],"output":{"name":"result"}}],[11,"path","","Returns `None`.",98,{"inputs":[{"name":"file"}],"output":{"name":"option"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",98,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",98,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",98,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",98,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",98,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",98,null],[11,"write","","",98,null],[11,"flush","","",98,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",98,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank net set of options ready for configuration.",95,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",95,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",95,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",95,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",95,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",95,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",95,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",99,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",99,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",99,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",99,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",99,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"accessed","","Returns the most recent access time for a file.",99,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"modified","","Returns the most recent modification time for a file.",99,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",96,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",96,null],[11,"is_dir","","Test whether this file type represents a directory.",97,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",97,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",97,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",100,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",101,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",101,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",101,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",101,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",102,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"metadata","std::path","",103,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","",103,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","",103,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","",103,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","",103,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","",103,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","",103,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","",103,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"new","std::fs","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",104,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",104,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",104,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"get","std::io::lazy","",105,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity",106,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity",106,{"inputs":[{"name":"bufreader"},{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",106,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",106,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",106,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",106,null],[11,"fill_buf","","",106,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",106,null],[11,"fmt","","",106,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",106,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity",108,{"inputs":[{"name":"bufwriter"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity",108,{"inputs":[{"name":"bufwriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",108,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying write.",108,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",108,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",108,null],[11,"flush","","",108,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",108,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",108,null],[11,"error","","Returns the error which caused the call to `into_inner` to fail.",107,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",107,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",92,{"inputs":[{"name":"error"},{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",107,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",107,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`",109,{"inputs":[{"name":"linewriter"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",109,{"inputs":[{"name":"linewriter"},{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",109,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",109,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",109,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",109,null],[11,"flush","","",109,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",110,null],[11,"with_capacities","","Creates a new buffered stream with explicitly listed capacities for the\nreader/writer buffer.",111,{"inputs":[{"name":"bufstream"},{"name":"usize"},{"name":"usize"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"new","","Creates a new buffered stream with the default reader/writer buffer\ncapacities.",111,{"inputs":[{"name":"bufstream"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"get_ref","","Gets a reference to the underlying stream.",111,{"inputs":[{"name":"bufstream"}],"output":{"name":"s"}}],[11,"get_mut","","Gets a mutable reference to the underlying stream.",111,{"inputs":[{"name":"bufstream"}],"output":{"name":"s"}}],[11,"into_inner","","Unwraps this `BufStream`, returning the underlying stream.",111,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"fill_buf","","",111,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"consume","","",111,null],[11,"read","","",111,null],[11,"write","","",111,null],[11,"flush","","",111,{"inputs":[{"name":"bufstream"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"bufstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",112,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",112,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",112,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",112,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",112,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current value of this cursor",112,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the value of this cursor",112,null],[11,"seek","","",112,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",112,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"seek","","",112,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",112,null],[11,"read","","",112,null],[11,"read","","",112,null],[11,"fill_buf","","",112,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",112,null],[11,"fill_buf","","",112,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",112,null],[11,"fill_buf","","",112,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",112,null],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",92,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",114,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",115,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",92,{"inputs":[{"name":"error"},{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",92,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",92,{"inputs":[{"name":"error"},{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",92,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",92,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",92,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",92,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",2,null],[11,"write_fmt","","",2,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",2,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",2,null],[11,"read_until","","",2,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",11,null],[11,"write_all","","",11,null],[11,"flush","","",11,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"read","std::io::util","",116,null],[11,"fill_buf","","",116,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",116,null],[11,"read","","",117,null],[11,"write","","",118,null],[11,"flush","","",118,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",119,null],[11,"write","","",120,null],[11,"flush","","",120,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",121,null],[11,"flush","","",121,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",122,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",122,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",122,null],[11,"read_to_end","","",122,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",122,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",123,null],[11,"fill_buf","","",123,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",123,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",124,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",124,null],[11,"flush","","",124,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",124,null],[11,"write_fmt","","",124,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",125,null],[11,"flush","","",125,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",126,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",126,null],[11,"flush","","",126,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",126,null],[11,"write_fmt","","",126,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",127,null],[11,"flush","","",127,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",128,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",128,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",129,null],[11,"flush","","",129,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",130,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",131,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",131,null],[11,"fill_buf","","",131,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",131,null],[11,"read","","",132,null],[11,"next","","",133,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",134,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",135,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",134,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",134,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",134,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",136,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",137,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",138,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",138,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",138,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",138,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",138,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",138,null],[11,"fmt","","",138,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",138,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",139,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",139,null],[11,"clone","","",139,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",139,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",140,{"inputs":[{"name":"ipv4addr"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",140,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address 0.0.0.0.",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",138,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",140,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",140,null],[11,"partial_cmp","","",140,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",140,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",140,{"inputs":[{"name":"ipv4addr"},{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",141,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",141,null],[11,"is_unspecified","","Returns true for the special 'unspecified' address ::.",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address's multicast scope if the address is multicast.",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",141,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",141,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",141,null],[11,"partial_cmp","","",141,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",141,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",142,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",142,null],[11,"eq","","",142,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",142,{"inputs":[{"name":"socketaddr"},{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",142,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"port","","Returns the port number associated with this socket address.",142,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",143,{"inputs":[{"name":"socketaddrv4"},{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",143,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"port","","Returns the port number associated with this socket address.",143,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",144,{"inputs":[{"name":"socketaddrv6"},{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",144,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"port","","Returns the port number associated with this socket address.",144,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"flowinfo","","Returns scope ID associated with this address, corresponding to the\n`sin6_flowinfo` field in C.",144,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"scope_id","","Returns scope ID associated with this address, corresponding to the\n`sin6_scope_id` field in C.",144,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"fmt","","",142,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",144,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",143,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",144,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",143,null],[11,"hash","","",144,null],[11,"to_socket_addrs","","",142,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",143,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",144,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",145,{"inputs":[{"name":"tcpstream"},{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",145,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",145,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",145,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",145,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the nodelay flag on this connection to the boolean specified.",145,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_keepalive","","Sets the keepalive timeout to the timeout specified.",145,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read","","",145,null],[11,"write","","",145,null],[11,"flush","","",145,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",146,{"inputs":[{"name":"tcplistener"},{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",146,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",146,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",146,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",146,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",147,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",146,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",148,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",148,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",148,null],[11,"local_addr","","Returns the socket address that this socket was created from.",148,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",148,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the broadcast flag on or off.",148,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_multicast_loop","","Sets the multicast loop flag to the specified value.",148,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"join_multicast","","Joins a multicast IP address (becomes a member of it).",148,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"leave_multicast","","Leaves a multicast IP address (drops membership from it).",148,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"set_multicast_time_to_live","","Sets the multicast TTL.",148,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"set_time_to_live","","Sets this socket's TTL.",148,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"fmt","","",148,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",138,{"inputs":[{"name":"ipaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",140,{"inputs":[{"name":"ipv4addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",141,{"inputs":[{"name":"ipv6addr"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",142,{"inputs":[{"name":"socketaddr"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",149,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",149,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::net","",150,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",151,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"as_raw_fd","std::fs","",98,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",98,{"inputs":[{"name":"file"},{"name":"i32"}],"output":{"name":"file"}}],[11,"as_raw_fd","std::net::tcp","",145,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",146,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",148,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",145,{"inputs":[{"name":"tcpstream"},{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",146,{"inputs":[{"name":"tcplistener"},{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",148,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"from_vec","std::ffi::os_str","",93,{"inputs":[{"name":"osstring"},{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",93,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",94,null],[11,"as_bytes","","",94,null],[11,"mode","std::fs","",96,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",96,null],[11,"from_mode","","",96,{"inputs":[{"name":"permissions"},{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",95,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"as_raw","","",99,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"dev","std::sys::ext::fs","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blocks","","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ino","std::fs","",101,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",104,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",153,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",153,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"signal","","",154,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"eq","std::path","",155,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",155,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",155,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",155,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",155,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",155,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",155,null],[11,"fmt","","",155,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins `\\\\?\\`.",155,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",156,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",156,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",156,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",156,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",156,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",156,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",156,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",156,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",157,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",157,null],[11,"clone","","",157,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",157,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",157,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",157,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",157,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"fmt","","",158,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",158,null],[11,"cmp","","",158,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",158,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",158,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",158,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",158,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",158,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",158,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",158,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",158,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",158,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",159,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",160,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",159,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",159,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",159,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",159,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",160,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",160,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",160,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",160,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",160,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",159,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",159,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",159,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",159,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",159,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"hash","","",161,null],[11,"clone","","",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",161,null],[11,"pop","","Truncate `self` to `self.parent()`.",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",161,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",161,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",161,{"inputs":[{"name":"pathbuf"},{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",161,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",161,{"inputs":[{"name":"pathbuf"},{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",161,{"inputs":[{"name":"pathbuf"},{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",161,null],[11,"fmt","","",161,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",103,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",103,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&str` slice if the `Path` is valid unicode.",103,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow<str>`.",103,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",103,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",103,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",103,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",103,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",103,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",103,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",103,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",103,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",103,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",103,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file()`.",103,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file()`, if possible.",103,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",103,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",103,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",103,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",103,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path's components viewed as `OsStr` slices.",103,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",103,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"deref","","",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","","",103,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",161,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",161,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",161,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"hash","","",103,null],[11,"as_ref","","",103,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",103,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",103,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",103,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",103,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",94,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","","",93,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",10,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"write","std::process","",163,null],[11,"flush","","",163,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",164,null],[11,"read","","",165,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",153,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",153,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",153,null],[11,"env","","Inserts or updates an environment variable mapping.",153,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",153,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",153,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",153,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process's stdin handle (file descriptor 0).",153,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process's stdout handle (file descriptor 1).",153,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process's stderr handle (file descriptor 2).",153,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",153,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",153,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",153,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",153,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",166,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",166,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"clone","","",167,{"inputs":[{"name":"stdioimp"}],"output":{"name":"stdioimp"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",168,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",168,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",168,{"inputs":[{"name":"stdio"}],"output":{"name":"stdio"}}],[11,"fmt","","",154,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",154,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",154,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",154,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",154,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",169,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",169,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning a `Output`\ninstance.",169,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",170,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",170,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe's state\nflag.",170,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe's state\nflag.",170,{"inputs":[{"name":"signaltoken"},{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",171,null],[11,"new","std::sync::mpsc::oneshot","",172,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",172,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",172,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",172,null],[11,"drop_port","","",172,null],[11,"can_recv","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",172,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",172,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",172,null],[11,"eq","std::sync::mpsc::select","",173,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",174,{"inputs":[{"name":"select"}],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",174,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",174,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",175,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",175,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",175,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",175,null],[11,"drop","","",174,null],[11,"drop","","",175,null],[11,"next","","",176,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"new","std::sync::mpsc::shared","",177,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"postinit_lock","","",177,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",177,null],[11,"send","","",177,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",177,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",177,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",177,null],[11,"drop_chan","","",177,null],[11,"drop_port","","",177,null],[11,"can_recv","","",177,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",177,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",177,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",177,null],[11,"new","std::sync::mpsc::stream","",178,{"inputs":[{"name":"packet"}],"output":{"name":"packet"}}],[11,"send","","",178,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",178,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",178,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",178,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",178,null],[11,"drop_port","","",178,null],[11,"can_recv","","",178,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",178,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",178,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",178,null],[11,"fmt","std::sync::mpsc::sync","",179,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",180,{"inputs":[{"name":"packet"},{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",180,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",180,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",180,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",180,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",180,null],[11,"drop_chan","","",180,null],[11,"drop_port","","",180,null],[11,"can_recv","","",180,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",180,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",180,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",180,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",181,{"inputs":[{"name":"queue"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",181,null],[11,"pop","","Pops some data from this queue.",181,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",181,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",182,{"inputs":[{"name":"queue"},{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",182,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",182,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",182,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",182,null],[11,"clone","std::sync::mpsc","",183,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",183,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",184,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",184,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",185,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",186,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",186,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",187,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",187,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",187,null],[11,"send","","Sends a value on this synchronous channel.",188,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",188,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",188,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",189,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",189,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",189,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",190,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",191,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",189,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",189,null],[11,"fmt","","",183,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",183,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",183,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",186,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",186,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",186,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",184,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",184,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",184,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",185,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",185,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",185,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",192,{"inputs":[{"name":"barrier"},{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",192,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the \"leader thread\".",193,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"new","std::sync::condvar","Creates a new condition variable which is ready to be waited on and\nnotified.",194,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",194,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",194,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",194,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",194,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",194,null],[11,"drop","","",194,null],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",195,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",195,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",195,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",195,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",195,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",195,null],[11,"get","std::sync::future","Get the value of the future.",196,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"into_inner","","Gets the value from this future, forcing evaluation.",196,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"get_ref","","Executes the future's closure and then returns a reference\nto the result.  The reference lasts as long as\nthe future.",196,{"inputs":[{"name":"future"}],"output":{"name":"a"}}],[11,"from_value","","Create a future from a value.",196,{"inputs":[{"name":"future"},{"name":"a"}],"output":{"name":"future"}}],[11,"from_fn","","Create a future from a function.",196,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"from_receiver","","Create a future from a port",196,{"inputs":[{"name":"future"},{"name":"receiver"}],"output":{"name":"future"}}],[11,"spawn","","Create a future from a unique closure.",196,{"inputs":[{"name":"future"},{"name":"f"}],"output":{"name":"future"}}],[11,"drop","std::sync::mutex","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",197,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",197,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",197,null],[11,"deref","","",198,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",198,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",198,null],[11,"call_once","std::sync::once","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",199,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock<T>` which is unlocked.",200,{"inputs":[{"name":"rwlock"},{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",200,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",200,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",200,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",200,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",200,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"drop","","",200,null],[11,"fmt","","",200,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",201,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",201,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",201,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",201,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",201,null],[11,"deref","","",202,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",203,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",203,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",202,null],[11,"drop","","",203,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",204,{"inputs":[{"name":"semaphore"},{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",204,null],[11,"release","","Release a resource from this semaphore.",204,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",204,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",205,null],[11,"default","core::atomic","",206,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",207,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",208,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",209,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",210,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",206,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",206,null],[11,"swap","","Stores a value into the bool, returning the old value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",206,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",207,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",207,null],[11,"swap","","Stores a value into the isize, returning the old value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",207,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",208,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",208,null],[11,"swap","","Stores a value into the usize, returning the old value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",208,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",209,null],[11,"load","","Loads a value from the pointer.",209,null],[11,"store","","Stores a value into the pointer.",209,null],[11,"swap","","Stores a value into the pointer, returning the old value.",209,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",209,null],[11,"fmt","std::time::duration","",211,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",211,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",211,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",211,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",211,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",211,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",211,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",211,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",211,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",211,{"inputs":[{"name":"duration"},{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",211,{"inputs":[{"name":"duration"},{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",211,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_days","","Returns the total number of whole days in the duration.",211,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_hours","","Returns the total number of whole hours in the duration.",211,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",211,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",211,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",211,{"inputs":[{"name":"duration"}],"output":{"name":"i64"}}],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",211,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",211,{"inputs":[{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",211,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",211,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",211,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",211,{"inputs":[{"name":"duration"}],"output":{"name":"bool"}}],[11,"neg","","",211,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"add","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",211,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",211,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"div","","",211,{"inputs":[{"name":"duration"},{"name":"i32"}],"output":{"name":"duration"}}],[11,"fmt","","",211,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",212,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",212,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",212,null],[11,"wait","","Waits for a signal on the specified mutex.",212,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",212,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",212,null],[11,"lock","std::sys_common::mutex","Locks the mutex blocking the current thread until it is available.",213,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",213,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",213,null],[11,"destroy","","Deallocates all resources associated with this mutex.",213,null],[11,"next","std::sys_common::net","",214,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",214,null],[11,"connect","","",215,{"inputs":[{"name":"tcpstream"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_nodelay","","",215,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_keepalive","","",215,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read","","",215,null],[11,"write","","",215,null],[11,"peer_addr","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",215,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",215,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",215,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",216,{"inputs":[{"name":"tcplistener"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",216,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",216,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",217,{"inputs":[{"name":"udpsocket"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",217,null],[11,"send_to","","",217,null],[11,"set_broadcast","","",217,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"set_multicast_loop","","",217,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"join_multicast","","",217,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"leave_multicast","","",217,{"inputs":[{"name":"udpsocket"},{"name":"ipaddr"}],"output":{"name":"result"}}],[11,"multicast_time_to_live","","",217,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"time_to_live","","",217,{"inputs":[{"name":"udpsocket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"duplicate","","",217,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",217,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","std::sys_common::poison","",218,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",218,null],[11,"get","","",218,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",219,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",219,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",219,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",219,{"inputs":[{"name":"poisonerror"},{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",219,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",219,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",219,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",220,{"inputs":[{"name":"trylockerror"},{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",220,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",220,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",220,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",220,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",221,{"inputs":[{"name":"reentrantmutex"},{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",221,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",221,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",221,null],[11,"fmt","","",221,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",222,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",222,null],[11,"read","std::sys_common::rwlock","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",223,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",223,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",223,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",223,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",223,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",223,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",223,null],[11,"get","std::sys_common::thread_local","Gets the value associated with this TLS key",224,null],[11,"set","","Sets this TLS key to a new value.",224,null],[11,"destroy","","Deallocates this OS TLS key.",224,null],[11,"new","","Creates a new managed OS TLS key.",225,{"inputs":[{"name":"key"},{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",225,null],[11,"set","","See StaticKey::set",225,null],[11,"drop","","",225,null],[11,"clone","std::sys_common::wtf8","",226,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",226,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",226,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",226,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",226,{"inputs":[{"name":"codepoint"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",226,{"inputs":[{"name":"codepoint"},{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",226,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",226,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",226,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&str` slice.",228,{"inputs":[{"name":"wtf8"},{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b'\\xFF' otherwise.",228,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_point_at","","Returns the code point at `position`.",228,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"codepoint"}}],[11,"code_point_range_at","","Returns the code point at `position`\nand the position of the next code point.",228,null],[11,"code_points","","Returns an iterator for the string’s code points.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&str` slice.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&str` slice if the contents are well-formed in UTF-8.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an new, empty WTF-8 string.",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates an new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",227,{"inputs":[{"name":"wtf8buf"},{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",227,{"inputs":[{"name":"wtf8buf"},{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&str` slice.",227,{"inputs":[{"name":"wtf8buf"},{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",227,null],[11,"as_slice","","",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",227,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",227,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",227,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",227,null],[11,"push","","Append a code point at the end of the string.",227,null],[11,"truncate","","Shortens a string to the specified length.",227,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",227,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",227,{"inputs":[{"name":"wtf8buf"},{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",227,null],[11,"eq","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",228,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",228,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",228,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",228,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",228,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",229,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",229,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"clone","","",230,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",230,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",230,null],[11,"hash","","",226,null],[11,"hash","","",227,null],[11,"hash","","",228,null],[11,"is_ascii","","",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",228,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",228,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",228,null],[11,"make_ascii_lowercase","","",228,null],[11,"new","std::sys::condvar","",231,{"inputs":[{"name":"condvar"}],"output":{"name":"condvar"}}],[11,"notify_one","","",231,null],[11,"notify_all","","",231,null],[11,"wait","","",231,null],[11,"wait_timeout","","",231,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",231,null],[11,"new","std::sys::fd","",232,{"inputs":[{"name":"filedesc"},{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",232,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",232,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",232,null],[11,"write","","",232,null],[11,"set_cloexec","","",232,null],[11,"drop","","",232,null],[11,"clone","std::sys::fs","",233,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",234,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",234,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",234,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",234,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",235,null],[11,"eq","","",235,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",235,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",235,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",236,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",236,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"accessed","","",236,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"modified","","",236,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"file_type","","",236,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"raw","","",236,{"inputs":[{"name":"fileattr"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",99,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::sys::ext::fs","",152,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"readonly","std::sys::fs","",234,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",234,null],[11,"mode","","",234,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",235,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",235,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",235,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",237,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",238,null],[11,"path","","",239,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",239,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",239,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",239,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",239,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",233,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"read","","",233,null],[11,"write","","",233,null],[11,"append","","",233,null],[11,"truncate","","",233,null],[11,"create","","",233,null],[11,"mode","","",233,null],[11,"open","","",240,{"inputs":[{"name":"file"},{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",240,{"inputs":[{"name":"file"},{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"into_fd","","",240,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"file_attr","","",240,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",240,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",240,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",240,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",240,null],[11,"write","","",240,null],[11,"flush","","",240,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",240,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fd","","",240,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",241,{"inputs":[{"name":"dirbuilder"}],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",241,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",241,null],[11,"fmt","","",240,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",242,{"inputs":[{"name":"mutex"}],"output":{"name":"mutex"}}],[11,"lock","","",242,null],[11,"unlock","","",242,null],[11,"try_lock","","",242,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",242,null],[11,"uninitialized","","",243,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"reentrantmutex"}}],[11,"init","","",243,null],[11,"lock","","",243,null],[11,"try_lock","","",243,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",243,null],[11,"destroy","","",243,null],[11,"new","std::sys::net","",244,{"inputs":[{"name":"socket"},{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",244,null],[11,"duplicate","","",244,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",244,null],[11,"next","std::sys::os","",245,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",245,null],[11,"fmt","","",246,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",246,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",246,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",247,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[11,"len","","",247,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",248,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",248,null],[11,"hash","std::sys::os_str","",249,null],[11,"clone","","",249,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",250,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",249,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",249,{"inputs":[{"name":"buf"},{"name":"string"}],"output":{"name":"buf"}}],[11,"as_slice","","",249,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",249,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",249,null],[11,"from_str","","",250,{"inputs":[{"name":"slice"},{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",250,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",250,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",250,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",251,{"inputs":[{"name":"anonpipe"},{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",251,null],[11,"write","","",251,null],[11,"into_fd","","",251,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"clone","std::sys::process","",252,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"new","","",252,{"inputs":[{"name":"command"},{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",252,null],[11,"args","","",252,null],[11,"env","","",252,null],[11,"env_remove","","",252,null],[11,"env_clear","","",252,null],[11,"cwd","","",252,null],[11,"fmt","","",253,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",253,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",253,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",253,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",253,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",253,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",253,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","",254,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"spawn","","",254,{"inputs":[{"name":"process"},{"name":"command"},{"name":"stdio"},{"name":"stdio"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"wait","","",254,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"try_wait","","",254,{"inputs":[{"name":"process"}],"output":{"name":"option"}}],[11,"read","std::sys::rwlock","",255,null],[11,"try_read","","",255,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",255,null],[11,"try_write","","",255,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",255,null],[11,"write_unlock","","",255,null],[11,"destroy","","",255,null],[11,"new","std::sys::stack_overflow","",256,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"drop","","",256,null],[11,"new","std::sys::thread","",257,{"inputs":[{"name":"thread"},{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",257,null],[11,"set_name","","",257,null],[11,"sleep","","",257,null],[11,"join","","",257,null],[11,"drop","","",257,null],[11,"now","std::sys::time::inner","",258,{"inputs":[{"name":"steadytime"}],"output":{"name":"steadytime"}}],[11,"ns","","",258,{"inputs":[{"name":"steadytime"}],"output":{"name":"u64"}}],[11,"new","std::sys::stdio","",259,{"inputs":[{"name":"stdin"}],"output":{"name":"stdin"}}],[11,"read","","",259,null],[11,"new","","",260,{"inputs":[{"name":"stdout"}],"output":{"name":"stdout"}}],[11,"write","","",260,null],[11,"new","","",261,{"inputs":[{"name":"stderr"}],"output":{"name":"stderr"}}],[11,"write","","",261,null],[11,"write","","",261,null],[11,"flush","","",261,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::rt::libunwind","",262,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"new","std::rand::os::imp","Create a new `OsRng`.",263,{"inputs":[{"name":"osrng"}],"output":{"name":"result"}}],[11,"next_u32","","",263,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",263,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",263,null],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",264,{"inputs":[{"name":"readerrng"},{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",264,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",264,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",264,null],[11,"clone","std::rand","",265,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",265,{"inputs":[{"name":"stdrng"}],"output":{"name":"result"}}],[11,"next_u32","","",265,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",265,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",265,null],[11,"from_seed","","",265,null],[11,"reseed","","",266,null],[11,"clone","","",267,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",267,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",267,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",267,null],[11,"clone","core::raw","",268,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",269,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"eq","core::ops","",270,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",270,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",270,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",270,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",271,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",271,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",271,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",271,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",272,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",272,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",272,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",272,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",273,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",273,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",273,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",273,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","collections::slice","",274,{"inputs":[{"name":"elementswaps"}],"output":{"name":"elementswaps"}}],[11,"new","","Creates an `ElementSwaps` iterator for a sequence of `length` elements.",274,{"inputs":[{"name":"elementswaps"},{"name":"usize"}],"output":{"name":"elementswaps"}}],[11,"borrow","collections::vec","",11,null],[11,"borrow_mut","","",11,null],[11,"clone","collections::slice","",275,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"clone","","",276,{"inputs":[{"name":"sizedirection"}],"output":{"name":"sizedirection"}}],[11,"next","","",274,{"inputs":[{"name":"elementswaps"}],"output":{"name":"option"}}],[11,"size_hint","","",274,null],[11,"next","","",277,{"inputs":[{"name":"permutations"}],"output":{"name":"option"}}],[11,"size_hint","","",277,null],[11,"clone","collections::str","",278,{"inputs":[{"name":"decompositiontype"}],"output":{"name":"decompositiontype"}}],[11,"clone","","",279,{"inputs":[{"name":"decompositions"}],"output":{"name":"decompositions"}}],[11,"next","","",279,{"inputs":[{"name":"decompositions"}],"output":{"name":"option"}}],[11,"size_hint","","",279,null],[11,"clone","","",280,{"inputs":[{"name":"recompositionstate"}],"output":{"name":"recompositionstate"}}],[11,"clone","","",281,{"inputs":[{"name":"recompositions"}],"output":{"name":"recompositions"}}],[11,"next","","",281,{"inputs":[{"name":"recompositions"}],"output":{"name":"option"}}],[11,"clone","","",282,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[11,"next","","",282,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",282,null],[11,"borrow","collections::string","",10,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",283,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",283,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",285,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",284,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",286,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"eq","","",287,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",287,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",287,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"haystack","","",286,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",286,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",286,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",288,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",288,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",288,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",288,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",288,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",288,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",288,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",288,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",289,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",289,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",289,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",289,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",289,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",289,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",289,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",289,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",290,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",290,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",290,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",290,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",290,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",290,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",290,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",290,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",11,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",11,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",11,null],[11,"from_raw_buf","","Creates a vector by copying the elements from a raw pointer.",11,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",11,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",11,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",11,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",11,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",11,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",11,null],[11,"as_slice","","Extracts a slice containing the entire vector.",11,null],[11,"as_mut_slice","","Deprecated: use `&mut s[..]` instead.",11,null],[11,"set_len","","Sets the length of a vector.",11,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",11,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",11,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",11,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",11,null],[11,"push","","Appends an element to the back of a collection.",11,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it is empty.",11,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",11,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",11,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",11,null],[11,"len","","Returns the number of elements in the vector.",11,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",11,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"map_in_place","","Converts a `Vec<T>` to a `Vec<U>` where `T` and `U` have the same\nsize and in case they are not zero-sized the same minimal alignment.",11,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"split_off","","Splits the collection into two at the given index.",11,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",11,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",11,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",11,null],[11,"clone","","",11,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",11,null],[11,"hash","","",11,null],[11,"index","","",11,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",11,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",11,null],[11,"index","","",11,null],[11,"index","","",11,null],[11,"index","","",11,null],[11,"index_mut","","",11,null],[11,"index_mut","","",11,null],[11,"index_mut","","",11,null],[11,"index_mut","","",11,null],[11,"deref","","",11,null],[11,"deref_mut","","",11,null],[11,"from_iter","","",11,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",11,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",11,null],[11,"eq","","",11,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","collections::borrow","",291,null],[11,"ne","","",291,null],[11,"eq","","",291,null],[11,"ne","","",291,null],[11,"eq","","",291,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",291,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"partial_cmp","","",11,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",11,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",11,null],[11,"default","","",11,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",11,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",11,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",11,null],[11,"from","","",11,null],[11,"from","","",11,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",291,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",11,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"into_inner","","Drops all items that have not yet been moved and returns the empty vector.",292,{"inputs":[{"name":"intoiter"}],"output":{"name":"vec"}}],[11,"next","","",292,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",292,null],[11,"count","","",292,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",292,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",292,null],[11,"next","","",293,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",293,null],[11,"next_back","","",293,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",293,null],[11,"index","collections::bit","",294,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"new","","Creates an empty `BitVec`.",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_elem","","Creates a `BitVec` that holds `nbits` elements, setting each element\nto `bit`.",294,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"bool"}],"output":{"name":"bitvec"}}],[11,"with_capacity","","Constructs a new, empty `BitVec` with the specified capacity.",294,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"from_bytes","","Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\nwith the most significant bits of each byte coming first. Each\nbit becomes `true` if equal to 1 or `false` if equal to 0.",294,null],[11,"from_fn","","Creates a `BitVec` of the specified length where the value at each index\nis `f(index)`.",294,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"f"}],"output":{"name":"bitvec"}}],[11,"get","","Retrieves the value at index `i`, or `None` if the index is out of bounds.",294,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"set","","Sets the value of a bit at an index `i`.",294,null],[11,"set_all","","Sets all bits to 1.",294,null],[11,"negate","","Flips all bits.",294,null],[11,"union","","Calculates the union of two bitvectors. This acts like the bitwise `or`\nfunction.",294,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"intersect","","Calculates the intersection of two bitvectors. This acts like the\nbitwise `and` function.",294,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"difference","","Calculates the difference between two bitvectors.",294,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"all","","Returns `true` if all bits are 1.",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the elements of the vector in order.",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"iter"}}],[11,"append","","Moves all bits from `other` into `Self`, leaving `other` empty.",294,null],[11,"split_off","","Splits the `BitVec` into two at the given bit,\nretaining the first half in-place and returning the second one.",294,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"none","","Returns `true` if all bits are 0.",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"any","","Returns `true` if any bit is 1.",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"to_bytes","","Organises the bits into bytes, such that the first bit in the\n`BitVec` becomes the high-order bit of the first byte. If the\nsize of the `BitVec` is not a multiple of eight then trailing bits\nwill be filled-in with `false`.",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"vec"}}],[11,"eq_vec","","Compares a `BitVec` to a slice of `bool`s.\nBoth the `BitVec` and slice must have the same length.",294,null],[11,"truncate","","Shortens a `BitVec`, dropping excess elements.",294,null],[11,"reserve","","Reserves capacity for at least `additional` more bits to be inserted in the given\n`BitVec`. The collection may reserve more space to avoid frequent reallocations.",294,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\ngiven `BitVec`. Does nothing if the capacity is already sufficient.",294,null],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"grow","","Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.",294,null],[11,"pop","","Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"option"}}],[11,"push","","Pushes a `bool` onto the end.",294,null],[11,"len","","Returns the total number of bits in this vector",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if there are no bits in this vector",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this vector.",294,null],[11,"default","","",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_iter","","",294,{"inputs":[{"name":"bitvec"},{"name":"i"}],"output":{"name":"bitvec"}}],[11,"extend","","",294,null],[11,"clone","","",294,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"clone_from","","",294,null],[11,"partial_cmp","","",294,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"option"}}],[11,"cmp","","",294,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"ordering"}}],[11,"fmt","","",294,{"inputs":[{"name":"bitvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",294,null],[11,"eq","","",294,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clone","","",295,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",295,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",295,null],[11,"next_back","","",295,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",295,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",295,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",296,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"default","","",296,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"from_iter","","",296,{"inputs":[{"name":"bitset"},{"name":"i"}],"output":{"name":"bitset"}}],[11,"extend","","",296,null],[11,"partial_cmp","","",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"option"}}],[11,"cmp","","",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"ordering"}}],[11,"eq","","",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `BitSet`.",296,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"with_capacity","","Creates a new `BitSet` with initially no contents, able to\nhold `nbits` elements without resizing.",296,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"from_bit_vec","","Creates a new `BitSet` from the given bit vector.",296,{"inputs":[{"name":"bitset"},{"name":"bitvec"}],"output":{"name":"bitset"}}],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",296,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `BitSet` to contain `len` distinct elements. In the case\nof `BitSet` this means reallocations will not occur as long as all inserted elements\nare less than `len`.",296,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `BitSet` to contain `len` distinct elements.\nIn the case of `BitSet` this means reallocations will not occur as long as all inserted\nelements are less than `len`.",296,null],[11,"into_bit_vec","","Consumes this set to return the underlying bit vector.",296,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"get_ref","","Returns a reference to the underlying bit vector.",296,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"shrink_to_fit","","Truncates the underlying vector to the least length required.",296,null],[11,"iter","","Iterator over each usize stored in the `BitSet`.",296,{"inputs":[{"name":"bitset"}],"output":{"name":"setiter"}}],[11,"union","","Iterator over each usize stored in `self` union `other`.\nSee [union_with](#method.union_with) for an efficient in-place version.",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"union"}}],[11,"intersection","","Iterator over each usize stored in `self` intersect `other`.\nSee [intersect_with](#method.intersect_with) for an efficient in-place version.",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"intersection"}}],[11,"difference","","Iterator over each usize stored in the `self` setminus `other`.\nSee [difference_with](#method.difference_with) for an efficient in-place version.",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Iterator over each usize stored in the symmetric difference of `self` and `other`.\nSee [symmetric_difference_with](#method.symmetric_difference_with) for\nan efficient in-place version.",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"symmetricdifference"}}],[11,"union_with","","Unions in-place with the specified other bit vector.",296,null],[11,"intersect_with","","Intersects in-place with the specified other bit vector.",296,null],[11,"difference_with","","Makes this bit vector the difference with the specified other bit vector\nin-place.",296,null],[11,"symmetric_difference_with","","Makes this bit vector the symmetric difference with the specified other\nbit vector in-place.",296,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",296,null],[11,"split_off","","Splits the `BitSet` into two at the given key including the key.\nRetains the first part in-place while returning the second part.",296,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"len","","Returns the number of set bits in this set.",296,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether there are no bits set in this set",296,{"inputs":[{"name":"bitset"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this set",296,null],[11,"contains","","Returns `true` if this set contains the specified integer.",296,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",296,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",296,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",296,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"fmt","","",296,{"inputs":[{"name":"bitset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",296,null],[11,"clone","","",297,{"inputs":[{"name":"setiter"}],"output":{"name":"setiter"}}],[11,"clone","","",298,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"twobitpositions"}}],[11,"clone","","",299,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"clone","","",300,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"clone","","",301,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"clone","","",302,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",297,{"inputs":[{"name":"setiter"}],"output":{"name":"option"}}],[11,"size_hint","","",297,null],[11,"next","","",298,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"option"}}],[11,"size_hint","","",298,null],[11,"next","","",299,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",299,null],[11,"next","","",300,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",300,null],[11,"next","","",301,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",301,null],[11,"next","","",302,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",302,null],[11,"next","collections::btree::node","",303,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"next_back","","",303,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"drop","","",303,null],[11,"drop","","",304,null],[11,"as_slices","","",304,null],[11,"as_slices_mut","","",304,null],[11,"as_slices_internal","","",304,{"inputs":[{"name":"node"}],"output":{"name":"nodeslice"}}],[11,"as_slices_internal_mut","","",304,{"inputs":[{"name":"node"}],"output":{"name":"mutnodeslice"}}],[11,"keys","","",304,null],[11,"keys_mut","","",304,null],[11,"vals","","",304,null],[11,"vals_mut","","",304,null],[11,"edges","","",304,null],[11,"edges_mut","","",304,null],[11,"clone","","",304,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"clone","","",305,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"search","","Searches for the given key in the node. If it finds an exact match,\n`Found` will be yielded with the matching index. If it doesn't find an exact match,\n`GoDown` will be yielded with the index of the subtree the key must lie in.",304,{"inputs":[{"name":"node"},{"name":"noderef"},{"name":"q"}],"output":{"name":"searchresult"}}],[11,"make_leaf_root","","Make a leaf root from scratch",304,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"node"}}],[11,"make_internal_root","","Make an internal root and swap it with an old root",304,null],[11,"len","","How many key-value pairs the node contains",304,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_empty","","Does the node not contain any key-value pairs",304,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"capacity","","How many key-value pairs the node can fit",304,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_leaf","","If the node has any children",304,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_underfull","","if the node has too few elements",304,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_full","","if the node cannot fit any more elements",304,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"node","","Returns a reference to the node that contains the pointed-to edge or key/value pair. This\nis very different from `edge` and `edge_mut` because those return children of the node\nreturned by `node`.",305,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"as_raw","","Converts a handle into one that stores the same information using a raw pointer. This can\nbe useful in conjunction with `from_raw` when the type system is insufficient for\ndetermining the lifetimes of the nodes.",305,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a reference. This is an unsafe inverse of `as_raw`, and together they allow\nunsafely extending the lifetime of the reference to the `Node`.",305,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw_mut","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a mutable reference. This is an unsafe inverse of `as_raw`, and together they\nallow unsafely extending the lifetime of the reference to the `Node`.",305,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"into_edge","","Turns the handle into a reference to the edge it points at. This is necessary because the\nreturned pointer has a larger lifetime than what would be returned by `edge` or `edge_mut`,\nmaking it more suitable for moving down a chain of nodes.",305,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"into_edge_mut","","Turns the handle into a mutable reference to the edge it points at. This is necessary\nbecause the returned pointer has a larger lifetime than what would be returned by\n`edge_mut`, making it more suitable for moving down a chain of nodes.",305,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"force","","Figure out whether this handle is pointing to something in a leaf node or to something in\nan internal node, clarifying the type according to the result.",305,{"inputs":[{"name":"handle"}],"output":{"name":"forceresult"}}],[11,"insert_as_leaf","","Tries to insert this key-value pair at the given index in this leaf node\nIf the node is full, we have to split it.",305,null],[11,"edge_mut","","Returns a mutable reference to the edge pointed-to by this handle. This should not be\nconfused with `node`, which references the parent node of what is returned here.",305,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"insert_as_internal","","Tries to insert this key-value pair at the given index in this internal node\nIf the node is full, we have to split it.",305,{"inputs":[{"name":"handle"},{"name":"k"},{"name":"v"},{"name":"node"}],"output":{"name":"insertionresult"}}],[11,"handle_underflow","","Handle an underflow in this node's child. We favour handling \"to the left\" because we know\nwe're empty, but our neighbour can be full. Handling to the left means when we choose to\nsteal, we pop off the end of our neighbour (always fast) and \"unshift\" ourselves\n(always slow, but at least faster since we know we're half-empty).\nHandling \"to the right\" reverses these roles. Of course, we merge whenever possible\nbecause we want dense nodes, and merging is about equal work regardless of direction.",305,null],[11,"into_kv","","Turns the handle into references to the key and value it points at. This is necessary\nbecause the returned pointers have larger lifetimes than what would be returned by `key`\nor `val`.",305,null],[11,"into_kv_mut","","Turns the handle into mutable references to the key and value it points at. This is\nnecessary because the returned pointers have larger lifetimes than what would be returned\nby `key_mut` or `val_mut`.",305,null],[11,"into_left_edge","","Convert this handle into one pointing at the edge immediately to the left of the key/value\npair pointed-to by this handle. This is useful because it returns a reference with larger\nlifetime than `left_edge`.",305,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"key_mut","","Returns a mutable reference to the key pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",305,{"inputs":[{"name":"handle"}],"output":{"name":"k"}}],[11,"val_mut","","Returns a mutable reference to the value pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",305,{"inputs":[{"name":"handle"}],"output":{"name":"v"}}],[11,"left_edge","","Gets the handle pointing to the edge immediately to the left of the key/value pair pointed\nto by this handle.",305,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"right_edge","","Gets the handle pointing to the edge immediately to the right of the key/value pair pointed\nto by this handle.",305,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"remove_as_leaf","","Removes the key/value pair at the handle's location.",305,null],[11,"kv_handle","","Returns the mutable handle pointing to the key/value pair at a given index.",304,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"iter","","",304,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"iter_mut","","",304,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"into_iter","","",304,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"hoist_lone_child","","When a node has no keys or values and only a single edge, extract that edge.",304,null],[11,"clone","","",306,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"elemsandedges"}}],[11,"next_kv","","",306,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv_back","","",306,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge","","",306,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge_back","","",306,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv","","",307,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_kv_back","","",307,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge","","",307,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge_back","","",307,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"drop","","",307,null],[11,"clone","","",308,{"inputs":[{"name":"abstraversal"}],"output":{"name":"abstraversal"}}],[11,"next","","",308,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_back","","",308,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the first item is not an edge.",308,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item_back","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the last item is not an edge.",308,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the first item is not a key-value pair.",308,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item_back","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the last item is not a key-value pair.",308,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",309,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",309,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"iter","","Returns an iterator over key/value pairs and edges in a slice.",309,{"inputs":[{"name":"nodeslice"}],"output":{"name":"abstraversal"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",310,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",310,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"iter_mut","","Returns an iterator over key/value pairs and edges in a slice.",310,{"inputs":[{"name":"mutnodeslice"}],"output":{"name":"abstraversal"}}],[11,"clone","collections::btree::map","",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"clone","","",312,{"inputs":[{"name":"absiter"}],"output":{"name":"absiter"}}],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"with_b","","Makes a new empty BTreeMap with the given B.",311,{"inputs":[{"name":"btreemap"},{"name":"usize"}],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",311,null],[11,"get","","Returns a reference to the value corresponding to the key.",311,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",311,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",311,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",311,{"inputs":[{"name":"btreemap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",311,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"into_iter","","Gets an owning iterator over the entries of the map.",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"intoiter"}}],[11,"deref","collections::btree::map::stack","",313,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"deref_mut","","",313,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"new","","Creates a new PartialSearchStack from a BTreeMap by initializing the stack with the\nroot of the tree.",314,{"inputs":[{"name":"partialsearchstack"},{"name":"btreemap"}],"output":{"name":"partialsearchstack"}}],[11,"with","","Breaks up the stack into a `Pusher` and the next `Node`, allowing the given closure\nto interact with, search, and finally push the `Node` onto the stack. The passed in\nclosure must be polymorphic on the `'id` lifetime parameter, as this statically\nensures that only `Handle`s from the correct `Node` can be pushed.",314,{"inputs":[{"name":"partialsearchstack"},{"name":"f"}],"output":{"name":"t"}}],[11,"push","","Pushes the requested child of the stack's current top on top of the stack. If the child\nexists, then a new PartialSearchStack is yielded. Otherwise, a VacantSearchStack is\nyielded.",315,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"partialsearchstack"}}],[11,"seal","","Converts the PartialSearchStack into a SearchStack.",315,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"searchstack"}}],[11,"peek","","Gets a reference to the value the stack points to.",316,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"peek_mut","","Gets a mutable reference to the value the stack points to.",316,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"into_top","","Converts the stack into a mutable reference to the value it points to, with a lifetime\ntied to the original tree.",316,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"remove","","Removes the key and value in the top element of the stack, then handles underflows as\ndescribed in BTree's pop function.",316,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"insert","","Inserts the key and value into the top element in the stack, and if that node has to\nsplit recursively inserts the split contents into the next element stack until\nsplits stop.",316,{"inputs":[{"name":"searchstack"},{"name":"k"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","collections::btree::map","",311,{"inputs":[{"name":"btreemap"},{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",311,null],[11,"hash","","",311,null],[11,"default","","",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"eq","","",311,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",311,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"option"}}],[11,"cmp","","",311,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"ordering"}}],[11,"fmt","","",311,{"inputs":[{"name":"btreemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",311,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"v"}}],[11,"traverse","collections::btree::node","",308,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",308,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",308,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"next","collections::btree::map","",312,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"size_hint","","",312,null],[11,"next_back","","",312,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"clone","","",317,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",317,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",317,null],[11,"next_back","","",317,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",318,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",318,null],[11,"next_back","","",318,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",319,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",319,null],[11,"next_back","","",319,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",320,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"next","","",320,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",320,null],[11,"next_back","","",320,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"clone","","",321,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",321,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",321,null],[11,"next_back","","",321,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"clone","","",322,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",322,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",322,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",323,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"next_back","","",323,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",324,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",324,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",324,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",325,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",326,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",326,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",326,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",326,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",326,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"iter","","Gets an iterator over the entries of the map.",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map.",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"keys"}}],[11,"values","","Gets an iterator over the values of the map.",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"values"}}],[11,"len","","Returns the number of elements in the map.",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",311,{"inputs":[{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",311,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",311,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"rangemut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",311,{"inputs":[{"name":"btreemap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"partial_cmp","collections::btree::set","",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"option"}}],[11,"lt","","",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"le","","",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"gt","","",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ge","","",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"cmp","","",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"ordering"}}],[11,"eq","","",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ne","","",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"hash","","",327,null],[11,"clone","","",327,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",327,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"with_b","","Makes a new BTreeSet with the given B.",327,{"inputs":[{"name":"btreeset"},{"name":"usize"}],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet's contents.",327,{"inputs":[{"name":"btreeset"}],"output":{"name":"iter"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",327,{"inputs":[{"name":"btreeset"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"difference","","Visits the values representing the difference, in ascending order.",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visits the values representing the intersection, in ascending order.",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"intersection"}}],[11,"union","","Visits the values representing the union, in ascending order.",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",327,{"inputs":[{"name":"btreeset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",327,{"inputs":[{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"clear","","Clears the set, removing all values.",327,null],[11,"contains","","Returns `true` if the set contains a value.",327,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",327,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",327,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",327,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"from_iter","","",327,{"inputs":[{"name":"btreeset"},{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet's contents.",327,{"inputs":[{"name":"btreeset"}],"output":{"name":"intoiter"}}],[11,"extend","","",327,null],[11,"default","","",327,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"fmt","","",327,{"inputs":[{"name":"btreeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",328,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",328,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",328,null],[11,"next_back","","",328,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",329,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",329,null],[11,"next_back","","",329,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",330,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",330,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",330,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",331,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",331,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"clone","","",332,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",332,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"clone","","",333,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",333,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"clone","","",334,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",334,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"borrow","alloc::rc","",335,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",336,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",291,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",291,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",291,null],[11,"into_owned","","Extracts the owned data.",291,null],[11,"deref","","",291,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",291,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",291,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",291,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",291,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",291,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",291,null],[11,"into_cow","","",291,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",291,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"hash","collections::enum_set","",337,null],[11,"cmp","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"option"}}],[11,"lt","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"le","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"gt","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ge","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"eq","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ne","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clone","","",337,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"fmt","","",337,{"inputs":[{"name":"enumset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty `EnumSet`.",337,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",337,{"inputs":[{"name":"enumset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `EnumSet` is empty.",337,{"inputs":[{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clear","","",337,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"union","","Returns the union of both `EnumSets`.",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"intersection","","Returns the intersection of both `EnumSets`.",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn't there before",337,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"remove","","Removes an enum from the EnumSet",337,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",337,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over an `EnumSet`.",337,{"inputs":[{"name":"enumset"}],"output":{"name":"iter"}}],[11,"sub","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitor","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitand","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitxor","","",337,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"clone","","",338,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",338,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",338,null],[11,"from_iter","","",337,{"inputs":[{"name":"enumset"},{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",337,null],[11,"clone","core::fmt::rt::v1","",339,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",340,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",341,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",341,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",342,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",343,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"start","core::ops","",272,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",273,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",271,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",271,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"cmp","collections::string","",10,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",10,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",10,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_str","","Creates a new string buffer from the given string.",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",10,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",10,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",10,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",10,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",10,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",10,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",10,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",10,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",10,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",10,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",10,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",10,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",10,null],[11,"push","","Adds the given character to the end of the string.",10,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",10,null],[11,"truncate","","Shortens a string to the specified length.",10,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",10,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",10,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",10,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",10,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",10,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",10,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",10,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",10,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",10,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",10,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",10,null],[11,"extend","","",10,null],[11,"eq","","",10,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",291,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",291,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",291,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",291,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",10,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",291,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",291,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",10,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",10,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",10,null],[11,"add","","",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",10,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",10,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",10,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",10,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",10,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref","","",344,{"inputs":[{"name":"derefstring"}],"output":{"name":"string"}}],[11,"eq","","",345,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",345,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",345,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",345,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"from_str","","",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",10,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",10,null],[11,"from","","",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",291,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",291,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",10,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",10,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",10,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",10,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",346,null],[11,"next","","",346,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",346,null],[11,"next_back","","",346,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","collections::vec","",347,null],[11,"drop","","",348,null],[11,"drop","","",349,null],[11,"eq","collections","",350,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"ne","","",350,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"hash","","",350,null],[11,"fmt","","",350,{"inputs":[{"name":"bound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",350,{"inputs":[{"name":"bound"}],"output":{"name":"bound"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",2,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",2,null],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",2,null],[11,"eq","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"deref","collections::vec","",347,{"inputs":[{"name":"derefvec"}],"output":{"name":"vec"}}],[11,"next","rustc_unicode::char","",351,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",352,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"hash","core::result","",353,null],[11,"fmt","","",353,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",353,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",353,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",353,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",353,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",353,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",353,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",353,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",353,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",353,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",353,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",353,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",353,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",353,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",353,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",353,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",353,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",353,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",353,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",353,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",353,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",353,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",354,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",354,null],[11,"next_back","","",354,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",354,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",355,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",355,null],[11,"next_back","","",355,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",356,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",356,null],[11,"next_back","","",356,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",353,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"clone","core::iter","",357,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",357,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",357,null],[11,"next_back","","",357,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",357,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",357,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",358,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",358,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",358,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",358,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",358,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",359,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",359,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",359,null],[11,"next_back","","",359,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",359,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",359,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",360,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",360,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",360,null],[11,"indexable","","",360,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",360,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",361,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",361,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",361,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",361,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",361,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",361,null],[11,"next_back","","",361,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",361,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",361,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",362,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",362,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",362,null],[11,"next_back","","",362,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",362,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",362,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",363,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",363,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",363,null],[11,"next_back","","",363,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",363,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",363,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",364,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",364,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",364,null],[11,"next_back","","",364,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",365,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",365,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",365,null],[11,"next_back","","",365,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",366,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",366,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",366,null],[11,"nth","","",366,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",366,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",366,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",366,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",366,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",367,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",367,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",367,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",367,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",367,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",367,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",367,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",367,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",368,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",368,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",368,null],[11,"clone","","",369,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",369,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",369,null],[11,"clone","","",370,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",370,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",370,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",370,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",370,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",370,null],[11,"indexable","","",370,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",370,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",371,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",371,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",371,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",371,null],[11,"indexable","","",371,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",371,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",372,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",372,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",372,null],[11,"clone","","",373,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",373,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",373,null],[11,"next_back","","",373,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",374,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",374,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",374,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",374,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",374,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",374,null],[11,"next_back","","",374,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",374,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",374,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",374,null],[11,"clone","","",375,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",375,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",375,null],[11,"next_back","","",375,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",375,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",375,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",376,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",376,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",376,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",376,null],[11,"clone","","",377,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",272,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",271,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",377,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",377,null],[11,"clone","","",378,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",378,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",378,null],[11,"next_back","","",378,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",377,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",377,null],[11,"next","core::ops","",271,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",271,null],[11,"next_back","","",271,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",272,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",379,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",379,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",379,null],[11,"next_back","","",379,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",379,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",379,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",380,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",380,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",380,null],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",380,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",380,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",380,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",380,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",381,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",381,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",381,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",381,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",382,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",382,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",382,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",382,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",382,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",382,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",382,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",382,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",382,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",383,null],[11,"clone","","",383,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",384,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"drop","","",385,null],[11,"deref","","",386,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",386,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",387,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",387,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",387,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",335,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",335,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"make_unique","","Make a mutable reference from the given `Rc<T>`.",335,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",335,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",335,null],[11,"clone","","Makes a clone of the `Rc<T>`.",335,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",335,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",335,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",335,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",335,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",335,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",335,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",335,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",335,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",335,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",335,null],[11,"fmt","","",335,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",335,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",335,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",388,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",388,null],[11,"clone","","Makes a clone of the `Weak<T>`.",388,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",388,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","shared_library::dynamic_library","",389,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",389,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",389,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",389,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",389,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",389,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",389,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",389,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",390,null],[11,"fmt","","",390,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",390,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",390,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",390,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",390,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"hash","core::option","",391,null],[11,"fmt","","",391,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",391,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",391,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",391,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",391,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",391,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",391,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",391,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",391,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",391,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",391,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",391,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value or returns a default.",391,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value or computes a default.",391,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",391,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",391,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",391,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",391,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",391,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",391,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",391,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",391,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",391,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",391,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",391,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",391,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",391,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",392,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",392,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",392,null],[11,"next_back","","",392,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",393,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",393,null],[11,"next_back","","",393,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",393,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",394,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",394,null],[11,"next_back","","",394,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",395,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",395,null],[11,"next_back","","",395,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",391,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",396,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",396,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",396,null],[11,"finish","","",396,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",396,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",396,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"fmt","core::simd","",397,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",397,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",398,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",398,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",399,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",399,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",400,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",400,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",401,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",401,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",402,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",402,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",403,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",403,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",404,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",404,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",405,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",405,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",406,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",406,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[11,"fmt","core::cmp","",407,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",407,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",407,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",407,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",407,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",407,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",407,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","core::ptr","Creates a new `Unique`.",408,null],[11,"get","","Dereferences the content.",408,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",408,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",408,null],[11,"fmt","","",408,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",409,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",409,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",409,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",409,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",409,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",409,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",409,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",409,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",409,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",410,null],[11,"eq","","",410,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",410,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",410,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",410,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"drop","shared_library::dynamic_library","",411,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",411,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",411,{"inputs":[{"name":"dynamiclibrary"},{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",411,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",411,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",411,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",411,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","shared_library","",0,{"inputs":[{"name":"loadingerror"}],"output":{"name":"loadingerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[8,"Error"],[3,"String"],[3,"Vec"],[3,"EscapeDefault"],[3,"Wrapping"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"ScopedKey"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"JoinGuard"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"VecMap"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"Metadata"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"Path"],[3,"DirBuilder"],[3,"Lazy"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"InternalBufWriter"],[3,"BufStream"],[3,"Cursor"],[4,"Repr"],[3,"Custom"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"Metadata"],[3,"Command"],[3,"ExitStatus"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Display"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"Output"],[4,"StdioImp"],[3,"Stdio"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Future"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Condvar"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Condvar"],[3,"FileDesc"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"FileAttr"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[4,"ExitStatus"],[3,"Process"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"SteadyTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"_Unwind_Action"],[3,"OsRng"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"Slice"],[3,"TraitObject"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[3,"ElementSwaps"],[4,"Direction"],[3,"SizeDirection"],[3,"Permutations"],[4,"DecompositionType"],[3,"Decompositions"],[4,"RecompositionState"],[3,"Recompositions"],[3,"Utf16Units"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"StrSearcher"],[4,"State"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[4,"Cow"],[3,"IntoIter"],[3,"Drain"],[3,"BitVec"],[3,"Iter"],[3,"BitSet"],[3,"SetIter"],[3,"TwoBitPositions"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"RawItems"],[3,"Node"],[3,"Handle"],[3,"ElemsAndEdges"],[3,"MoveTraversalImpl"],[3,"AbsTraversal"],[3,"NodeSlice"],[3,"MutNodeSlice"],[3,"BTreeMap"],[3,"AbsIter"],[3,"IdRef"],[3,"PartialSearchStack"],[3,"Pusher"],[3,"SearchStack"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"Rc"],[3,"Arc"],[3,"EnumSet"],[3,"Iter"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"DerefString"],[3,"ParseError"],[3,"Drain"],[3,"DerefVec"],[3,"PartialVecNonZeroSized"],[3,"PartialVecZeroSized"],[4,"Bound"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"BorrowRefMut"],[3,"RefMut"],[3,"UnsafeCell"],[3,"Weak"],[8,"Any"],[3,"TypeId"],[4,"Option"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"SipHasher"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[4,"Ordering"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"DynamicLibrary"]]};
searchIndex['vecmath'] = {"items":[[0,"","vecmath","A simple and generic library for vector math.",null,null],[5,"col_mat3x2_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"col_mat3_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat4_mul_col","","Computes column vector in column matrix product.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat4_mul_row","","Computes row vector in row matrix product.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat3x2_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"col_mat3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"col_mat4x3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"col_mat4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"row_mat2x3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"row_mat3_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"row_mat3x4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"row_mat4_mul","","Multiplies two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"mat2x3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix2x3"}}],[5,"mat3x2_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3x2"}}],[5,"mat3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3"}}],[5,"mat3x4_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix3x4"}}],[5,"mat4x3_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix4x3"}}],[5,"mat4_id","","Constructs identity matrix.",null,{"inputs":[],"output":{"name":"matrix4"}}],[5,"vec2_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_cast","","Converts to another vector type.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_cast","","Converts to another matrix type.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_sub","","Subtracts 'b' from 'a'.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_add","","Adds two vectors.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_add","","Adds two vectors.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_add","","Adds two vectors.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"mat2x3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix2x3"},{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3x2"},{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3"},{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix3x4"},{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix4x3"},{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_add","","Adds two matrices.",null,{"inputs":[{"name":"matrix4"},{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"vec2_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_mul","","Multiplies two vectors component wise.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_dot","","Computes the dot product.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_square_len","","Computes the square length of a vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_cross","","Computes the cross product.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_cross","","Computes the cross product.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec2_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector2"},{"name":"t"}],"output":{"name":"vector2"}}],[5,"vec3_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector3"},{"name":"t"}],"output":{"name":"vector3"}}],[5,"vec4_scale","","Multiplies the vector with a scalar.",null,{"inputs":[{"name":"vector4"},{"name":"t"}],"output":{"name":"vector4"}}],[5,"vec2_neg","","Negates the vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_neg","","Negates the vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_neg","","Negates the vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_len","","Computes the length of vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec3_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec4_inv_len","","Computes the inverse length of a vector.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"t"}}],[5,"vec2_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_normalized","","Computes the normalized.",null,{"inputs":[{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors.",null,{"inputs":[{"name":"vector4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"vec3_dot_vec2","","Computes transformed vector component.",null,{"inputs":[{"name":"vector3"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec4_dot_vec3","","Computes transformed vector component.",null,{"inputs":[{"name":"vector4"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"vec3_dot_pos2","","Computes transformed position component.",null,{"inputs":[{"name":"vector3"},{"name":"vector2"}],"output":{"name":"t"}}],[5,"vec4_dot_pos3","","Computes transformed position component.",null,{"inputs":[{"name":"vector4"},{"name":"vector3"}],"output":{"name":"t"}}],[5,"row_mat2x3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"col_mat2x3_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"usize"}],"output":{"name":"vector2"}}],[5,"row_mat3x2_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3x2_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat3x4_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"col_mat3x4_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"usize"}],"output":{"name":"vector3"}}],[5,"row_mat4x3_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat4x3_row","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"row_mat4_col","","Returns a column vector of a row matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"col_mat4_row","","Returns a row vector of a column matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"usize"}],"output":{"name":"vector4"}}],[5,"mat2x3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix3x2"}}],[5,"mat3x2_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix2x3"}}],[5,"mat3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix4x3"}}],[5,"mat4x3_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix3x4"}}],[5,"mat4_transposed","","Constructs the transpose of a matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix.",null,{"inputs":[{"name":"matrix4"},{"name":"vector4"}],"output":{"name":"vector4"}}],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix.",null,{"inputs":[{"name":"matrix2x3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix.",null,{"inputs":[{"name":"matrix3x2"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix.",null,{"inputs":[{"name":"matrix3"},{"name":"vector2"}],"output":{"name":"vector2"}}],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix.",null,{"inputs":[{"name":"matrix3x4"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix.",null,{"inputs":[{"name":"matrix4x3"},{"name":"vector3"}],"output":{"name":"vector3"}}],[5,"mat2x3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"t"}}],[5,"mat3x2_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"t"}}],[5,"mat3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"t"}}],[5,"mat3x4_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"t"}}],[5,"mat4x3_det","","Computes the determinant of a matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"t"}}],[5,"mat4_det","","Computes the determinant of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"t"}}],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"t"}}],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"t"}}],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"t"}}],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"t"}}],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"t"}}],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"t"}}],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix.",null,{"inputs":[{"name":"matrix2x3"}],"output":{"name":"matrix2x3"}}],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix.",null,{"inputs":[{"name":"matrix3x2"}],"output":{"name":"matrix3x2"}}],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix.",null,{"inputs":[{"name":"matrix3"}],"output":{"name":"matrix3"}}],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix.",null,{"inputs":[{"name":"matrix3x4"}],"output":{"name":"matrix3x4"}}],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix.",null,{"inputs":[{"name":"matrix4x3"}],"output":{"name":"matrix4x3"}}],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix.",null,{"inputs":[{"name":"matrix4"}],"output":{"name":"matrix4"}}],[0,"traits","","Various useful traits",null,null],[6,"Vector2","","A 2D vector.",null,null],[6,"Vector3","","A 3D vector.",null,null],[6,"Vector4","","A 4D vector.",null,null],[6,"Matrix2x3","","A 2x3 matrix.",null,null],[6,"Matrix3x2","","A 3x2 matrix.",null,null],[6,"Matrix3","","A 3x3 matrix.",null,null],[6,"Matrix3x4","","A 3x4 matrix.",null,null],[6,"Matrix4x3","","A 4x3 matrix.",null,null],[6,"Matrix4","","A 4x4 matrix.",null,null]],"paths":[]};
searchIndex['freetype_sys'] = {"items":[[0,"","freetype_sys","",null,null],[3,"FT_Vector","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"FT_BBox","","",null,null],[12,"xMin","","",1,null],[12,"yMin","","",1,null],[12,"xMax","","",1,null],[12,"yMax","","",1,null],[3,"FT_Matrix","","",null,null],[12,"xx","","",2,null],[12,"xy","","",2,null],[12,"yx","","",2,null],[12,"yy","","",2,null],[3,"FT_UnitVector","","",null,null],[12,"x","","",3,null],[12,"y","","",3,null],[3,"FT_Bitmap","","",null,null],[12,"rows","","",4,null],[12,"width","","",4,null],[12,"pitch","","",4,null],[12,"buffer","","",4,null],[12,"num_grays","","",4,null],[12,"pixel_mode","","",4,null],[12,"palette_mode","","",4,null],[12,"palette","","",4,null],[3,"FT_Data","","",null,null],[12,"pointer","","",5,null],[12,"length","","",5,null],[3,"FT_Generic","","",null,null],[12,"data","","",6,null],[12,"finalizer","","",6,null],[3,"FT_Size_Metrics","","",null,null],[12,"x_ppem","","",7,null],[12,"y_ppem","","",7,null],[12,"x_scale","","",7,null],[12,"y_scale","","",7,null],[12,"ascender","","",7,null],[12,"descender","","",7,null],[12,"height","","",7,null],[12,"max_advance","","",7,null],[3,"FT_Outline","","",null,null],[12,"n_contours","","",8,null],[12,"n_points","","",8,null],[12,"points","","",8,null],[12,"tags","","",8,null],[12,"contours","","",8,null],[12,"flags","","",8,null],[3,"FT_Glyph_Metrics","","",null,null],[12,"width","","",9,null],[12,"height","","",9,null],[12,"horiBearingX","","",9,null],[12,"horiBearingY","","",9,null],[12,"horiAdvance","","",9,null],[12,"vertBearingX","","",9,null],[12,"vertBearingY","","",9,null],[12,"vertAdvance","","",9,null],[3,"FT_Parameter","","",null,null],[12,"tag","","",10,null],[12,"data","","",10,null],[3,"FT_Open_Args","","",null,null],[12,"flags","","",11,null],[12,"memory_base","","",11,null],[12,"memory_size","","",11,null],[12,"pathname","","",11,null],[12,"stream","","",11,null],[12,"driver","","",11,null],[12,"num_params","","",11,null],[12,"params","","",11,null],[3,"FT_Bitmap_Size","","",null,null],[12,"height","","",12,null],[12,"width","","",12,null],[12,"size","","",12,null],[12,"x_ppem","","",12,null],[12,"y_ppem","","",12,null],[3,"TT_OS2","","",null,null],[12,"version","","",13,null],[12,"xAvgCharWidth","","",13,null],[12,"usWeightClass","","",13,null],[12,"usWidthClass","","",13,null],[12,"fsType","","",13,null],[12,"ySubscriptXSize","","",13,null],[12,"ySubscriptYSize","","",13,null],[12,"ySubscriptXOffset","","",13,null],[12,"ySubscriptYOffset","","",13,null],[12,"ySuperscriptXSize","","",13,null],[12,"ySuperscriptYSize","","",13,null],[12,"ySuperscriptXOffset","","",13,null],[12,"ySuperscriptYOffset","","",13,null],[12,"yStrikeoutSize","","",13,null],[12,"yStrikeoutPosition","","",13,null],[12,"sFamilyClass","","",13,null],[12,"panose","","",13,null],[12,"ulUnicodeRange1","","",13,null],[12,"ulUnicodeRange2","","",13,null],[12,"ulUnicodeRange3","","",13,null],[12,"ulUnicodeRange4","","",13,null],[12,"ulCodePageRange1","","",13,null],[12,"ulCodePageRange2","","",13,null],[12,"sxHeight","","",13,null],[12,"sCapHeight","","",13,null],[12,"usDefaultChar","","",13,null],[12,"usBreakChar","","",13,null],[12,"usMaxContext","","",13,null],[3,"FT_CharMapRec","","",null,null],[12,"face","","",14,null],[12,"encoding","","",14,null],[12,"platform_id","","",14,null],[12,"encoding_id","","",14,null],[3,"FT_FaceRec","","",null,null],[12,"num_faces","","",15,null],[12,"face_index","","",15,null],[12,"face_flags","","",15,null],[12,"style_flags","","",15,null],[12,"num_glyphs","","",15,null],[12,"family_name","","",15,null],[12,"style_name","","",15,null],[12,"num_fixed_sizes","","",15,null],[12,"available_sizes","","",15,null],[12,"num_charmaps","","",15,null],[12,"charmaps","","",15,null],[12,"generic","","",15,null],[12,"bbox","","",15,null],[12,"units_per_EM","","",15,null],[12,"ascender","","",15,null],[12,"descender","","",15,null],[12,"height","","",15,null],[12,"max_advance_width","","",15,null],[12,"max_advance_height","","",15,null],[12,"underline_position","","",15,null],[12,"underline_thickness","","",15,null],[12,"glyph","","",15,null],[12,"size","","",15,null],[12,"charmap","","",15,null],[12,"driver","","",15,null],[12,"memory","","",15,null],[12,"stream","","",15,null],[12,"sizes_list","","",15,null],[12,"autohint","","",15,null],[12,"extensions","","",15,null],[12,"internal","","",15,null],[3,"FT_GlyphSlotRec","","",null,null],[12,"library","","",16,null],[12,"face","","",16,null],[12,"next","","",16,null],[12,"reserved","","",16,null],[12,"generic","","",16,null],[12,"metrics","","",16,null],[12,"linearHoriAdvance","","",16,null],[12,"linearVertAdvance","","",16,null],[12,"advance","","",16,null],[12,"format","","",16,null],[12,"bitmap","","",16,null],[12,"bitmap_left","","",16,null],[12,"bitmap_top","","",16,null],[12,"outline","","",16,null],[12,"num_subglyphs","","",16,null],[12,"subglyphs","","",16,null],[12,"control_data","","",16,null],[12,"control_len","","",16,null],[12,"lsb_delta","","",16,null],[12,"rsb_delta","","",16,null],[12,"other","","",16,null],[12,"internal","","",16,null],[3,"FT_SizeRec","","",null,null],[12,"face","","",17,null],[12,"generic","","",17,null],[12,"metrics","","",17,null],[12,"internal","","",17,null],[3,"FT_StreamRec","","",null,null],[12,"base","","",18,null],[12,"size","","",18,null],[12,"pos","","",18,null],[12,"descriptor","","",18,null],[12,"pathname","","",18,null],[12,"read","","",18,null],[12,"close","","",18,null],[12,"memory","","",18,null],[12,"cursor","","",18,null],[12,"limit","","",18,null],[3,"FT_MemoryRec","","",null,null],[12,"user","","",19,null],[12,"alloc","","",19,null],[12,"free","","",19,null],[12,"realloc","","",19,null],[3,"FT_ListRec","","",null,null],[12,"head","","",20,null],[12,"tail","","",20,null],[3,"FT_ListNodeRec","","",null,null],[12,"prev","","",21,null],[12,"next","","",21,null],[12,"data","","",21,null],[3,"FT_Size_RequestRec","","",null,null],[12,"size_request_type","","",22,null],[12,"width","","",22,null],[12,"height","","",22,null],[12,"horiResolution","","",22,null],[12,"vertResolution","","",22,null],[3,"FT_GlyphRec","","",null,null],[12,"library","","",23,null],[12,"clazz","","",23,null],[12,"format","","",23,null],[12,"advance","","",23,null],[3,"FT_BitmapGlyphRec","","",null,null],[12,"root","","",24,null],[12,"left","","",24,null],[12,"top","","",24,null],[12,"bitmap","","",24,null],[3,"FT_OutlineGlyphRec","","",null,null],[12,"root","","",25,null],[12,"outline","","",25,null],[5,"FT_HAS_HORIZONTAL","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_VERTICAL","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_KERNING","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_SCALABLE","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_SFNT","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_FIXED_WIDTH","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_FIXED_SIZES","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_GLYPH_NAMES","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_MULTIPLE_MASTERS","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_CID_KEYED","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_IS_TRICKY","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_HAS_COLOR","","",null,{"inputs":[{"name":"ft_face"}],"output":{"name":"bool"}}],[5,"FT_Get_Sfnt_Table","","",null,null],[5,"FT_Init_FreeType","","",null,null],[5,"FT_Done_FreeType","","",null,null],[5,"FT_New_Library","","",null,null],[5,"FT_Done_Library","","",null,null],[5,"FT_Reference_Library","","",null,null],[5,"FT_Add_Default_Modules","","",null,null],[5,"FT_New_Face","","",null,null],[5,"FT_New_Memory_Face","","",null,null],[5,"FT_Open_Face","","",null,null],[5,"FT_Attach_File","","",null,null],[5,"FT_Attach_Stream","","",null,null],[5,"FT_Reference_Face","","",null,null],[5,"FT_Done_Face","","",null,null],[5,"FT_Select_Size","","",null,null],[5,"FT_Request_Size","","",null,null],[5,"FT_Set_Char_Size","","",null,null],[5,"FT_Set_Pixel_Sizes","","",null,null],[5,"FT_Load_Glyph","","",null,null],[5,"FT_Load_Char","","",null,null],[5,"FT_Set_Transform","","",null,null],[5,"FT_Render_Glyph","","",null,null],[5,"FT_Get_Kerning","","",null,null],[5,"FT_Get_Track_Kerning","","",null,null],[5,"FT_Get_Glyph_Name","","",null,null],[5,"FT_Get_Postscript_Name","","",null,null],[5,"FT_Select_CharMap","","",null,null],[5,"FT_Set_Charmap","","",null,null],[5,"FT_Get_Charmap_Index","","",null,null],[5,"FT_Get_Char_Index","","",null,null],[5,"FT_Get_First_Char","","",null,null],[5,"FT_Get_Next_Char","","",null,null],[5,"FT_Get_Name_Index","","",null,null],[5,"FT_Get_SubGlyph_Info","","",null,null],[5,"FT_Get_FSType_Flags","","",null,null],[5,"FT_Get_Glyph","","",null,null],[5,"FT_Glyph_Copy","","",null,null],[5,"FT_Glyph_Transform","","",null,null],[5,"FT_Glyph_Get_CBox","","",null,null],[5,"FT_Glyph_To_Bitmap","","",null,null],[5,"FT_Done_Glyph","","",null,null],[6,"FT_Byte","","",null,null],[6,"FT_Bytes","","",null,null],[6,"FT_Char","","",null,null],[6,"FT_Int","","",null,null],[6,"FT_UInt","","",null,null],[6,"FT_Int16","","",null,null],[6,"FT_UInt16","","",null,null],[6,"FT_Int32","","",null,null],[6,"FT_UInt32","","",null,null],[6,"FT_Int64","","",null,null],[6,"FT_UInt64","","",null,null],[6,"FT_Short","","",null,null],[6,"FT_UShort","","",null,null],[6,"FT_Long","","",null,null],[6,"FT_ULong","","",null,null],[6,"FT_Bool","","",null,null],[6,"FT_Offset","","",null,null],[6,"FT_PtrDist","","",null,null],[6,"FT_String","","",null,null],[6,"FT_Tag","","",null,null],[6,"FT_Error","","",null,null],[6,"FT_Fixed","","",null,null],[6,"FT_Pointer","","",null,null],[6,"FT_Pos","","",null,null],[6,"FT_FWord","","",null,null],[6,"FT_UFWord","","",null,null],[6,"FT_F2Dot14","","",null,null],[6,"FT_F26Dot6","","",null,null],[6,"FT_Generic_Finalizer","","",null,null],[6,"FT_StreamDesc","","",null,null],[6,"FT_Stream_IoFunc","","",null,null],[6,"FT_Stream_CloseFunc","","",null,null],[6,"FT_Alloc_Func","","",null,null],[6,"FT_Free_Func","","",null,null],[6,"FT_Realloc_Func","","",null,null],[6,"enum_FT_Sfnt_Tag_","","",null,null],[6,"FT_Sfnt_Tag","","",null,null],[6,"FT_Pixel_Mode","","",null,null],[6,"FT_Glyph_Format","","",null,null],[6,"FT_Render_Mode","","",null,null],[6,"FT_Encoding","","",null,null],[6,"FT_Size_Request_Type","","",null,null],[6,"FT_Kerning_Mode","","",null,null],[6,"FT_Glyph_BBox_Mode","","",null,null],[6,"FT_Library","","",null,null],[6,"FT_Face","","",null,null],[6,"FT_Size","","",null,null],[6,"FT_GlyphSlot","","",null,null],[6,"FT_CharMap","","",null,null],[6,"FT_Module","","",null,null],[6,"FT_Driver","","",null,null],[6,"FT_Renderer","","",null,null],[6,"FT_Size_Internal","","",null,null],[6,"FT_SubGlyph","","",null,null],[6,"FT_Slot_Internal","","",null,null],[6,"FT_Size_Request","","",null,null],[6,"FT_Face_Internal","","",null,null],[6,"FT_Stream","","",null,null],[6,"FT_Memory","","",null,null],[6,"FT_ListNode","","",null,null],[6,"FT_Glyph","","",null,null],[6,"FT_BitmapGlyph","","",null,null],[6,"FT_OutlineGlyph","","",null,null],[6,"TT_OS2_Internal","","",null,null],[6,"FT_LibraryRec","","",null,null],[6,"FT_ModuleRec","","",null,null],[6,"FT_DriverRec","","",null,null],[6,"FT_RendererRec","","",null,null],[6,"FT_Size_InternalRec","","",null,null],[6,"FT_SubGlyphRec","","",null,null],[6,"FT_Slot_InternalRec","","",null,null],[6,"FT_Face_InternalRec","","",null,null],[17,"ft_sfnt_head","","",null,null],[17,"ft_sfnt_maxp","","",null,null],[17,"ft_sfnt_os2","","",null,null],[17,"ft_sfnt_hhea","","",null,null],[17,"ft_sfnt_vhea","","",null,null],[17,"ft_sfnt_post","","",null,null],[17,"ft_sfnt_pclt","","",null,null],[17,"ft_sfnt_max","","",null,null],[17,"FT_PIXEL_MODE_NONE","","",null,null],[17,"FT_PIXEL_MODE_MONO","","",null,null],[17,"FT_PIXEL_MODE_GRAY","","",null,null],[17,"FT_PIXEL_MODE_GRAY2","","",null,null],[17,"FT_PIXEL_MODE_GRAY4","","",null,null],[17,"FT_PIXEL_MODE_LCD","","",null,null],[17,"FT_PIXEL_MODE_LCD_V","","",null,null],[17,"FT_PIXEL_MODE_BGRA","","",null,null],[17,"FT_PIXEL_MODE_MAX","","",null,null],[17,"FT_GLYPH_FORMAT_NONE","","",null,null],[17,"FT_GLYPH_FORMAT_COMPOSITE","","",null,null],[17,"FT_GLYPH_FORMAT_BITMAP","","",null,null],[17,"FT_GLYPH_FORMAT_OUTLINE","","",null,null],[17,"FT_GLYPH_FORMAT_PLOTTER","","",null,null],[17,"FT_RENDER_MODE_NORMAL","","",null,null],[17,"FT_RENDER_MODE_LIGHT","","",null,null],[17,"FT_RENDER_MODE_MONO","","",null,null],[17,"FT_RENDER_MODE_LCD","","",null,null],[17,"FT_RENDER_MODE_LCD_V","","",null,null],[17,"FT_RENDER_MODE_MAX","","",null,null],[17,"FT_ENCODING_NONE","","",null,null],[17,"FT_ENCODING_MS_SYMBOL","","",null,null],[17,"FT_ENCODING_UNICODE","","",null,null],[17,"FT_ENCODING_SJIS","","",null,null],[17,"FT_ENCODING_GB2312","","",null,null],[17,"FT_ENCODING_BIG5","","",null,null],[17,"FT_ENCODING_WANSUNG","","",null,null],[17,"FT_ENCODING_JOHAB","","",null,null],[17,"FT_ENCODING_MS_SJIS","","",null,null],[17,"FT_ENCODING_MS_GB2312","","",null,null],[17,"FT_ENCODING_MS_BIG5","","",null,null],[17,"FT_ENCODING_MS_WANSUNG","","",null,null],[17,"FT_ENCODING_MS_JOHAB","","",null,null],[17,"FT_ENCODING_ADOBE_STANDARD","","",null,null],[17,"FT_ENCODING_ADOBE_EXPERT","","",null,null],[17,"FT_ENCODING_ADOBE_CUSTOM","","",null,null],[17,"FT_ENCODING_ADOBE_LATIN_1","","",null,null],[17,"FT_ENCODING_OLD_LATIN_2","","",null,null],[17,"FT_ENCODING_APPLE_ROMAN","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_NOMINAL","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_REAL_DIM","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_BBOX","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_CELL","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_SCALES","","",null,null],[17,"FT_SIZE_REQUEST_TYPE_MAX","","",null,null],[17,"FT_KERNING_DEFAULT","","",null,null],[17,"FT_KERNING_UNFITTED","","",null,null],[17,"FT_KERNING_UNSCALED","","",null,null],[17,"FT_GLYPH_BBOX_UNSCALED","","",null,null],[17,"FT_GLYPH_BBOX_SUBPIXELS","","",null,null],[17,"FT_GLYPH_BBOX_GRIDFIT","","",null,null],[17,"FT_GLYPH_BBOX_TRUNCATE","","",null,null],[17,"FT_GLYPH_BBOX_PIXELS","","",null,null],[17,"FT_FACE_FLAG_SCALABLE","","",null,null],[17,"FT_FACE_FLAG_FIXED_SIZES","","",null,null],[17,"FT_FACE_FLAG_FIXED_WIDTH","","",null,null],[17,"FT_FACE_FLAG_SFNT","","",null,null],[17,"FT_FACE_FLAG_HORIZONTAL","","",null,null],[17,"FT_FACE_FLAG_VERTICAL","","",null,null],[17,"FT_FACE_FLAG_KERNING","","",null,null],[17,"FT_FACE_FLAG_FAST_GLYPHS","","",null,null],[17,"FT_FACE_FLAG_MULTIPLE_MASTERS","","",null,null],[17,"FT_FACE_FLAG_GLYPH_NAMES","","",null,null],[17,"FT_FACE_FLAG_EXTERNAL_STREAM","","",null,null],[17,"FT_FACE_FLAG_HINTER","","",null,null],[17,"FT_FACE_FLAG_CID_KEYED","","",null,null],[17,"FT_FACE_FLAG_TRICKY","","",null,null],[17,"FT_FACE_FLAG_COLOR","","",null,null],[17,"FT_STYLE_FLAG_ITALIC","","",null,null],[17,"FT_STYLE_FLAG_BOLD","","",null,null],[17,"FT_OPEN_MEMORY","","",null,null],[17,"FT_OPEN_STREAM","","",null,null],[17,"FT_OPEN_PATHNAME","","",null,null],[17,"FT_OPEN_DRIVER","","",null,null],[17,"FT_OPEN_PARAMS","","",null,null],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_WORDS","","",null,null],[17,"FT_SUBGLYPH_FLAG_ARGS_ARE_XY_VALUES","","",null,null],[17,"FT_SUBGLYPH_FLAG_ROUND_XY_TO_GRID","","",null,null],[17,"FT_SUBGLYPH_FLAG_SCALE","","",null,null],[17,"FT_SUBGLYPH_FLAG_XY_SCALE","","",null,null],[17,"FT_SUBGLYPH_FLAG_2X2","","",null,null],[17,"FT_SUBGLYPH_FLAG_USE_MY_METRICS","","",null,null],[17,"FT_LOAD_DEFAULT","","",null,null],[17,"FT_LOAD_NO_SCALE","","",null,null],[17,"FT_LOAD_NO_HINTING","","",null,null],[17,"FT_LOAD_RENDER","","",null,null],[17,"FT_LOAD_NO_BITMAP","","",null,null],[17,"FT_LOAD_VERTICAL_LAYOUT","","",null,null],[17,"FT_LOAD_FORCE_AUTOHINT","","",null,null],[17,"FT_LOAD_CROP_BITMAP","","",null,null],[17,"FT_LOAD_PEDANTIC","","",null,null],[17,"FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH","","",null,null],[17,"FT_LOAD_NO_RECURSE","","",null,null],[17,"FT_LOAD_IGNORE_TRANSFORM","","",null,null],[17,"FT_LOAD_MONOCHROME","","",null,null],[17,"FT_LOAD_LINEAR_DESIGN","","",null,null],[17,"FT_LOAD_NO_AUTOHINT","","",null,null],[17,"FT_LOAD_COLOR","","",null,null],[17,"FT_LOAD_TARGET_NORMAL","","",null,null],[17,"FT_LOAD_TARGET_LIGHT","","",null,null],[17,"FT_LOAD_TARGET_MONO","","",null,null],[17,"FT_LOAD_TARGET_LCD","","",null,null],[17,"FT_LOAD_TARGET_LCD_V","","",null,null],[17,"FT_FSTYPE_INSTALLABLE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_RESTRICTED_LICENSE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_PREVIEW_AND_PRINT_EMBEDDING","","",null,null],[17,"FT_FSTYPE_EDITABLE_EMBEDDING","","",null,null],[17,"FT_FSTYPE_NO_SUBSETTING","","",null,null],[17,"FT_FSTYPE_BITMAP_EMBEDDING_ONLY","","",null,null],[17,"FT_Err_Ok","","",null,null],[17,"FT_Err_Cannot_Open_Resource","","",null,null],[17,"FT_Err_Unknown_File_Format","","",null,null],[17,"FT_Err_Invalid_File_Format","","",null,null],[17,"FT_Err_Invalid_Version","","",null,null],[17,"FT_Err_Lower_Module_Version","","",null,null],[17,"FT_Err_Invalid_Argument","","",null,null],[17,"FT_Err_Unimplemented_Feature","","",null,null],[17,"FT_Err_Invalid_Table","","",null,null],[17,"FT_Err_Invalid_Offset","","",null,null],[17,"FT_Err_Array_Too_Large","","",null,null],[17,"FT_Err_Missing_Module","","",null,null],[17,"FT_Err_Missing_Property","","",null,null],[17,"FT_Err_Invalid_Glyph_Index","","",null,null],[17,"FT_Err_Invalid_Character_Code","","",null,null],[17,"FT_Err_Invalid_Glyph_Format","","",null,null],[17,"FT_Err_Cannot_Render_Glyph","","",null,null],[17,"FT_Err_Invalid_Outline","","",null,null],[17,"FT_Err_Invalid_Composite","","",null,null],[17,"FT_Err_Too_Many_Hints","","",null,null],[17,"FT_Err_Invalid_Pixel_Size","","",null,null],[17,"FT_Err_Invalid_Handle","","",null,null],[17,"FT_Err_Invalid_Library_Handle","","",null,null],[17,"FT_Err_Invalid_Driver_Handle","","",null,null],[17,"FT_Err_Invalid_Face_Handle","","",null,null],[17,"FT_Err_Invalid_Size_Handle","","",null,null],[17,"FT_Err_Invalid_Slot_Handle","","",null,null],[17,"FT_Err_Invalid_CharMap_Handle","","",null,null],[17,"FT_Err_Invalid_Cache_Handle","","",null,null],[17,"FT_Err_Invalid_Stream_Handle","","",null,null],[17,"FT_Err_Too_Many_Drivers","","",null,null],[17,"FT_Err_Too_Many_Extensions","","",null,null],[17,"FT_Err_Out_Of_Memory","","",null,null],[17,"FT_Err_Unlisted_Object","","",null,null],[17,"FT_Err_Cannot_Open_Stream","","",null,null],[17,"FT_Err_Invalid_Stream_Seek","","",null,null],[17,"FT_Err_Invalid_Stream_Skip","","",null,null],[17,"FT_Err_Invalid_Stream_Read","","",null,null],[17,"FT_Err_Invalid_Stream_Operation","","",null,null],[17,"FT_Err_Invalid_Frame_Operation","","",null,null],[17,"FT_Err_Nested_Frame_Access","","",null,null],[17,"FT_Err_Invalid_Frame_Read","","",null,null],[17,"FT_Err_Raster_Uninitialized","","",null,null],[17,"FT_Err_Raster_Corrupted","","",null,null],[17,"FT_Err_Raster_Overflow","","",null,null],[17,"FT_Err_Raster_Negative_Height","","",null,null],[17,"FT_Err_Too_Many_Caches","","",null,null],[17,"FT_Err_Invalid_Opcode","","",null,null],[17,"FT_Err_Too_Few_Arguments","","",null,null],[17,"FT_Err_Stack_Overflow","","",null,null],[17,"FT_Err_Code_Overflow","","",null,null],[17,"FT_Err_Bad_Argument","","",null,null],[17,"FT_Err_Divide_By_Zero","","",null,null],[17,"FT_Err_Invalid_Reference","","",null,null],[17,"FT_Err_Debug_OpCode","","",null,null],[17,"FT_Err_ENDF_In_Exec_Stream","","",null,null],[17,"FT_Err_Nested_DEFS","","",null,null],[17,"FT_Err_Invalid_CodeRange","","",null,null],[17,"FT_Err_Execution_Too_Long","","",null,null],[17,"FT_Err_Too_Many_Function_Defs","","",null,null],[17,"FT_Err_Too_Many_Instruction_Defs","","",null,null],[17,"FT_Err_Table_Missing","","",null,null],[17,"FT_Err_Horiz_Header_Missing","","",null,null],[17,"FT_Err_Locations_Missing","","",null,null],[17,"FT_Err_Name_Table_Missing","","",null,null],[17,"FT_Err_CMap_Table_Missing","","",null,null],[17,"FT_Err_Hmtx_Table_Missing","","",null,null],[17,"FT_Err_Post_Table_Missing","","",null,null],[17,"FT_Err_Invalid_Horiz_Metrics","","",null,null],[17,"FT_Err_Invalid_CharMap_Format","","",null,null],[17,"FT_Err_Invalid_PPem","","",null,null],[17,"FT_Err_Invalid_Vert_Metrics","","",null,null],[17,"FT_Err_Could_Not_Find_Context","","",null,null],[17,"FT_Err_Invalid_Post_Table_Format","","",null,null],[17,"FT_Err_Invalid_Post_Table","","",null,null],[17,"FT_Err_Syntax_Error","","",null,null],[17,"FT_Err_Stack_Underflow","","",null,null],[17,"FT_Err_Ignore","","",null,null],[17,"FT_Err_No_Unicode_Glyph_Name","","",null,null],[17,"FT_Err_Missing_Startfont_Field","","",null,null],[17,"FT_Err_Missing_Font_Field","","",null,null],[17,"FT_Err_Missing_Size_Field","","",null,null],[17,"FT_Err_Missing_Fontboundingbox_Field","","",null,null],[17,"FT_Err_Missing_Chars_Field","","",null,null],[17,"FT_Err_Missing_Startchar_Field","","",null,null],[17,"FT_Err_Missing_Encoding_Field","","",null,null],[17,"FT_Err_Missing_Bbx_Field","","",null,null],[17,"FT_Err_Bbx_Too_Big","","",null,null],[17,"FT_Err_Corrupted_Font_Header","","",null,null],[17,"FT_Err_Corrupted_Font_Glyphs","","",null,null],[17,"FT_Err_Max","","",null,null],[8,"FTErrorMethods","","",null,null],[10,"succeeded","","",26,{"inputs":[{"name":"fterrormethods"}],"output":{"name":"bool"}}],[11,"succeeded","","",27,{"inputs":[{"name":"ft_error"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"ft_vector"}],"output":{"name":"ft_vector"}}],[11,"clone","","",1,{"inputs":[{"name":"ft_bbox"}],"output":{"name":"ft_bbox"}}],[11,"clone","","",2,{"inputs":[{"name":"ft_matrix"}],"output":{"name":"ft_matrix"}}],[11,"clone","","",3,{"inputs":[{"name":"ft_unitvector"}],"output":{"name":"ft_unitvector"}}],[11,"clone","","",7,{"inputs":[{"name":"ft_size_metrics"}],"output":{"name":"ft_size_metrics"}}],[11,"clone","","",9,{"inputs":[{"name":"ft_glyph_metrics"}],"output":{"name":"ft_glyph_metrics"}}],[11,"clone","","",10,{"inputs":[{"name":"ft_parameter"}],"output":{"name":"ft_parameter"}}],[11,"clone","","",12,{"inputs":[{"name":"ft_bitmap_size"}],"output":{"name":"ft_bitmap_size"}}],[11,"clone","","",13,{"inputs":[{"name":"tt_os2"}],"output":{"name":"tt_os2"}}],[11,"clone","","",14,{"inputs":[{"name":"ft_charmaprec"}],"output":{"name":"ft_charmaprec"}}],[11,"clone","","",20,{"inputs":[{"name":"ft_listrec"}],"output":{"name":"ft_listrec"}}],[11,"clone","","",22,{"inputs":[{"name":"ft_size_requestrec"}],"output":{"name":"ft_size_requestrec"}}]],"paths":[[3,"FT_Vector"],[3,"FT_BBox"],[3,"FT_Matrix"],[3,"FT_UnitVector"],[3,"FT_Bitmap"],[3,"FT_Data"],[3,"FT_Generic"],[3,"FT_Size_Metrics"],[3,"FT_Outline"],[3,"FT_Glyph_Metrics"],[3,"FT_Parameter"],[3,"FT_Open_Args"],[3,"FT_Bitmap_Size"],[3,"TT_OS2"],[3,"FT_CharMapRec"],[3,"FT_FaceRec"],[3,"FT_GlyphSlotRec"],[3,"FT_SizeRec"],[3,"FT_StreamRec"],[3,"FT_MemoryRec"],[3,"FT_ListRec"],[3,"FT_ListNodeRec"],[3,"FT_Size_RequestRec"],[3,"FT_GlyphRec"],[3,"FT_BitmapGlyphRec"],[3,"FT_OutlineGlyphRec"],[8,"FTErrorMethods"],[6,"FT_Error"]]};
searchIndex['draw_state'] = {"items":[[0,"","draw_state","Graphics state blocks for gfx-rs",null,null],[3,"DrawState","","An assembly of states that affect regular draw calls",null,null],[12,"primitive","","How to rasterize geometric primitives.",0,null],[12,"multi_sample","","Multi-sampling mode",0,null],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be\nwritten to as a result of rendering.",0,null],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",0,null],[12,"depth","","Depth test to use. If None, no depth testing is done.",0,null],[12,"blend","","Blend function to use. If None, no blending is done.",0,null],[12,"color_mask","","Color mask to use. Each flag indicates that the given color channel can be written to, and\nthey can be OR'd together.",0,null],[4,"BlendPreset","","Blend function presets for ease of use.",null,null],[13,"Add","","When combining two fragments, add their values together, saturating at 1.0",1,null],[13,"Multiply","","When combining two fragments, multiply their values together.",1,null],[13,"Alpha","","When combining two fragments, add the value of the source times its alpha channel with the\nvalue of the destination multiplied by the inverse of the source alpha channel. Has the\nusual transparency effect: mixes the two colors using a fraction of each one specified by\nthe alpha of the source.",1,null],[13,"Invert","","When combining two fragments, subtract the destination color from a constant color\nusing the source color as weight. Has an invert effect with the constant color\nas base and source color controlling displacement from the base color.\nA white source color and a white value results in plain invert.\nThe output alpha is same as destination alpha.",1,null],[0,"state","","Fixed-function hardware state.",null,null],[3,"Offset","draw_state::state","How to offset vertices in screen space, if at all.",null,null],[3,"Primitive","","Primitive rasterization state. Note that GL allows different raster\nmethod to be used for front and back, while this abstraction does not.",null,null],[12,"front_face","","Which vertex winding is considered to be the front face for culling.",2,null],[12,"method","","How to rasterize this primitive.",2,null],[12,"offset","","Any polygon offset to apply.",2,null],[3,"MultiSample","","Multi-sampling rasterization mode",null,null],[3,"StencilSide","","Complete stencil state for a given side of a face.",null,null],[12,"fun","","Comparison function to use to determine if the stencil test passes.",3,null],[12,"value","","Reference value to compare the value in the stencil buffer with.",3,null],[12,"mask_read","","A mask that is ANDd with both the stencil buffer value and the reference value when they\nare read before doing the stencil test.",3,null],[12,"mask_write","","A mask that is ANDd with the stencil value before writing to the stencil buffer.",3,null],[12,"op_fail","","What operation to do if the stencil test fails.",3,null],[12,"op_depth_fail","","What operation to do if the stenil test passes but the depth test fails.",3,null],[12,"op_pass","","What operation to do if both the depth and stencil test pass.",3,null],[3,"Stencil","","Complete stencil state, specifying how to handle the front and back side of a face.",null,null],[12,"front","","",4,null],[12,"back","","",4,null],[3,"Depth","","Depth test state.",null,null],[12,"fun","","Comparison function to use.",5,null],[12,"write","","Specify whether to write to the depth buffer or not.",5,null],[3,"BlendChannel","","",null,null],[12,"equation","","",6,null],[12,"source","","",6,null],[12,"destination","","",6,null],[3,"Blend","","",null,null],[12,"color","","",7,null],[12,"alpha","","",7,null],[12,"value","","",7,null],[3,"ColorMask","","",null,null],[4,"FrontFace","","The front face winding order of a set of vertices.",null,null],[13,"Clockwise","","Clockwise winding order.",8,null],[13,"CounterClockwise","","Counter-clockwise winding order.",8,null],[4,"CullFace","","Which face, if any, to cull.",null,null],[13,"Nothing","","",9,null],[13,"Front","","",9,null],[13,"Back","","",9,null],[4,"RasterMethod","","How to rasterize a primitive.",null,null],[13,"Point","","Rasterize as a point.",10,null],[13,"Line","","Rasterize as a line with the given width.",10,null],[13,"Fill","","Rasterize as a face with a given cull face mode.",10,null],[4,"Comparison","","A pixel-wise comparison function.",null,null],[13,"Never","","`false`",11,null],[13,"Less","","`x < y`",11,null],[13,"LessEqual","","`x <= y`",11,null],[13,"Equal","","`x == y`",11,null],[13,"GreaterEqual","","`x >= y`",11,null],[13,"Greater","","`x > y`",11,null],[13,"NotEqual","","`x != y`",11,null],[13,"Always","","`true`",11,null],[4,"StencilOp","","Stencil mask operation.",null,null],[13,"Keep","","Keep the current value in the stencil buffer (no change).",12,null],[13,"Zero","","Set the value in the stencil buffer to zero.",12,null],[13,"Replace","","Set the stencil buffer value to `value` from `StencilSide`",12,null],[13,"IncrementClamp","","Increment the stencil buffer value, clamping to its maximum value.",12,null],[13,"IncrementWrap","","Increment the stencil buffer value, wrapping around to 0 on overflow.",12,null],[13,"DecrementClamp","","Decrement the stencil buffer value, clamping to its minimum value.",12,null],[13,"DecrementWrap","","Decrement the stencil buffer value, wrapping around to the maximum value on overflow.",12,null],[13,"Invert","","Bitwise invert the current value in the stencil buffer.",12,null],[4,"Equation","","",null,null],[13,"Add","","Adds source and destination.\nSource and destination are multiplied by blending parameters before addition.",13,null],[13,"Sub","","Subtracts destination from source.\nSource and destination are multiplied by blending parameters before subtraction.",13,null],[13,"RevSub","","Subtracts source from destination.\nSource and destination are multiplied by blending parameters before subtraction.",13,null],[13,"Min","","Component-wise minimum value of source and destination.\nBlending parameters are ignored.",13,null],[13,"Max","","Component-wise maximum value of source and destination.\nBlending parameters are ignored.",13,null],[4,"BlendValue","","",null,null],[13,"SourceColor","","",14,null],[13,"SourceAlpha","","",14,null],[13,"DestColor","","",14,null],[13,"DestAlpha","","",14,null],[13,"ConstColor","","",14,null],[13,"ConstAlpha","","",14,null],[4,"Factor","","",null,null],[13,"Zero","","",15,null],[13,"One","","",15,null],[13,"SourceAlphaSaturated","","",15,null],[13,"ZeroPlus","","",15,null],[13,"OneMinus","","",15,null],[6,"LineWidth","","Width of a line.",null,null],[6,"OffsetFactor","","",null,null],[6,"OffsetUnits","","",null,null],[17,"RED","","",null,null],[17,"GREEN","","",null,null],[17,"BLUE","","",null,null],[17,"ALPHA","","",null,null],[17,"MASK_ALL","","",null,null],[17,"MASK_NONE","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"hash","","",8,null],[11,"partial_cmp","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"frontface"},{"name":"frontface"}],"output":{"name":"ordering"}}],[11,"fmt","","",16,{"inputs":[{"name":"offset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"offset"},{"name":"offset"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"offset"}],"output":{"name":"offset"}}],[11,"fmt","","",9,{"inputs":[{"name":"cullface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"cullface"},{"name":"cullface"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"cullface"}],"output":{"name":"cullface"}}],[11,"fmt","","",10,{"inputs":[{"name":"rastermethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"rastermethod"},{"name":"rastermethod"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"rastermethod"}],"output":{"name":"rastermethod"}}],[11,"fmt","","",2,{"inputs":[{"name":"primitive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"primitive"},{"name":"primitive"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"get_cull_face","","Get the cull face, if any, for this primitive state.",2,{"inputs":[{"name":"primitive"}],"output":{"name":"cullface"}}],[11,"default","","",2,{"inputs":[{"name":"primitive"}],"output":{"name":"primitive"}}],[11,"fmt","","",17,{"inputs":[{"name":"multisample"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"multisample"}],"output":{"name":"multisample"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"bool"}}],[11,"cmp","","",17,{"inputs":[{"name":"multisample"},{"name":"multisample"}],"output":{"name":"ordering"}}],[11,"fmt","","",11,{"inputs":[{"name":"comparison"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"comparison"}],"output":{"name":"comparison"}}],[11,"hash","","",11,null],[11,"partial_cmp","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"bool"}}],[11,"cmp","","",11,{"inputs":[{"name":"comparison"},{"name":"comparison"}],"output":{"name":"ordering"}}],[11,"fmt","","",12,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"hash","","",12,null],[11,"partial_cmp","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"cmp","","",12,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"ordering"}}],[11,"fmt","","",3,{"inputs":[{"name":"stencilside"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"hash","","",3,null],[11,"partial_cmp","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"bool"}}],[11,"cmp","","",3,{"inputs":[{"name":"stencilside"},{"name":"stencilside"}],"output":{"name":"ordering"}}],[11,"default","","",3,{"inputs":[{"name":"stencilside"}],"output":{"name":"stencilside"}}],[11,"fmt","","",4,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"hash","","",4,null],[11,"partial_cmp","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"stencil"},{"name":"stencil"}],"output":{"name":"ordering"}}],[11,"fmt","","",5,{"inputs":[{"name":"depth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"hash","","",5,null],[11,"partial_cmp","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"depth"},{"name":"depth"}],"output":{"name":"ordering"}}],[11,"default","","",5,{"inputs":[{"name":"depth"}],"output":{"name":"depth"}}],[11,"fmt","","",13,{"inputs":[{"name":"equation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"equation"}],"output":{"name":"equation"}}],[11,"hash","","",13,null],[11,"partial_cmp","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"equation"},{"name":"equation"}],"output":{"name":"ordering"}}],[11,"fmt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"blendvalue"}],"output":{"name":"blendvalue"}}],[11,"hash","","",14,null],[11,"partial_cmp","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"eq","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"bool"}}],[11,"cmp","","",14,{"inputs":[{"name":"blendvalue"},{"name":"blendvalue"}],"output":{"name":"ordering"}}],[11,"fmt","","",15,{"inputs":[{"name":"factor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"factor"}],"output":{"name":"factor"}}],[11,"hash","","",15,null],[11,"partial_cmp","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"bool"}}],[11,"cmp","","",15,{"inputs":[{"name":"factor"},{"name":"factor"}],"output":{"name":"ordering"}}],[11,"fmt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"hash","","",6,null],[11,"partial_cmp","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"blendchannel"},{"name":"blendchannel"}],"output":{"name":"ordering"}}],[11,"default","","",6,{"inputs":[{"name":"blendchannel"}],"output":{"name":"blendchannel"}}],[11,"default","","",7,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"eq","","",7,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",7,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"cmp","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"eq","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"all","","Returns the set containing all flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",18,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",18,{"inputs":[{"name":"colormask"},{"name":"u32"}],"output":{"name":"colormask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",18,{"inputs":[{"name":"colormask"},{"name":"colormask"}],"output":{"name":"colormask"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",18,{"inputs":[{"name":"colormask"}],"output":{"name":"colormask"}}],[11,"fmt","","",18,{"inputs":[{"name":"colormask"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"target","draw_state","Render target specification.",null,null],[3,"Rect","draw_state::target","A screen space rectangle",null,null],[12,"x","","",19,null],[12,"y","","",19,null],[12,"w","","",19,null],[12,"h","","",19,null],[3,"Mask","","/// Output mask, used for blitting and clearing",null,null],[3,"Mirror","","/// Mirroring flags, used for blitting",null,null],[3,"ClearData","","How to clear a frame.",null,null],[12,"color","","The color to clear the frame with",20,null],[12,"depth","","The depth value to clear the frame with",20,null],[12,"stencil","","The stencil value to clear the frame with",20,null],[6,"Layer","","A depth value, specifying which plane to select out of a 3D texture.",null,null],[6,"Level","","Mipmap level to select in a texture.",null,null],[6,"Depth","","A single depth value from a depth buffer.",null,null],[6,"Stencil","","A single value from a stencil stencstencil buffer.",null,null],[6,"ColorValue","","A color with floating-point components.",null,null],[17,"COLOR","","",null,null],[17,"COLOR0","","",null,null],[17,"COLOR1","","",null,null],[17,"COLOR2","","",null,null],[17,"COLOR3","","",null,null],[17,"DEPTH","","",null,null],[17,"STENCIL","","",null,null],[17,"MIRROR_X","","",null,null],[17,"MIRROR_Y","","",null,null],[11,"fmt","","",19,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"hash","","",21,null],[11,"cmp","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"eq","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"all","","Returns the set containing all flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",21,{"inputs":[{"name":"mask"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",21,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",21,{"inputs":[{"name":"mask"},{"name":"u8"}],"output":{"name":"mask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",21,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",21,{"inputs":[{"name":"mask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",21,{"inputs":[{"name":"mask"},{"name":"mask"}],"output":{"name":"mask"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",21,{"inputs":[{"name":"mask"}],"output":{"name":"mask"}}],[11,"fmt","","",21,{"inputs":[{"name":"mask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",22,null],[11,"cmp","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"eq","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"mirror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"all","","Returns the set containing all flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"bits","","Returns the raw value of the flags currently stored.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"u8"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",22,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",22,{"inputs":[{"name":"mirror"},{"name":"u8"}],"output":{"name":"mirror"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",22,{"inputs":[{"name":"mirror"},{"name":"mirror"}],"output":{"name":"mirror"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",22,{"inputs":[{"name":"mirror"}],"output":{"name":"mirror"}}],[11,"clone","","",20,{"inputs":[{"name":"cleardata"}],"output":{"name":"cleardata"}}],[11,"fmt","","",20,{"inputs":[{"name":"cleardata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","draw_state","",0,{"inputs":[{"name":"drawstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"drawstate"},{"name":"drawstate"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"hash","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"blendpreset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"blendpreset"},{"name":"blendpreset"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"blendpreset"}],"output":{"name":"blendpreset"}}],[11,"new","","Create a default `DrawState`. Uses counter-clockwise winding, culls the backface of each\nprimitive, and does no scissor/stencil/depth/blend/color masking.",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"get_target_mask","","Return a target mask that contains all the planes required by this state.",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"mask"}}],[11,"multi_sample","","Enable multi-sampled rasterization",0,{"inputs":[{"name":"drawstate"}],"output":{"name":"drawstate"}}],[11,"stencil","","Set the stencil test to a simple expression",0,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"stencil"}],"output":{"name":"drawstate"}}],[11,"depth","","Set the depth test with the mask",0,{"inputs":[{"name":"drawstate"},{"name":"comparison"},{"name":"bool"}],"output":{"name":"drawstate"}}],[11,"scissor","","Set the scissor",0,{"inputs":[{"name":"drawstate"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"drawstate"}}],[11,"blend","","Set the blend mode to one of the presets",0,{"inputs":[{"name":"drawstate"},{"name":"blendpreset"}],"output":{"name":"drawstate"}}]],"paths":[[3,"DrawState"],[4,"BlendPreset"],[3,"Primitive"],[3,"StencilSide"],[3,"Stencil"],[3,"Depth"],[3,"BlendChannel"],[3,"Blend"],[4,"FrontFace"],[4,"CullFace"],[4,"RasterMethod"],[4,"Comparison"],[4,"StencilOp"],[4,"Equation"],[4,"BlendValue"],[4,"Factor"],[3,"Offset"],[3,"MultiSample"],[3,"ColorMask"],[3,"Rect"],[3,"ClearData"],[3,"Mask"],[3,"Mirror"]]};
searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade.",null,null],[3,"LogRecord","","The \"payload\" of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Trace` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,{"inputs":[{"name":"log"},{"name":"logmetadata"}],"output":{"name":"bool"}}],[10,"log","","Logs the `LogRecord`.",2,{"inputs":[{"name":"log"},{"name":"logrecord"}],"output":null}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"cmp","","",0,{"inputs":[{"name":"loglevel"},{"name":"loglevel"}],"output":{"name":"ordering"}}],[6,"Err","","",null,null],[11,"from_str","","",0,{"inputs":[{"name":"loglevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"loglevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,{"inputs":[{"name":"loglevel"}],"output":{"name":"loglevelfilter"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevel"}],"output":{"name":"option"}}],[11,"cmp","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"loglevelfilter"}],"output":{"name":"ordering"}}],[6,"Err","","",null,null],[11,"from_str","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"loglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,{"inputs":[{"name":"loglevelfilter"}],"output":{"name":"option"}}],[11,"args","","The message body.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"arguments"}}],[11,"metadata","","Metadata about the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"logmetadata"}}],[11,"location","","The location of the log directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglocation"}}],[11,"level","","The verbosity level of the message.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",3,{"inputs":[{"name":"logrecord"}],"output":{"name":"str"}}],[11,"level","","The verbosity level of the message.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"loglevel"}}],[11,"target","","The name of the target of the directive.",4,{"inputs":[{"name":"logmetadata"}],"output":{"name":"str"}}],[11,"fmt","","",5,{"inputs":[{"name":"loglocation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"loglocation"}}],[11,"module_path","","The module path of the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"file","","The source file containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"str"}}],[11,"line","","The line containing the message.",5,{"inputs":[{"name":"loglocation"}],"output":{"name":"u32"}}],[11,"fmt","","",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Gets the current maximum log level filter.",6,{"inputs":[{"name":"maxloglevelfilter"}],"output":{"name":"loglevelfilter"}}],[11,"set","","Sets the maximum log level.",6,{"inputs":[{"name":"maxloglevelfilter"},{"name":"loglevelfilter"}],"output":null}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"setloggererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",7,{"inputs":[{"name":"setloggererror"}],"output":{"name":"str"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",8,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",8,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",8,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",8,null],[11,"eq","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","log","",null,null],[11,"deref","alloc::boxed","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",8,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[6,"Item","log","",null,null],[11,"next","alloc::boxed","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"next_back","","",8,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[6,"Output","log","",null,null],[6,"Output","","",null,null],[11,"call_once","alloc::boxed","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[6,"Output","log","",null,null],[11,"call_once","alloc::boxed","",8,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"fmt","alloc::arc","",9,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Arc<T>`.",10,{"inputs":[{"name":"arc"},{"name":"t"}],"output":{"name":"arc"}}],[11,"downgrade","","Downgrades the `Arc<T>` to a `Weak<T>` reference.",10,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"clone","","Makes a clone of the `Arc<T>`.",10,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[6,"Target","log","",null,null],[11,"deref","alloc::arc","",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"make_unique","","Make a mutable reference from the given `Arc<T>`.",10,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Arc<T>`.",10,null],[11,"upgrade","","Upgrades a weak reference to a strong reference.",9,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"clone","","Makes a clone of the `Weak<T>`.",9,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak<T>`.",9,null],[11,"eq","","Equality for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Arc<T>`s.",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"ordering"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",10,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"hash","","",10,null],[11,"new","alloc::rc","Constructs a new `Rc<T>`.",11,{"inputs":[{"name":"rc"},{"name":"t"}],"output":{"name":"rc"}}],[11,"downgrade","","Downgrades the `Rc<T>` to a `Weak<T>` reference.",11,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"make_unique","","Make a mutable reference from the given `Rc<T>`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[6,"Target","log","",null,null],[11,"deref","alloc::rc","",11,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc<T>`.",11,null],[11,"clone","","Makes a clone of the `Rc<T>`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc<T>`, with the `Default` value for `T`.",11,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","'Less-than or equal to' comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","'Greater-than or equal to' comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc<T>`s.",11,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",12,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak<T>`.",12,null],[11,"clone","","Makes a clone of the `Weak<T>`.",12,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",12,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"log!","log","The standard logging macro.",null,null],[14,"error!","","Logs a message at the error level.",null,null],[14,"warn!","","Logs a message at the warn level.",null,null],[14,"info!","","Logs a message at the info level.",null,null],[14,"debug!","","Logs a message at the debug level.",null,null],[14,"trace!","","Logs a message at the trace level.",null,null],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"Box"],[3,"Weak"],[3,"Arc"],[3,"Rc"],[3,"Weak"]]};
searchIndex['libz_sys'] = {"items":[[0,"","libz_sys","",null,null],[3,"gz_header","","",null,null],[12,"text","","",0,null],[12,"time","","",0,null],[12,"xflags","","",0,null],[12,"os","","",0,null],[12,"extra","","",0,null],[12,"extra_len","","",0,null],[12,"extra_max","","",0,null],[12,"name","","",0,null],[12,"name_max","","",0,null],[12,"comment","","",0,null],[12,"comm_max","","",0,null],[12,"hcrc","","",0,null],[12,"done","","",0,null],[3,"z_stream","","",null,null],[12,"next_in","","",1,null],[12,"avail_in","","",1,null],[12,"total_in","","",1,null],[12,"next_out","","",1,null],[12,"avail_out","","",1,null],[12,"total_out","","",1,null],[12,"msg","","",1,null],[12,"state","","",1,null],[12,"zalloc","","",1,null],[12,"zfree","","",1,null],[12,"opaque","","",1,null],[12,"data_type","","",1,null],[12,"adler","","",1,null],[12,"reserved","","",1,null],[4,"gzFile_s","","",null,null],[4,"internal_state","","",null,null],[5,"adler32","","",null,null],[5,"adler32_combine","","",null,null],[5,"compress","","",null,null],[5,"compress2","","",null,null],[5,"compressBound","","",null,null],[5,"crc32","","",null,null],[5,"crc32_combine","","",null,null],[5,"deflate","","",null,null],[5,"deflateBound","","",null,null],[5,"deflateCopy","","",null,null],[5,"deflateEnd","","",null,null],[5,"deflateInit","","",null,null],[5,"deflateInit2","","",null,null],[5,"deflateParams","","",null,null],[5,"deflatePending","","",null,null],[5,"deflatePrime","","",null,null],[5,"deflateReset","","",null,null],[5,"deflateSetDictionary","","",null,null],[5,"deflateSetHeader","","",null,null],[5,"deflateTune","","",null,null],[5,"gzbuffer","","",null,null],[5,"gzdirect","","",null,null],[5,"gzdopen","","",null,null],[5,"gzclearerr","","",null,null],[5,"gzclose","","",null,null],[5,"gzclose_r","","",null,null],[5,"gzclose_w","","",null,null],[5,"gzeof","","",null,null],[5,"gzerror","","",null,null],[5,"gzflush","","",null,null],[5,"gzgetc","","",null,null],[5,"gzgets","","",null,null],[5,"gzoffset","","",null,null],[5,"gzopen","","",null,null],[5,"gzputc","","",null,null],[5,"gzputs","","",null,null],[5,"gzread","","",null,null],[5,"gzrewind","","",null,null],[5,"gzseek","","",null,null],[5,"gzsetparams","","",null,null],[5,"gztell","","",null,null],[5,"gzungetc","","",null,null],[5,"gzwrite","","",null,null],[5,"inflate","","",null,null],[5,"inflateBack","","",null,null],[5,"inflateBackEnd","","",null,null],[5,"inflateBackInit","","",null,null],[5,"inflateCopy","","",null,null],[5,"inflateEnd","","",null,null],[5,"inflateGetDictionary","","",null,null],[5,"inflateGetHeader","","",null,null],[5,"inflateInit","","",null,null],[5,"inflateInit2","","",null,null],[5,"inflateMark","","",null,null],[5,"inflatePrime","","",null,null],[5,"inflateReset","","",null,null],[5,"inflateReset2","","",null,null],[5,"inflateSetDictionary","","",null,null],[5,"inflateSync","","",null,null],[5,"uncompress","","",null,null],[5,"zlibCompileFlags","","",null,null],[5,"zlibVersion","","",null,null],[6,"alloc_func","","",null,null],[6,"Bytef","","",null,null],[6,"free_func","","",null,null],[6,"gzFile","","",null,null],[6,"in_func","","",null,null],[6,"out_func","","",null,null],[6,"uInt","","",null,null],[6,"uLong","","",null,null],[6,"uLongf","","",null,null],[6,"voidp","","",null,null],[6,"voidpc","","",null,null],[6,"voidpf","","",null,null],[6,"z_off_t","","",null,null],[6,"gz_headerp","","",null,null],[6,"z_streamp","","",null,null],[17,"Z_NO_FLUSH","","",null,null],[17,"Z_PARTIAL_FLUSH","","",null,null],[17,"Z_SYNC_FLUSH","","",null,null],[17,"Z_FULL_FLUSH","","",null,null],[17,"Z_FINISH","","",null,null],[17,"Z_BLOCK","","",null,null],[17,"Z_TREES","","",null,null],[17,"Z_OK","","",null,null],[17,"Z_STREAM_END","","",null,null],[17,"Z_NEED_DICT","","",null,null],[17,"Z_ERRNO","","",null,null],[17,"Z_STREAM_ERROR","","",null,null],[17,"Z_DATA_ERROR","","",null,null],[17,"Z_MEM_ERROR","","",null,null],[17,"Z_BUF_ERROR","","",null,null],[17,"Z_VERSION_ERROR","","",null,null],[17,"Z_NO_COMPRESSION","","",null,null],[17,"Z_BEST_SPEED","","",null,null],[17,"Z_BEST_COMPRESSION","","",null,null],[17,"Z_DEFAULT_COMPRESSION","","",null,null],[17,"Z_FILTERED","","",null,null],[17,"Z_HUFFMAN_ONLY","","",null,null],[17,"Z_RLE","","",null,null],[17,"Z_FIXED","","",null,null],[17,"Z_DEFAULT_STRATEGY","","",null,null],[17,"Z_BINARY","","",null,null],[17,"Z_TEXT","","",null,null],[17,"Z_ASCII","","",null,null],[17,"Z_UNKNOWN","","",null,null],[17,"Z_DEFLATED","","",null,null]],"paths":[[3,"gz_header"],[3,"z_stream"]]};
searchIndex['dylib'] = {"items":[[0,"","dylib","Dynamic library facilities.",null,null],[3,"DynamicLibrary","","",null,null],[11,"drop","","",0,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",0,null],[11,"envvar","","Returns the environment variable for this process's dynamic library\nsearch path",0,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",0,{"inputs":[{"name":"dynamiclibrary"}],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",0,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"DynamicLibrary"]]};
searchIndex['clock_ticks'] = {"items":[[0,"","clock_ticks","",null,null],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"precise_time_ms","","Returns the current value of a high-resolution performance counter\nin milliseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}]],"paths":[]};
searchIndex['gl_common'] = {"items":[[0,"","gl_common","Defines everything used by `gl_generator`.",null,null],[8,"GlFunctionsSource","","",null,null],[10,"get_proc_addr","","",0,null]],"paths":[[8,"GlFunctionsSource"]]};
searchIndex['viewport'] = {"items":[[0,"","viewport","A library for storing viewport information",null,null],[3,"Viewport","","Stores viewport information.",null,null],[12,"rect","","Viewport in pixels.\n```[x, y, width height]``` where ```(x, y)``` is lower left corner.",0,null],[12,"draw_size","","The size of frame buffer in pixels.",0,null],[12,"window_size","","The size of window in points.",0,null],[11,"clone","","",0,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[11,"abs_transform","","Computes absolute transform for 2D graphics,\nwhich uses a row major 2x3 matrix.\nThe origin is in the upper left corner of the viewport rectangle.\nThe x axis points to the right, and the y axis points down.\nThe units are in points (window coordinates).",0,null]],"paths":[[3,"Viewport"]]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"glob_t","libc::types::os::common::posix01","",null,null],[12,"gl_pathc","","",1,null],[12,"gl_pathv","","",1,null],[12,"gl_offs","","",1,null],[12,"__unused1","","",1,null],[12,"__unused2","","",1,null],[12,"__unused3","","",1,null],[12,"__unused4","","",1,null],[12,"__unused5","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[4,"timezone","","",null,null],[6,"pthread_t","","",null,null],[6,"rlim_t","","",null,null],[6,"sighandler_t","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",2,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[0,"bsd43","libc::types::os::common","",null,null],[3,"rusage","libc::types::os::common::bsd43","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[11,"clone","","",5,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",6,null],[12,"sa_data","","",6,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",7,null],[12,"__ss_align","","",7,null],[12,"__ss_pad2","","",7,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",8,null],[12,"sin_port","","",8,null],[12,"sin_addr","","",8,null],[12,"sin_zero","","",8,null],[3,"in_addr","","",null,null],[12,"s_addr","","",9,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",10,null],[12,"sin6_port","","",10,null],[12,"sin6_flowinfo","","",10,null],[12,"sin6_addr","","",10,null],[12,"sin6_scope_id","","",10,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",11,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",12,null],[12,"imr_interface","","",12,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",13,null],[12,"ipv6mr_interface","","",13,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",14,null],[12,"ai_family","","",14,null],[12,"ai_socktype","","",14,null],[12,"ai_protocol","","",14,null],[12,"ai_addrlen","","",14,null],[12,"ai_addr","","",14,null],[12,"ai_canonname","","",14,null],[12,"ai_next","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",16,null],[12,"ifa_name","","",16,null],[12,"ifa_flags","","",16,null],[12,"ifa_addr","","",16,null],[12,"ifa_netmask","","",16,null],[12,"ifa_ifu","","",16,null],[12,"ifa_data","","",16,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",6,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",8,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",9,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",10,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",11,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",12,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",14,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"posix01","libc::types::os::arch","",null,null],[3,"stat","libc::types::os::arch::posix01","",null,null],[12,"st_dev","","",17,null],[12,"st_ino","","",17,null],[12,"st_nlink","","",17,null],[12,"st_mode","","",17,null],[12,"st_uid","","",17,null],[12,"st_gid","","",17,null],[12,"__pad0","","",17,null],[12,"st_rdev","","",17,null],[12,"st_size","","",17,null],[12,"st_blksize","","",17,null],[12,"st_blocks","","",17,null],[12,"st_atime","","",17,null],[12,"st_atime_nsec","","",17,null],[12,"st_mtime","","",17,null],[12,"st_mtime_nsec","","",17,null],[12,"st_ctime","","",17,null],[12,"st_ctime_nsec","","",17,null],[12,"__unused","","",17,null],[3,"utimbuf","","",null,null],[12,"actime","","",18,null],[12,"modtime","","",18,null],[3,"pthread_attr_t","","",null,null],[12,"__size","","",19,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[11,"clone","","",17,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",18,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",19,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[0,"extra","libc::types::os::arch","",null,null],[3,"sockaddr_ll","libc::types::os::arch::extra","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EDOTDOT","","",null,null],[17,"EBADMSG","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"ERFKILL","","",null,null],[17,"EHWPOISON","","",null,null],[0,"posix01","libc::consts::os","",null,null],[17,"F_DUPFD","libc::consts::os::posix01","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"SIG_IGN","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"MADV_NORMAL","libc::consts::os::bsd44","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"AF_PACKET","libc::consts::os::extra","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[0,"sysconf","libc::consts::os","",null,null],[17,"_SC_ARG_MAX","libc::consts::os::sysconf","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"mkfifo","","",null,null],[5,"stat","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[0,"dirent","libc::funcs::posix88","",null,null],[5,"opendir","libc::funcs::posix88::dirent","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"getsid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"usleep","","",null,null],[5,"nanosleep","","",null,null],[5,"sysconf","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"utime","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[0,"signal","libc::funcs::posix88","",null,null],[5,"kill","libc::funcs::posix88::signal","",null,null],[0,"mman","libc::funcs::posix88","",null,null],[5,"mlock","libc::funcs::posix88::mman","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mprotect","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,null],[5,"shm_unlink","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[0,"net","libc::funcs::posix88","",null,null],[5,"if_nametoindex","libc::funcs::posix88::net","",null,null],[0,"posix01","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix01","",null,null],[5,"lstat","libc::funcs::posix01::stat_","",null,null],[0,"unistd","libc::funcs::posix01","",null,null],[5,"readlink","libc::funcs::posix01::unistd","",null,null],[5,"fsync","","",null,null],[5,"fdatasync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"putenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[0,"signal","libc::funcs::posix01","",null,null],[5,"signal","libc::funcs::posix01::signal","",null,null],[0,"glob","libc::funcs::posix01","",null,null],[5,"glob","libc::funcs::posix01::glob","",null,null],[5,"globfree","","",null,null],[0,"mman","libc::funcs::posix01","",null,null],[5,"posix_madvise","libc::funcs::posix01::mman","",null,null],[0,"resource","libc::funcs::posix01","",null,null],[5,"getrlimit","libc::funcs::posix01::resource","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"shutdown","","",null,null],[0,"bsd44","libc::funcs","",null,null],[5,"getdtablesize","libc::funcs::bsd44","",null,null],[5,"ioctl","","",null,null],[5,"madvise","","",null,null],[5,"mincore","","",null,null]],"paths":[[4,"c_void"],[3,"glob_t"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"ifaddrs"],[3,"stat"],[3,"utimbuf"],[3,"pthread_attr_t"],[3,"sockaddr_ll"]]};
searchIndex['interpolation'] = {"items":[[0,"","interpolation","Interpolation algorithms.",null,null],[4,"EaseFunction","","",null,null],[13,"QuadraticIn","","",0,null],[13,"QuadraticOut","","",0,null],[13,"QuadraticInOut","","",0,null],[13,"CubicIn","","",0,null],[13,"CubicOut","","",0,null],[13,"CubicInOut","","",0,null],[13,"QuarticIn","","",0,null],[13,"QuarticOut","","",0,null],[13,"QuarticInOut","","",0,null],[13,"QuinticIn","","",0,null],[13,"QuinticOut","","",0,null],[13,"QuinticInOut","","",0,null],[13,"SineIn","","",0,null],[13,"SineOut","","",0,null],[13,"SineInOut","","",0,null],[13,"CircularIn","","",0,null],[13,"CircularOut","","",0,null],[13,"CircularInOut","","",0,null],[13,"ExponentialIn","","",0,null],[13,"ExponentialOut","","",0,null],[13,"ExponentialInOut","","",0,null],[13,"ElasticIn","","",0,null],[13,"ElasticOut","","",0,null],[13,"ElasticInOut","","",0,null],[13,"BackIn","","",0,null],[13,"BackOut","","",0,null],[13,"BackInOut","","",0,null],[13,"BounceIn","","",0,null],[13,"BounceOut","","",0,null],[13,"BounceInOut","","",0,null],[5,"lerp","","Performs linear interpolation.\nA linear interpolation consists of two states 'a' and 'b'.\nThe 't' variable is a factor between 0 and 1 that\ngives weight to 'a' or 'b'.\nWhen 't' is zero then 'a' has full weight.\nWhen 't' is one then 'b' has full weight.",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"quad_bez","","Performs quadratic beziér interpolation.\nThis is done by nesting linear interpolations.\nFor more information, see:",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"cub_bez","","Performs cubic beziér interpolation.\nThis is done by interpolation between two quadratic beziér.\nFor more information, see:",null,{"inputs":[{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[11,"eq","","",0,{"inputs":[{"name":"easefunction"},{"name":"easefunction"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"easefunction"},{"name":"easefunction"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"easefunction"}],"output":{"name":"easefunction"}}],[8,"Ease","","",null,null],[10,"calc","","Calculate the eased value, normalized",1,{"inputs":[{"name":"ease"},{"name":"easefunction"}],"output":{"name":"self"}}],[10,"quadratic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quadratic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quadratic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"cubic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quartic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"quintic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"sine_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"circular_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"exponential_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"elastic_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"back_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_in","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[10,"bounce_in_out","","",1,{"inputs":[{"name":"ease"}],"output":{"name":"self"}}],[8,"Spatial","","Used for interpolation over spatial structures.",null,null],[16,"Scalar","","The scalar type.",2,null],[10,"add","","Add",2,{"inputs":[{"name":"spatial"},{"name":"self"}],"output":{"name":"self"}}],[10,"sub","","Subtract",2,{"inputs":[{"name":"spatial"},{"name":"self"}],"output":{"name":"self"}}],[10,"scale","","Scales with a scalar.",2,{"inputs":[{"name":"spatial"},{"name":"scalar"}],"output":{"name":"self"}}]],"paths":[[4,"EaseFunction"],[8,"Ease"],[8,"Spatial"]]};
searchIndex['float'] = {"items":[[0,"","float","Traits for generic floats in game programming",null,null],[8,"Float","","Convenience trait for floats.",null,null],[8,"Min","","Minimum value.",null,null],[10,"min","","Returns the minimum value of self or other.",0,{"inputs":[{"name":"min"},{"name":"self"}],"output":{"name":"self"}}],[8,"Max","","Maximum value.",null,null],[10,"max","","Returns the maximum value of self or other.",1,{"inputs":[{"name":"max"},{"name":"self"}],"output":{"name":"self"}}],[8,"Signum","","The sign of the number.",null,null],[10,"signum","","Returns number representing the sign of self",2,{"inputs":[{"name":"signum"}],"output":{"name":"self"}}],[8,"Radians","","Useful constants for radians.",null,null],[10,"_90","","Returns radians corresponding to 90 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_180","","Returns radians corresponding to 180 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"_360","","Returns radians corresponding to 360 degrees.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"deg_to_rad","","Convert a value to radians from degrees.\nEquivalent to ```value * (π / 180)```.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[10,"rad_to_deg","","Convert a value to degrees from radians.\nEquivalent to ```value * (180 / π)```.",3,{"inputs":[{"name":"radians"}],"output":{"name":"self"}}],[8,"One","","Number 1.",null,null],[10,"one","","Returns 1.",4,{"inputs":[{"name":"one"}],"output":{"name":"self"}}],[8,"Zero","","Number 0.",null,null],[10,"zero","","Returns 0.",5,{"inputs":[{"name":"zero"}],"output":{"name":"self"}}],[8,"Sqrt","","Square root.",null,null],[10,"sqrt","","Returns square root.",6,{"inputs":[{"name":"sqrt"}],"output":{"name":"self"}}],[8,"Trig","","Basic trigonometry functions",null,null],[10,"sin","","Returns sine of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[10,"cos","","Returns cosine of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[10,"tan","","Returns tangent of self",7,{"inputs":[{"name":"trig"}],"output":{"name":"self"}}],[8,"Cast","","Casts into another type.",null,null],[10,"cast","","Casts into other type.",8,{"inputs":[{"name":"cast"}],"output":{"name":"t"}}],[8,"FromPrimitive","","Trait for converting from different numeric types",null,null],[10,"from_f64","","from a f64",9,{"inputs":[{"name":"fromprimitive"},{"name":"f64"}],"output":{"name":"self"}}],[10,"from_f32","","from a f32",9,{"inputs":[{"name":"fromprimitive"},{"name":"f32"}],"output":{"name":"self"}}],[10,"from_isize","","from a isze",9,{"inputs":[{"name":"fromprimitive"},{"name":"isize"}],"output":{"name":"self"}}]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex['byteorder'] = {"items":[[0,"","byteorder","This crate provides convenience methods for encoding and decoding numbers\nin either big-endian or little-endian order.",null,null],[4,"Error","","An error type for reading bytes.",null,null],[13,"UnexpectedEOF","","An unexpected EOF.",0,null],[13,"Io","","Any underlying IO error that occurs while reading bytes.",0,null],[4,"BigEndian","","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","std::io::error","",1,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","byteorder","",0,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[6,"Result","","A short-hand for `result::Result<T, byteorder::Error>`.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends `Read` with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",2,{"inputs":[{"name":"readbytesext"},{"name":"usize"}],"output":{"name":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",2,{"inputs":[{"name":"readbytesext"}],"output":{"name":"result"}}],[8,"WriteBytesExt","","Extends `Write` with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u8"}],"output":{"name":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i8"}],"output":{"name":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u16"}],"output":{"name":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i16"}],"output":{"name":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u32"}],"output":{"name":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i32"}],"output":{"name":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"u64"}],"output":{"name":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"i64"}],"output":{"name":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f32"}],"output":{"name":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",3,{"inputs":[{"name":"writebytesext"},{"name":"f64"}],"output":{"name":"result"}}],[8,"ByteOrder","","ByteOrder describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",4,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",4,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",4,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",4,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",4,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",4,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",4,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",4,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",4,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",4,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",4,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",4,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",4,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",4,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",4,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",4,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",4,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",4,null],[11,"read_u16","","",5,null],[11,"read_u32","","",5,null],[11,"read_u64","","",5,null],[11,"read_uint","","",5,null],[11,"write_u16","","",5,null],[11,"write_u32","","",5,null],[11,"write_u64","","",5,null],[11,"read_u16","","",6,null],[11,"read_u32","","",6,null],[11,"read_u64","","",6,null],[11,"read_uint","","",6,null],[11,"write_u16","","",6,null],[11,"write_u32","","",6,null],[11,"write_u64","","",6,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",2,null],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",2,null],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",2,null],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",2,null],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",2,null],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",2,null],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.",2,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",3,null],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",3,null],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",3,null],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",3,null],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",3,null],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",3,null],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",3,null],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",3,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.",3,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.",3,null]],"paths":[[4,"Error"],[3,"Error"],[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex['shader_version'] = {"items":[[0,"","shader_version","A helper library for detecting and picking compatible shaders.",null,null],[3,"Shaders","","Shader picker.",null,null],[0,"opengl","","Models versions of OpenGL",null,null],[4,"OpenGL","shader_version::opengl","",null,null],[13,"_2_0","","",0,null],[13,"_2_1","","",0,null],[13,"_3_0","","",0,null],[13,"_3_1","","",0,null],[13,"_3_2","","",0,null],[13,"_3_3","","",0,null],[13,"_4_0","","",0,null],[13,"_4_1","","",0,null],[13,"_4_2","","",0,null],[13,"_4_3","","",0,null],[13,"_4_4","","",0,null],[13,"_4_5","","",0,null],[11,"cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"opengl"},{"name":"opengl"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"opengl"}],"output":{"name":"opengl"}}],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,null],[11,"to_GLSL","","Gets GLSL version associated with OpenGL.",0,{"inputs":[{"name":"opengl"}],"output":{"name":"glsl"}}],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)",null,null],[4,"GLSL","shader_version::glsl","For OpenGL version 3.3 and above,\nthe GLSL version is the same as the OpenGL version.",null,null],[13,"_1_10","","",1,null],[13,"_1_20","","",1,null],[13,"_1_30","","",1,null],[13,"_1_40","","",1,null],[13,"_1_50","","",1,null],[13,"_3_30","","",1,null],[13,"_4_00","","",1,null],[13,"_4_10","","",1,null],[13,"_4_20","","",1,null],[13,"_4_30","","",1,null],[13,"_4_40","","",1,null],[13,"_4_50","","",1,null],[11,"cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"glsl"},{"name":"glsl"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"glsl"}],"output":{"name":"glsl"}}],[11,"to_OpenGL","","Gets OpenGL version associated with GLSL.",1,{"inputs":[{"name":"glsl"}],"output":{"name":"opengl"}}],[11,"pick_shader","","",1,{"inputs":[{"name":"glsl"},{"name":"shaders"}],"output":{"name":"option"}}],[8,"PickShader","shader_version","Implemented by shader enums.",null,null],[10,"pick_shader","","Pick shader.",2,{"inputs":[{"name":"pickshader"},{"name":"shaders"}],"output":{"name":"option"}}],[11,"new","","Creates a new shader picker.",3,{"inputs":[{"name":"shaders"}],"output":{"name":"self"}}],[11,"set","","Sets source for a shader version.",3,{"inputs":[{"name":"shaders"},{"name":"v"},{"name":"s"}],"output":{"name":"self"}}],[11,"get","","Get the closest shader to a shader version.",3,{"inputs":[{"name":"shaders"},{"name":"v"}],"output":{"name":"option"}}]],"paths":[[4,"OpenGL"],[4,"GLSL"],[8,"PickShader"],[3,"Shaders"]]};
searchIndex['pkg_config'] = {"items":[[0,"","pkg_config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility.",null,null],[3,"Config","","",null,null],[3,"Library","","",null,null],[12,"libs","","",0,null],[12,"link_paths","","",0,null],[12,"frameworks","","",0,null],[12,"framework_paths","","",0,null],[12,"include_paths","","",0,null],[5,"target_supported","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"find_library","","Simple shortcut for using all default options for finding a library.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"statik","","Indicate whether the `--static` flag should be passed.",1,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"arg","","Add an argument to pass to pkg-config.",1,{"inputs":[{"name":"config"},{"name":"s"}],"output":{"name":"config"}}],[11,"find","","Run `pkg-config` to find the library `name`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Library"],[3,"Config"]]};
searchIndex['read_color'] = {"items":[[0,"","read_color","A simple library for reading hex colors.",null,null],[5,"char_to_hex","","Converts a character into a u8 value.",null,{"inputs":[{"name":"char"}],"output":{"name":"option"}}],[5,"hex","","Reads a hex value from an iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"hex_pair","","Reads a pair of hex values, joining them in value range 0-255.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgb","","Reads RGB colors from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgba","","Reads RGBA colors from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters.",null,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}]],"paths":[]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex['khronos_api'] = {"items":[[0,"","khronos_api","This crates contains the sources of the official OpenGL repository.",null,null],[7,"GL_XML","","Content of the official `gl.xml` file.",null,null],[7,"EGL_XML","","Content of the official `egl.xml` file.",null,null],[7,"WGL_XML","","Content of the official `wgl.xml` file.",null,null],[7,"GLX_XML","","Content of the official `glx.xml` file.",null,null]],"paths":[]};
searchIndex['lazy_static'] = {"items":[[0,"","lazy_static","A macro for declaring lazily evaluated statics.",null,null],[14,"lazy_static!","","",null,null]],"paths":[]};
searchIndex['shaders_graphics2d'] = {"items":[[0,"","shaders_graphics2d","",null,null],[0,"colored","","",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::colored","",null,null],[17,"VERTEX_GLSL_150_CORE","","",null,null],[17,"FRAGMENT_GLSL_120","","",null,null],[17,"FRAGMENT_GLSL_150_CORE","","",null,null],[0,"textured","shaders_graphics2d","",null,null],[17,"VERTEX_GLSL_120","shaders_graphics2d::textured","",null,null],[17,"VERTEX_GLSL_150_CORE","","",null,null],[17,"FRAGMENT_GLSL_120","","",null,null],[17,"FRAGMENT_GLSL_150_CORE","","",null,null]],"paths":[]};
searchIndex['texture'] = {"items":[[0,"","texture","A library for texture conventions.",null,null],[8,"ImageSize","","Implemented by all images to be used with generic algorithms.",null,null],[10,"get_size","","Get the image size.",0,null],[11,"get_width","","Gets the image width.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}],[11,"get_height","","Gets the image height.",0,{"inputs":[{"name":"imagesize"}],"output":{"name":"u32"}}]],"paths":[[8,"ImageSize"]]};
initSearch(searchIndex);
