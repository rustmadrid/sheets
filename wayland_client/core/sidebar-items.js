initSidebarItems({"enum":[["ButtonState",""],["KeyState",""],["KeymapFormat",""],["OutputSubpixel",""],["OutputTransform",""],["ScrollAxis",""],["ShellFullscreenMethod","Different methods of fullscreen for a shell surface."],["ShellSurfaceResize",""],["ShmFormat",""]],"fn":[["default_display","Tries to connect to the default wayland display."]],"struct":[["Buffer","A view into a memory pool."],["Compositor","A wayland compositor."],["Display","A wayland Display."],["Keyboard","A keyboard interface."],["KeyboardId","An opaque unique identifier to a keyboard, can be tested for equality."],["Output","A physical output"],["OutputId","An opaque unique identifier to an output, can be tested for equality."],["OutputMode","Representation of an output mode"],["Pointer","A pointer interface."],["PointerId","An opaque unique identifier to a pointer, can be tested for equality."],["Region","Region represent a set of pixel."],["Registry","A Registry, giving access to the global wayland objects."],["Seat","A global wayland Seat."],["Shell","A handle to a wayland `wl_shell`."],["ShellSurface","A wayland `shell_surface`."],["Shm","The shared memory controller."],["ShmPool","A shared memory pool."],["SubCompositor","A wayland subcompositor."],["SubSurface","A wayland subsurface."],["SurfaceId","An opaque unique identifier to a surface, can be tested for equality."],["WSurface","A wayland Surface."]],"trait":[["Surface","A trait representing whatever can be used a a surface. Protocol extentions surch as EGL can define their own kind of surfaces, but they wrap a `WSurface`."]]});